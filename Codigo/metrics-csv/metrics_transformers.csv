repo_name,cc_metrics,raw_metrics,hal_metrics
transformers,"{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'C', 'col_offset': 0, 'name': 'convert_tf_checkpoint_to_pytorch', 'lineno': 30, 'complexity': 14, 'endline': 87, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\file_utils.py': [{'type': 'function', 'rank': 'B', 'col_offset': 0, 'name': 'cached_path', 'lineno': 72, 'complexity': 6, 'endline': 97, 'closures': []}, {'type': 'function', 'rank': 'B', 'col_offset': 0, 'name': 'get_from_cache', 'lineno': 161, 'complexity': 6, 'endline': 215, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 'filename_to_url', 'lineno': 48, 'complexity': 4, 'endline': 69, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 'split_s3_path', 'lineno': 100, 'complexity': 4, 'endline': 110, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 'http_get', 'lineno': 149, 'complexity': 4, 'endline': 158, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 'get_file_extension', 'lineno': 230, 'complexity': 3, 'endline': 233, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 'url_to_filename', 'lineno': 30, 'complexity': 2, 'endline': 45, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 'read_set_from_file', 'lineno': 218, 'complexity': 2, 'endline': 227, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 's3_request', 'lineno': 113, 'complexity': 1, 'endline': 129, 'closures': [{'type': 'function', 'rank': 'A', 'col_offset': 4, 'name': 'wrapper', 'lineno': 120, 'complexity': 3, 'endline': 127, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 's3_etag', 'lineno': 133, 'complexity': 1, 'endline': 138, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 's3_get', 'lineno': 142, 'complexity': 1, 'endline': 146, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\modeling.py': [{'type': 'method', 'rank': 'B', 'col_offset': 4, 'name': 'from_pretrained', 'lineno': 446, 'complexity': 10, 'endline': 532, 'classname': 'PreTrainedBertModel', 'closures': [{'type': 'function', 'rank': 'A', 'col_offset': 8, 'name': 'load', 'lineno': 515, 'complexity': 4, 'endline': 521, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'name': 'PreTrainedBertModel', 'lineno': 417, 'complexity': 7, 'endline': 532, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 421, 'complexity': 2, 'endline': 430, 'classname': 'PreTrainedBertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'init_bert_weights', 'lineno': 432, 'complexity': 5, 'endline': 443, 'classname': 'PreTrainedBertModel', 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'name': 'from_pretrained', 'lineno': 446, 'complexity': 10, 'endline': 532, 'classname': 'PreTrainedBertModel', 'closures': [{'type': 'function', 'rank': 'A', 'col_offset': 8, 'name': 'load', 'lineno': 515, 'complexity': 4, 'endline': 521, 'closures': []}]}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'init_bert_weights', 'lineno': 432, 'complexity': 5, 'endline': 443, 'classname': 'PreTrainedBertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 940, 'complexity': 5, 'endline': 964, 'classname': 'BertForQuestionAnswering', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 69, 'complexity': 4, 'endline': 123, 'classname': 'BertConfig', 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertEncoder', 'lineno': 319, 'complexity': 4, 'endline': 333, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 320, 'complexity': 2, 'endline': 323, 'classname': 'BertEncoder', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 325, 'complexity': 4, 'endline': 333, 'classname': 'BertEncoder', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 325, 'complexity': 4, 'endline': 333, 'classname': 'BertEncoder', 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertModel', 'lineno': 535, 'complexity': 4, 'endline': 615, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 579, 'complexity': 1, 'endline': 584, 'classname': 'BertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 586, 'complexity': 4, 'endline': 615, 'classname': 'BertModel', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 586, 'complexity': 4, 'endline': 615, 'classname': 'BertModel', 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertForQuestionAnswering', 'lineno': 877, 'complexity': 4, 'endline': 964, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 932, 'complexity': 1, 'endline': 938, 'classname': 'BertForQuestionAnswering', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 940, 'complexity': 5, 'endline': 964, 'classname': 'BertForQuestionAnswering', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertEmbeddings', 'lineno': 170, 'complexity': 3, 'endline': 198, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 173, 'complexity': 1, 'endline': 182, 'classname': 'BertEmbeddings', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 184, 'complexity': 2, 'endline': 198, 'classname': 'BertEmbeddings', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertIntermediate', 'lineno': 278, 'complexity': 3, 'endline': 288, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 279, 'complexity': 2, 'endline': 283, 'classname': 'BertIntermediate', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 285, 'complexity': 1, 'endline': 288, 'classname': 'BertIntermediate', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertPredictionHeadTransform', 'lineno': 351, 'complexity': 3, 'endline': 363, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 352, 'complexity': 2, 'endline': 357, 'classname': 'BertPredictionHeadTransform', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 359, 'complexity': 1, 'endline': 363, 'classname': 'BertPredictionHeadTransform', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertForPreTraining', 'lineno': 618, 'complexity': 3, 'endline': 686, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 668, 'complexity': 1, 'endline': 672, 'classname': 'BertForPreTraining', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 674, 'complexity': 3, 'endline': 686, 'classname': 'BertForPreTraining', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 674, 'complexity': 3, 'endline': 686, 'classname': 'BertForPreTraining', 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertForMaskedLM', 'lineno': 689, 'complexity': 3, 'endline': 747, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 731, 'complexity': 1, 'endline': 735, 'classname': 'BertForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 737, 'complexity': 2, 'endline': 747, 'classname': 'BertForMaskedLM', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertForNextSentencePrediction', 'lineno': 750, 'complexity': 3, 'endline': 809, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 793, 'complexity': 1, 'endline': 797, 'classname': 'BertForNextSentencePrediction', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 799, 'complexity': 2, 'endline': 809, 'classname': 'BertForNextSentencePrediction', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertForSequenceClassification', 'lineno': 812, 'complexity': 3, 'endline': 874, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 857, 'complexity': 1, 'endline': 862, 'classname': 'BertForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 864, 'complexity': 2, 'endline': 874, 'classname': 'BertForSequenceClassification', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertConfig', 'lineno': 66, 'complexity': 2, 'endline': 151, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 69, 'complexity': 4, 'endline': 123, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'from_dict', 'lineno': 127, 'complexity': 2, 'endline': 132, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'from_json_file', 'lineno': 135, 'complexity': 1, 'endline': 139, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__repr__', 'lineno': 141, 'complexity': 1, 'endline': 142, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'to_dict', 'lineno': 144, 'complexity': 1, 'endline': 147, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'to_json_string', 'lineno': 149, 'complexity': 1, 'endline': 151, 'classname': 'BertConfig', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'from_dict', 'lineno': 127, 'complexity': 2, 'endline': 132, 'classname': 'BertConfig', 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertLayerNorm', 'lineno': 154, 'complexity': 2, 'endline': 167, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 155, 'complexity': 1, 'endline': 161, 'classname': 'BertLayerNorm', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 163, 'complexity': 1, 'endline': 167, 'classname': 'BertLayerNorm', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 184, 'complexity': 2, 'endline': 198, 'classname': 'BertEmbeddings', 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertSelfAttention', 'lineno': 201, 'complexity': 2, 'endline': 249, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 202, 'complexity': 2, 'endline': 216, 'classname': 'BertSelfAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'transpose_for_scores', 'lineno': 218, 'complexity': 1, 'endline': 221, 'classname': 'BertSelfAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 223, 'complexity': 1, 'endline': 249, 'classname': 'BertSelfAttention', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 202, 'complexity': 2, 'endline': 216, 'classname': 'BertSelfAttention', 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertSelfOutput', 'lineno': 252, 'complexity': 2, 'endline': 263, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 253, 'complexity': 1, 'endline': 257, 'classname': 'BertSelfOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 259, 'complexity': 1, 'endline': 263, 'classname': 'BertSelfOutput', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertAttention', 'lineno': 266, 'complexity': 2, 'endline': 275, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 267, 'complexity': 1, 'endline': 270, 'classname': 'BertAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 272, 'complexity': 1, 'endline': 275, 'classname': 'BertAttention', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 279, 'complexity': 2, 'endline': 283, 'classname': 'BertIntermediate', 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertOutput', 'lineno': 291, 'complexity': 2, 'endline': 302, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 292, 'complexity': 1, 'endline': 296, 'classname': 'BertOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 298, 'complexity': 1, 'endline': 302, 'classname': 'BertOutput', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertLayer', 'lineno': 305, 'complexity': 2, 'endline': 316, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 306, 'complexity': 1, 'endline': 310, 'classname': 'BertLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 312, 'complexity': 1, 'endline': 316, 'classname': 'BertLayer', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 320, 'complexity': 2, 'endline': 323, 'classname': 'BertEncoder', 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertPooler', 'lineno': 336, 'complexity': 2, 'endline': 348, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 337, 'complexity': 1, 'endline': 340, 'classname': 'BertPooler', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 342, 'complexity': 1, 'endline': 348, 'classname': 'BertPooler', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 352, 'complexity': 2, 'endline': 357, 'classname': 'BertPredictionHeadTransform', 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertLMPredictionHead', 'lineno': 366, 'complexity': 2, 'endline': 382, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 367, 'complexity': 1, 'endline': 377, 'classname': 'BertLMPredictionHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 379, 'complexity': 1, 'endline': 382, 'classname': 'BertLMPredictionHead', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertOnlyMLMHead', 'lineno': 385, 'complexity': 2, 'endline': 392, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 386, 'complexity': 1, 'endline': 388, 'classname': 'BertOnlyMLMHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 390, 'complexity': 1, 'endline': 392, 'classname': 'BertOnlyMLMHead', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertOnlyNSPHead', 'lineno': 395, 'complexity': 2, 'endline': 402, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 396, 'complexity': 1, 'endline': 398, 'classname': 'BertOnlyNSPHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 400, 'complexity': 1, 'endline': 402, 'classname': 'BertOnlyNSPHead', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertPreTrainingHeads', 'lineno': 405, 'complexity': 2, 'endline': 414, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 406, 'complexity': 1, 'endline': 409, 'classname': 'BertPreTrainingHeads', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 411, 'complexity': 1, 'endline': 414, 'classname': 'BertPreTrainingHeads', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 421, 'complexity': 2, 'endline': 430, 'classname': 'PreTrainedBertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 737, 'complexity': 2, 'endline': 747, 'classname': 'BertForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 799, 'complexity': 2, 'endline': 809, 'classname': 'BertForNextSentencePrediction', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 864, 'complexity': 2, 'endline': 874, 'classname': 'BertForSequenceClassification', 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 'gelu', 'lineno': 51, 'complexity': 1, 'endline': 56, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 'swish', 'lineno': 59, 'complexity': 1, 'endline': 60, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'from_json_file', 'lineno': 135, 'complexity': 1, 'endline': 139, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__repr__', 'lineno': 141, 'complexity': 1, 'endline': 142, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'to_dict', 'lineno': 144, 'complexity': 1, 'endline': 147, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'to_json_string', 'lineno': 149, 'complexity': 1, 'endline': 151, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 155, 'complexity': 1, 'endline': 161, 'classname': 'BertLayerNorm', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 163, 'complexity': 1, 'endline': 167, 'classname': 'BertLayerNorm', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 173, 'complexity': 1, 'endline': 182, 'classname': 'BertEmbeddings', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'transpose_for_scores', 'lineno': 218, 'complexity': 1, 'endline': 221, 'classname': 'BertSelfAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 223, 'complexity': 1, 'endline': 249, 'classname': 'BertSelfAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 253, 'complexity': 1, 'endline': 257, 'classname': 'BertSelfOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 259, 'complexity': 1, 'endline': 263, 'classname': 'BertSelfOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 267, 'complexity': 1, 'endline': 270, 'classname': 'BertAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 272, 'complexity': 1, 'endline': 275, 'classname': 'BertAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 285, 'complexity': 1, 'endline': 288, 'classname': 'BertIntermediate', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 292, 'complexity': 1, 'endline': 296, 'classname': 'BertOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 298, 'complexity': 1, 'endline': 302, 'classname': 'BertOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 306, 'complexity': 1, 'endline': 310, 'classname': 'BertLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 312, 'complexity': 1, 'endline': 316, 'classname': 'BertLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 337, 'complexity': 1, 'endline': 340, 'classname': 'BertPooler', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 342, 'complexity': 1, 'endline': 348, 'classname': 'BertPooler', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 359, 'complexity': 1, 'endline': 363, 'classname': 'BertPredictionHeadTransform', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 367, 'complexity': 1, 'endline': 377, 'classname': 'BertLMPredictionHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 379, 'complexity': 1, 'endline': 382, 'classname': 'BertLMPredictionHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 386, 'complexity': 1, 'endline': 388, 'classname': 'BertOnlyMLMHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 390, 'complexity': 1, 'endline': 392, 'classname': 'BertOnlyMLMHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 396, 'complexity': 1, 'endline': 398, 'classname': 'BertOnlyNSPHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 400, 'complexity': 1, 'endline': 402, 'classname': 'BertOnlyNSPHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 406, 'complexity': 1, 'endline': 409, 'classname': 'BertPreTrainingHeads', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'forward', 'lineno': 411, 'complexity': 1, 'endline': 414, 'classname': 'BertPreTrainingHeads', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 579, 'complexity': 1, 'endline': 584, 'classname': 'BertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 668, 'complexity': 1, 'endline': 672, 'classname': 'BertForPreTraining', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 731, 'complexity': 1, 'endline': 735, 'classname': 'BertForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 793, 'complexity': 1, 'endline': 797, 'classname': 'BertForNextSentencePrediction', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 857, 'complexity': 1, 'endline': 862, 'classname': 'BertForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 932, 'complexity': 1, 'endline': 938, 'classname': 'BertForQuestionAnswering', 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\optimization.py': [{'type': 'method', 'rank': 'B', 'col_offset': 4, 'name': 'step', 'lineno': 93, 'complexity': 10, 'endline': 161, 'classname': 'BertAdam', 'closures': []}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'name': 'BertAdam', 'lineno': 44, 'complexity': 9, 'endline': 161, 'methods': [{'type': 'method', 'rank': 'B', 'col_offset': 4, 'name': '__init__', 'lineno': 58, 'complexity': 8, 'endline': 76, 'classname': 'BertAdam', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'get_lr', 'lineno': 78, 'complexity': 5, 'endline': 91, 'classname': 'BertAdam', 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'name': 'step', 'lineno': 93, 'complexity': 10, 'endline': 161, 'classname': 'BertAdam', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'name': '__init__', 'lineno': 58, 'complexity': 8, 'endline': 76, 'classname': 'BertAdam', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'get_lr', 'lineno': 78, 'complexity': 5, 'endline': 91, 'classname': 'BertAdam', 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 'warmup_cosine', 'lineno': 22, 'complexity': 2, 'endline': 25, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 'warmup_constant', 'lineno': 27, 'complexity': 2, 'endline': 30, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 'warmup_linear', 'lineno': 32, 'complexity': 2, 'endline': 35, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\tokenization.py': [{'type': 'method', 'rank': 'C', 'col_offset': 4, 'name': '_is_chinese_char', 'lineno': 231, 'complexity': 17, 'endline': 251, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'function', 'rank': 'B', 'col_offset': 0, 'name': '_is_punctuation', 'lineno': 353, 'complexity': 10, 'endline': 366, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'name': 'tokenize', 'lineno': 275, 'complexity': 9, 'endline': 326, 'classname': 'WordpieceTokenizer', 'closures': []}, {'type': 'function', 'rank': 'B', 'col_offset': 0, 'name': '_is_whitespace', 'lineno': 329, 'complexity': 6, 'endline': 338, 'closures': []}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'name': 'BasicTokenizer', 'lineno': 154, 'complexity': 6, 'endline': 264, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 157, 'complexity': 1, 'endline': 163, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'tokenize', 'lineno': 165, 'complexity': 3, 'endline': 185, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '_run_strip_accents', 'lineno': 187, 'complexity': 3, 'endline': 196, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '_run_split_on_punc', 'lineno': 198, 'complexity': 5, 'endline': 216, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '_tokenize_chinese_chars', 'lineno': 218, 'complexity': 3, 'endline': 229, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'C', 'col_offset': 4, 'name': '_is_chinese_char', 'lineno': 231, 'complexity': 17, 'endline': 251, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'name': '_clean_text', 'lineno': 253, 'complexity': 6, 'endline': 264, 'classname': 'BasicTokenizer', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'name': '_clean_text', 'lineno': 253, 'complexity': 6, 'endline': 264, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'name': 'WordpieceTokenizer', 'lineno': 267, 'complexity': 6, 'endline': 326, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 270, 'complexity': 1, 'endline': 273, 'classname': 'WordpieceTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'name': 'tokenize', 'lineno': 275, 'complexity': 9, 'endline': 326, 'classname': 'WordpieceTokenizer', 'closures': []}]}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': '_is_control', 'lineno': 341, 'complexity': 5, 'endline': 350, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '_run_split_on_punc', 'lineno': 198, 'complexity': 5, 'endline': 216, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'name': 'BertTokenizer', 'lineno': 88, 'complexity': 4, 'endline': 151, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 90, 'complexity': 3, 'endline': 99, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'tokenize', 'lineno': 101, 'complexity': 3, 'endline': 106, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'convert_tokens_to_ids', 'lineno': 108, 'complexity': 2, 'endline': 113, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'convert_ids_to_tokens', 'lineno': 115, 'complexity': 2, 'endline': 120, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'from_pretrained', 'lineno': 123, 'complexity': 4, 'endline': 151, 'classname': 'BertTokenizer', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'from_pretrained', 'lineno': 123, 'complexity': 4, 'endline': 151, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 'convert_to_unicode', 'lineno': 41, 'complexity': 3, 'endline': 48, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 'printable_text', 'lineno': 51, 'complexity': 3, 'endline': 61, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 'load_vocab', 'lineno': 64, 'complexity': 3, 'endline': 76, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 90, 'complexity': 3, 'endline': 99, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'tokenize', 'lineno': 101, 'complexity': 3, 'endline': 106, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'tokenize', 'lineno': 165, 'complexity': 3, 'endline': 185, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '_run_strip_accents', 'lineno': 187, 'complexity': 3, 'endline': 196, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '_tokenize_chinese_chars', 'lineno': 218, 'complexity': 3, 'endline': 229, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'name': 'whitespace_tokenize', 'lineno': 79, 'complexity': 2, 'endline': 85, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'convert_tokens_to_ids', 'lineno': 108, 'complexity': 2, 'endline': 113, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': 'convert_ids_to_tokens', 'lineno': 115, 'complexity': 2, 'endline': 120, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 157, 'complexity': 1, 'endline': 163, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'name': '__init__', 'lineno': 270, 'complexity': 1, 'endline': 273, 'classname': 'WordpieceTokenizer', 'closures': []}]}","{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\setup.py': {'loc': 30, 'lloc': 2, 'sloc': 29, 'comments': 0, 'multi': 0, 'blank': 1, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': {'loc': 112, 'lloc': 68, 'sloc': 82, 'comments': 20, 'multi': 0, 'blank': 9, 'single_comments': 21}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\file_utils.py': {'loc': 233, 'lloc': 149, 'sloc': 138, 'comments': 14, 'multi': 32, 'blank': 48, 'single_comments': 15}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\modeling.py': {'loc': 964, 'lloc': 452, 'sloc': 474, 'comments': 48, 'multi': 291, 'blank': 147, 'single_comments': 52}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\optimization.py': {'loc': 161, 'lloc': 85, 'sloc': 89, 'comments': 31, 'multi': 18, 'blank': 22, 'single_comments': 32}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\tokenization.py': {'loc': 366, 'lloc': 235, 'sloc': 237, 'comments': 47, 'multi': 20, 'blank': 50, 'single_comments': 59}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\__init__.py': {'loc': 5, 'lloc': 3, 'sloc': 5, 'comments': 0, 'multi': 0, 'blank': 0, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\__main__.py': {'loc': 19, 'lloc': 14, 'sloc': 16, 'comments': 2, 'multi': 0, 'blank': 1, 'single_comments': 2}}","{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\setup.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': {'total': [5, 20, 12, 22, 25, 34, 98.04820237218406, 157.89111045234063, 2.75, 434.2005537439367, 24.122252985774264, 0.05263037015078], 'functions': [['convert_tf_checkpoint_to_pytorch', [5, 18, 11, 20, 23, 31, 86.66829050039843, 140.2304206377674, 2.777777777777777, 389.52894621602053, 21.64049701200114, 0.046743473545922]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\file_utils.py': {'total': [9, 32, 19, 33, 41, 52, 188.52932501298082, 278.59270424014034, 4.640625, 1292.8442681144013, 71.82468156191118, 0.092864234746713], 'functions': [['url_to_filename', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['filename_to_url', [3, 6, 4, 6, 9, 10, 20.264662506490406, 31.699250014423125, 1.5, 47.548875021634686, 2.641604167868593, 0.010566416671474]], ['cached_path', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['split_s3_path', [2, 4, 3, 4, 6, 7, 10.0, 18.094737505048094, 1.0, 18.094737505048094, 1.005263194724894, 0.006031579168349]], ['s3_request', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['s3_etag', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['s3_get', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['http_get', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_from_cache', [4, 7, 4, 7, 11, 11, 27.651484454403228, 38.053747805010275, 2.0, 76.10749561002055, 4.228194200556697, 0.012684582601670002]], ['read_set_from_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_file_extension', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\modeling.py': {'total': [14, 91, 79, 135, 105, 214, 645.5122811668878, 1436.8485407805501, 10.384615384615385, 14921.119461951868, 828.9510812195482, 0.47894951359351606], 'functions': [['gelu', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['swish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_dict', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['from_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__repr__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_json_string', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 10, 8, 14, 15, 22, 44.82892142331043, 85.95159310338741, 3.5, 300.83057586185595, 16.712809770103107, 0.028650531034462003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 6, 3, 6, 8, 9, 17.509775004326936, 27.0, 1.0, 27.0, 1.5, 0.009000000000000001]], ['__init__', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['transpose_for_scores', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['forward', [3, 7, 7, 10, 10, 17, 24.406371956566698, 56.472777613085164, 2.1428571428571432, 121.0130948851825, 6.722949715843472, 0.018824259204361]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['init_bert_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['from_pretrained', [7, 17, 10, 19, 24, 29, 89.13835275565901, 132.96391252091354, 3.9117647058823533, 520.1235401553382, 28.895752230852125, 0.044321304173637006]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 9, 8, 12, 14, 20, 40.13896548741762, 76.14709844115208, 3.333333333333333, 253.82366147050695, 14.101314526139275, 0.02538236614705]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 5, 9, 12, 14, 32.0, 50.18947501009619, 2.25, 112.92631877271643, 6.273684376262024, 0.016729825003365003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 12, 12, 19, 18, 31, 58.52932501298082, 129.26767504471167, 4.75, 614.0214564623805, 34.112303136798914, 0.043089225014903004]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\optimization.py': {'total': [16, 66, 51, 89, 82, 140, 462.93001187765793, 890.0572806465318, 10.787878787878787, 9601.830057883797, 533.4350032157665, 0.29668576021551], 'functions': [['warmup_cosine', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['warmup_constant', [2, 2, 2, 4, 4, 6, 4.0, 12.0, 2.0, 24.0, 1.333333333333333, 0.004]], ['warmup_linear', [3, 3, 3, 6, 6, 9, 9.509775004326938, 23.264662506490403, 3.0, 69.79398751947122, 3.877443751081734, 0.007754887502163001]], ['__init__', [8, 18, 18, 26, 26, 44, 99.05865002596161, 206.81934759820808, 5.777777777777778, 1194.9562305674244, 66.3864572537458, 0.068939782532736]], ['get_lr', [5, 9, 5, 9, 14, 14, 40.13896548741762, 53.30296890880645, 2.5, 133.25742227201613, 7.4031901262231194, 0.017767656302935]], ['step', [10, 27, 18, 34, 37, 52, 161.6012435072873, 270.8915750127054, 6.296296296296297, 1705.6136204503675, 94.75631224724265, 0.090297191670901]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\tokenization.py': {'total': [14, 116, 71, 150, 130, 221, 848.8287643436047, 1551.9432866792883, 9.051724137931034, 14047.762508734937, 780.4312504852743, 0.5173144288930961], 'functions': [['convert_to_unicode', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['printable_text', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['load_vocab', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['whitespace_tokenize', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_ids', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_ids_to_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_run_strip_accents', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_run_split_on_punc', [3, 3, 3, 5, 6, 8, 9.509775004326938, 20.67970000576925, 2.5, 51.69925001442312, 2.87218055635684, 0.006893233335256]], ['_tokenize_chinese_chars', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_is_chinese_char', [4, 41, 25, 56, 45, 81, 227.65963218934144, 444.84010080270366, 2.731707317073171, 1215.1729582903126, 67.50960879390625, 0.148280033600901]], ['_clean_text', [2, 6, 3, 7, 8, 10, 17.509775004326936, 30.0, 1.166666666666666, 35.0, 1.9444444444444442, 0.01]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [6, 12, 8, 16, 18, 24, 58.52932501298082, 100.07820003461549, 4.0, 400.31280013846197, 22.23960000769233, 0.033359400011538004]], ['_is_whitespace', [2, 11, 6, 14, 13, 20, 40.053747805010275, 74.00879436282185, 1.272727272727272, 94.1930110072278, 5.232945055957099, 0.024669598120940002]], ['_is_control', [2, 7, 4, 9, 9, 13, 21.651484454403228, 41.20902501875006, 1.2857142857142851, 52.98303216696437, 2.943501787053576, 0.013736341672916002]], ['_is_punctuation', [4, 21, 13, 28, 25, 41, 100.23866587835397, 190.3981037807637, 2.666666666666666, 507.7282767487032, 28.207126486039066, 0.063466034593587]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\__init__.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\__main__.py': {'total': [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001], 'functions': []}}"
transformers,"{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'C', 'complexity': 14, 'lineno': 30, 'name': 'convert_tf_checkpoint_to_pytorch', 'col_offset': 0, 'endline': 87, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\file_utils.py': [{'type': 'function', 'rank': 'B', 'complexity': 6, 'lineno': 72, 'name': 'cached_path', 'col_offset': 0, 'endline': 97, 'closures': []}, {'type': 'function', 'rank': 'B', 'complexity': 6, 'lineno': 161, 'name': 'get_from_cache', 'col_offset': 0, 'endline': 215, 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 4, 'lineno': 48, 'name': 'filename_to_url', 'col_offset': 0, 'endline': 69, 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 4, 'lineno': 100, 'name': 'split_s3_path', 'col_offset': 0, 'endline': 110, 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 4, 'lineno': 149, 'name': 'http_get', 'col_offset': 0, 'endline': 158, 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 3, 'lineno': 230, 'name': 'get_file_extension', 'col_offset': 0, 'endline': 233, 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'lineno': 30, 'name': 'url_to_filename', 'col_offset': 0, 'endline': 45, 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'lineno': 218, 'name': 'read_set_from_file', 'col_offset': 0, 'endline': 227, 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'lineno': 113, 'name': 's3_request', 'col_offset': 0, 'endline': 129, 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 3, 'lineno': 120, 'name': 'wrapper', 'col_offset': 4, 'endline': 127, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'lineno': 133, 'name': 's3_etag', 'col_offset': 0, 'endline': 138, 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'lineno': 142, 'name': 's3_get', 'col_offset': 0, 'endline': 146, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\modeling.py': [{'type': 'method', 'rank': 'B', 'complexity': 10, 'lineno': 446, 'name': 'from_pretrained', 'col_offset': 4, 'classname': 'PreTrainedBertModel', 'endline': 532, 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 4, 'lineno': 515, 'name': 'load', 'col_offset': 8, 'endline': 521, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'complexity': 7, 'lineno': 417, 'name': 'PreTrainedBertModel', 'col_offset': 0, 'endline': 532, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 421, 'name': '__init__', 'col_offset': 4, 'classname': 'PreTrainedBertModel', 'endline': 430, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 432, 'name': 'init_bert_weights', 'col_offset': 4, 'classname': 'PreTrainedBertModel', 'endline': 443, 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 10, 'lineno': 446, 'name': 'from_pretrained', 'col_offset': 4, 'classname': 'PreTrainedBertModel', 'endline': 532, 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 4, 'lineno': 515, 'name': 'load', 'col_offset': 8, 'endline': 521, 'closures': []}]}]}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 432, 'name': 'init_bert_weights', 'col_offset': 4, 'classname': 'PreTrainedBertModel', 'endline': 443, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 941, 'name': 'forward', 'col_offset': 4, 'classname': 'BertForQuestionAnswering', 'endline': 965, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'lineno': 69, 'name': '__init__', 'col_offset': 4, 'classname': 'BertConfig', 'endline': 123, 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'lineno': 319, 'name': 'BertEncoder', 'col_offset': 0, 'endline': 333, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 320, 'name': '__init__', 'col_offset': 4, 'classname': 'BertEncoder', 'endline': 323, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'lineno': 325, 'name': 'forward', 'col_offset': 4, 'classname': 'BertEncoder', 'endline': 333, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'lineno': 325, 'name': 'forward', 'col_offset': 4, 'classname': 'BertEncoder', 'endline': 333, 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'lineno': 535, 'name': 'BertModel', 'col_offset': 0, 'endline': 615, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 579, 'name': '__init__', 'col_offset': 4, 'classname': 'BertModel', 'endline': 584, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'lineno': 586, 'name': 'forward', 'col_offset': 4, 'classname': 'BertModel', 'endline': 615, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'lineno': 586, 'name': 'forward', 'col_offset': 4, 'classname': 'BertModel', 'endline': 615, 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'lineno': 878, 'name': 'BertForQuestionAnswering', 'col_offset': 0, 'endline': 965, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 933, 'name': '__init__', 'col_offset': 4, 'classname': 'BertForQuestionAnswering', 'endline': 939, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 941, 'name': 'forward', 'col_offset': 4, 'classname': 'BertForQuestionAnswering', 'endline': 965, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'lineno': 170, 'name': 'BertEmbeddings', 'col_offset': 0, 'endline': 198, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 173, 'name': '__init__', 'col_offset': 4, 'classname': 'BertEmbeddings', 'endline': 182, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 184, 'name': 'forward', 'col_offset': 4, 'classname': 'BertEmbeddings', 'endline': 198, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'lineno': 278, 'name': 'BertIntermediate', 'col_offset': 0, 'endline': 288, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 279, 'name': '__init__', 'col_offset': 4, 'classname': 'BertIntermediate', 'endline': 283, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 285, 'name': 'forward', 'col_offset': 4, 'classname': 'BertIntermediate', 'endline': 288, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'lineno': 351, 'name': 'BertPredictionHeadTransform', 'col_offset': 0, 'endline': 363, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 352, 'name': '__init__', 'col_offset': 4, 'classname': 'BertPredictionHeadTransform', 'endline': 357, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 359, 'name': 'forward', 'col_offset': 4, 'classname': 'BertPredictionHeadTransform', 'endline': 363, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'lineno': 618, 'name': 'BertForPreTraining', 'col_offset': 0, 'endline': 686, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 668, 'name': '__init__', 'col_offset': 4, 'classname': 'BertForPreTraining', 'endline': 672, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 674, 'name': 'forward', 'col_offset': 4, 'classname': 'BertForPreTraining', 'endline': 686, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 674, 'name': 'forward', 'col_offset': 4, 'classname': 'BertForPreTraining', 'endline': 686, 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'lineno': 689, 'name': 'BertForMaskedLM', 'col_offset': 0, 'endline': 747, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 731, 'name': '__init__', 'col_offset': 4, 'classname': 'BertForMaskedLM', 'endline': 735, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 737, 'name': 'forward', 'col_offset': 4, 'classname': 'BertForMaskedLM', 'endline': 747, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'lineno': 750, 'name': 'BertForNextSentencePrediction', 'col_offset': 0, 'endline': 809, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 793, 'name': '__init__', 'col_offset': 4, 'classname': 'BertForNextSentencePrediction', 'endline': 797, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 799, 'name': 'forward', 'col_offset': 4, 'classname': 'BertForNextSentencePrediction', 'endline': 809, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'lineno': 812, 'name': 'BertForSequenceClassification', 'col_offset': 0, 'endline': 875, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 857, 'name': '__init__', 'col_offset': 4, 'classname': 'BertForSequenceClassification', 'endline': 863, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 865, 'name': 'forward', 'col_offset': 4, 'classname': 'BertForSequenceClassification', 'endline': 875, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 66, 'name': 'BertConfig', 'col_offset': 0, 'endline': 151, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 4, 'lineno': 69, 'name': '__init__', 'col_offset': 4, 'classname': 'BertConfig', 'endline': 123, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 127, 'name': 'from_dict', 'col_offset': 4, 'classname': 'BertConfig', 'endline': 132, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 135, 'name': 'from_json_file', 'col_offset': 4, 'classname': 'BertConfig', 'endline': 139, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 141, 'name': '__repr__', 'col_offset': 4, 'classname': 'BertConfig', 'endline': 142, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 144, 'name': 'to_dict', 'col_offset': 4, 'classname': 'BertConfig', 'endline': 147, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 149, 'name': 'to_json_string', 'col_offset': 4, 'classname': 'BertConfig', 'endline': 151, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 127, 'name': 'from_dict', 'col_offset': 4, 'classname': 'BertConfig', 'endline': 132, 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 154, 'name': 'BertLayerNorm', 'col_offset': 0, 'endline': 167, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 155, 'name': '__init__', 'col_offset': 4, 'classname': 'BertLayerNorm', 'endline': 161, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 163, 'name': 'forward', 'col_offset': 4, 'classname': 'BertLayerNorm', 'endline': 167, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 184, 'name': 'forward', 'col_offset': 4, 'classname': 'BertEmbeddings', 'endline': 198, 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 201, 'name': 'BertSelfAttention', 'col_offset': 0, 'endline': 249, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 202, 'name': '__init__', 'col_offset': 4, 'classname': 'BertSelfAttention', 'endline': 216, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 218, 'name': 'transpose_for_scores', 'col_offset': 4, 'classname': 'BertSelfAttention', 'endline': 221, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 223, 'name': 'forward', 'col_offset': 4, 'classname': 'BertSelfAttention', 'endline': 249, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 202, 'name': '__init__', 'col_offset': 4, 'classname': 'BertSelfAttention', 'endline': 216, 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 252, 'name': 'BertSelfOutput', 'col_offset': 0, 'endline': 263, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 253, 'name': '__init__', 'col_offset': 4, 'classname': 'BertSelfOutput', 'endline': 257, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 259, 'name': 'forward', 'col_offset': 4, 'classname': 'BertSelfOutput', 'endline': 263, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 266, 'name': 'BertAttention', 'col_offset': 0, 'endline': 275, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 267, 'name': '__init__', 'col_offset': 4, 'classname': 'BertAttention', 'endline': 270, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 272, 'name': 'forward', 'col_offset': 4, 'classname': 'BertAttention', 'endline': 275, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 279, 'name': '__init__', 'col_offset': 4, 'classname': 'BertIntermediate', 'endline': 283, 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 291, 'name': 'BertOutput', 'col_offset': 0, 'endline': 302, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 292, 'name': '__init__', 'col_offset': 4, 'classname': 'BertOutput', 'endline': 296, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 298, 'name': 'forward', 'col_offset': 4, 'classname': 'BertOutput', 'endline': 302, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 305, 'name': 'BertLayer', 'col_offset': 0, 'endline': 316, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 306, 'name': '__init__', 'col_offset': 4, 'classname': 'BertLayer', 'endline': 310, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 312, 'name': 'forward', 'col_offset': 4, 'classname': 'BertLayer', 'endline': 316, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 320, 'name': '__init__', 'col_offset': 4, 'classname': 'BertEncoder', 'endline': 323, 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 336, 'name': 'BertPooler', 'col_offset': 0, 'endline': 348, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 337, 'name': '__init__', 'col_offset': 4, 'classname': 'BertPooler', 'endline': 340, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 342, 'name': 'forward', 'col_offset': 4, 'classname': 'BertPooler', 'endline': 348, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 352, 'name': '__init__', 'col_offset': 4, 'classname': 'BertPredictionHeadTransform', 'endline': 357, 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 366, 'name': 'BertLMPredictionHead', 'col_offset': 0, 'endline': 382, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 367, 'name': '__init__', 'col_offset': 4, 'classname': 'BertLMPredictionHead', 'endline': 377, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 379, 'name': 'forward', 'col_offset': 4, 'classname': 'BertLMPredictionHead', 'endline': 382, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 385, 'name': 'BertOnlyMLMHead', 'col_offset': 0, 'endline': 392, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 386, 'name': '__init__', 'col_offset': 4, 'classname': 'BertOnlyMLMHead', 'endline': 388, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 390, 'name': 'forward', 'col_offset': 4, 'classname': 'BertOnlyMLMHead', 'endline': 392, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 395, 'name': 'BertOnlyNSPHead', 'col_offset': 0, 'endline': 402, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 396, 'name': '__init__', 'col_offset': 4, 'classname': 'BertOnlyNSPHead', 'endline': 398, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 400, 'name': 'forward', 'col_offset': 4, 'classname': 'BertOnlyNSPHead', 'endline': 402, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 405, 'name': 'BertPreTrainingHeads', 'col_offset': 0, 'endline': 414, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 406, 'name': '__init__', 'col_offset': 4, 'classname': 'BertPreTrainingHeads', 'endline': 409, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 411, 'name': 'forward', 'col_offset': 4, 'classname': 'BertPreTrainingHeads', 'endline': 414, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 421, 'name': '__init__', 'col_offset': 4, 'classname': 'PreTrainedBertModel', 'endline': 430, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 737, 'name': 'forward', 'col_offset': 4, 'classname': 'BertForMaskedLM', 'endline': 747, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 799, 'name': 'forward', 'col_offset': 4, 'classname': 'BertForNextSentencePrediction', 'endline': 809, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 865, 'name': 'forward', 'col_offset': 4, 'classname': 'BertForSequenceClassification', 'endline': 875, 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'lineno': 51, 'name': 'gelu', 'col_offset': 0, 'endline': 56, 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'lineno': 59, 'name': 'swish', 'col_offset': 0, 'endline': 60, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 135, 'name': 'from_json_file', 'col_offset': 4, 'classname': 'BertConfig', 'endline': 139, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 141, 'name': '__repr__', 'col_offset': 4, 'classname': 'BertConfig', 'endline': 142, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 144, 'name': 'to_dict', 'col_offset': 4, 'classname': 'BertConfig', 'endline': 147, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 149, 'name': 'to_json_string', 'col_offset': 4, 'classname': 'BertConfig', 'endline': 151, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 155, 'name': '__init__', 'col_offset': 4, 'classname': 'BertLayerNorm', 'endline': 161, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 163, 'name': 'forward', 'col_offset': 4, 'classname': 'BertLayerNorm', 'endline': 167, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 173, 'name': '__init__', 'col_offset': 4, 'classname': 'BertEmbeddings', 'endline': 182, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 218, 'name': 'transpose_for_scores', 'col_offset': 4, 'classname': 'BertSelfAttention', 'endline': 221, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 223, 'name': 'forward', 'col_offset': 4, 'classname': 'BertSelfAttention', 'endline': 249, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 253, 'name': '__init__', 'col_offset': 4, 'classname': 'BertSelfOutput', 'endline': 257, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 259, 'name': 'forward', 'col_offset': 4, 'classname': 'BertSelfOutput', 'endline': 263, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 267, 'name': '__init__', 'col_offset': 4, 'classname': 'BertAttention', 'endline': 270, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 272, 'name': 'forward', 'col_offset': 4, 'classname': 'BertAttention', 'endline': 275, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 285, 'name': 'forward', 'col_offset': 4, 'classname': 'BertIntermediate', 'endline': 288, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 292, 'name': '__init__', 'col_offset': 4, 'classname': 'BertOutput', 'endline': 296, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 298, 'name': 'forward', 'col_offset': 4, 'classname': 'BertOutput', 'endline': 302, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 306, 'name': '__init__', 'col_offset': 4, 'classname': 'BertLayer', 'endline': 310, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 312, 'name': 'forward', 'col_offset': 4, 'classname': 'BertLayer', 'endline': 316, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 337, 'name': '__init__', 'col_offset': 4, 'classname': 'BertPooler', 'endline': 340, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 342, 'name': 'forward', 'col_offset': 4, 'classname': 'BertPooler', 'endline': 348, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 359, 'name': 'forward', 'col_offset': 4, 'classname': 'BertPredictionHeadTransform', 'endline': 363, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 367, 'name': '__init__', 'col_offset': 4, 'classname': 'BertLMPredictionHead', 'endline': 377, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 379, 'name': 'forward', 'col_offset': 4, 'classname': 'BertLMPredictionHead', 'endline': 382, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 386, 'name': '__init__', 'col_offset': 4, 'classname': 'BertOnlyMLMHead', 'endline': 388, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 390, 'name': 'forward', 'col_offset': 4, 'classname': 'BertOnlyMLMHead', 'endline': 392, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 396, 'name': '__init__', 'col_offset': 4, 'classname': 'BertOnlyNSPHead', 'endline': 398, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 400, 'name': 'forward', 'col_offset': 4, 'classname': 'BertOnlyNSPHead', 'endline': 402, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 406, 'name': '__init__', 'col_offset': 4, 'classname': 'BertPreTrainingHeads', 'endline': 409, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 411, 'name': 'forward', 'col_offset': 4, 'classname': 'BertPreTrainingHeads', 'endline': 414, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 579, 'name': '__init__', 'col_offset': 4, 'classname': 'BertModel', 'endline': 584, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 668, 'name': '__init__', 'col_offset': 4, 'classname': 'BertForPreTraining', 'endline': 672, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 731, 'name': '__init__', 'col_offset': 4, 'classname': 'BertForMaskedLM', 'endline': 735, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 793, 'name': '__init__', 'col_offset': 4, 'classname': 'BertForNextSentencePrediction', 'endline': 797, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 857, 'name': '__init__', 'col_offset': 4, 'classname': 'BertForSequenceClassification', 'endline': 863, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 933, 'name': '__init__', 'col_offset': 4, 'classname': 'BertForQuestionAnswering', 'endline': 939, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\optimization.py': [{'type': 'method', 'rank': 'B', 'complexity': 10, 'lineno': 93, 'name': 'step', 'col_offset': 4, 'classname': 'BertAdam', 'endline': 161, 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 9, 'lineno': 44, 'name': 'BertAdam', 'col_offset': 0, 'endline': 161, 'methods': [{'type': 'method', 'rank': 'B', 'complexity': 8, 'lineno': 58, 'name': '__init__', 'col_offset': 4, 'classname': 'BertAdam', 'endline': 76, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 78, 'name': 'get_lr', 'col_offset': 4, 'classname': 'BertAdam', 'endline': 91, 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 10, 'lineno': 93, 'name': 'step', 'col_offset': 4, 'classname': 'BertAdam', 'endline': 161, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 8, 'lineno': 58, 'name': '__init__', 'col_offset': 4, 'classname': 'BertAdam', 'endline': 76, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 78, 'name': 'get_lr', 'col_offset': 4, 'classname': 'BertAdam', 'endline': 91, 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'lineno': 22, 'name': 'warmup_cosine', 'col_offset': 0, 'endline': 25, 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'lineno': 27, 'name': 'warmup_constant', 'col_offset': 0, 'endline': 30, 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'lineno': 32, 'name': 'warmup_linear', 'col_offset': 0, 'endline': 35, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\tokenization.py': [{'type': 'method', 'rank': 'C', 'complexity': 17, 'lineno': 220, 'name': '_is_chinese_char', 'col_offset': 4, 'classname': 'BasicTokenizer', 'endline': 240, 'closures': []}, {'type': 'function', 'rank': 'B', 'complexity': 10, 'lineno': 340, 'name': '_is_punctuation', 'col_offset': 0, 'endline': 353, 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'lineno': 264, 'name': 'tokenize', 'col_offset': 4, 'classname': 'WordpieceTokenizer', 'endline': 313, 'closures': []}, {'type': 'function', 'rank': 'B', 'complexity': 6, 'lineno': 316, 'name': '_is_whitespace', 'col_offset': 0, 'endline': 325, 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'lineno': 144, 'name': 'BasicTokenizer', 'col_offset': 0, 'endline': 253, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 147, 'name': '__init__', 'col_offset': 4, 'classname': 'BasicTokenizer', 'endline': 153, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 155, 'name': 'tokenize', 'col_offset': 4, 'classname': 'BasicTokenizer', 'endline': 174, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 176, 'name': '_run_strip_accents', 'col_offset': 4, 'classname': 'BasicTokenizer', 'endline': 185, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 187, 'name': '_run_split_on_punc', 'col_offset': 4, 'classname': 'BasicTokenizer', 'endline': 205, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 207, 'name': '_tokenize_chinese_chars', 'col_offset': 4, 'classname': 'BasicTokenizer', 'endline': 218, 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 17, 'lineno': 220, 'name': '_is_chinese_char', 'col_offset': 4, 'classname': 'BasicTokenizer', 'endline': 240, 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'lineno': 242, 'name': '_clean_text', 'col_offset': 4, 'classname': 'BasicTokenizer', 'endline': 253, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'lineno': 242, 'name': '_clean_text', 'col_offset': 4, 'classname': 'BasicTokenizer', 'endline': 253, 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'lineno': 256, 'name': 'WordpieceTokenizer', 'col_offset': 0, 'endline': 313, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 259, 'name': '__init__', 'col_offset': 4, 'classname': 'WordpieceTokenizer', 'endline': 262, 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'lineno': 264, 'name': 'tokenize', 'col_offset': 4, 'classname': 'WordpieceTokenizer', 'endline': 313, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'complexity': 5, 'lineno': 328, 'name': '_is_control', 'col_offset': 0, 'endline': 337, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 187, 'name': '_run_split_on_punc', 'col_offset': 4, 'classname': 'BasicTokenizer', 'endline': 205, 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'lineno': 78, 'name': 'BertTokenizer', 'col_offset': 0, 'endline': 141, 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 80, 'name': '__init__', 'col_offset': 4, 'classname': 'BertTokenizer', 'endline': 89, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 91, 'name': 'tokenize', 'col_offset': 4, 'classname': 'BertTokenizer', 'endline': 96, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 98, 'name': 'convert_tokens_to_ids', 'col_offset': 4, 'classname': 'BertTokenizer', 'endline': 103, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 105, 'name': 'convert_ids_to_tokens', 'col_offset': 4, 'classname': 'BertTokenizer', 'endline': 110, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'lineno': 113, 'name': 'from_pretrained', 'col_offset': 4, 'classname': 'BertTokenizer', 'endline': 141, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'lineno': 113, 'name': 'from_pretrained', 'col_offset': 4, 'classname': 'BertTokenizer', 'endline': 141, 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 3, 'lineno': 41, 'name': 'printable_text', 'col_offset': 0, 'endline': 51, 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 3, 'lineno': 54, 'name': 'load_vocab', 'col_offset': 0, 'endline': 66, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 80, 'name': '__init__', 'col_offset': 4, 'classname': 'BertTokenizer', 'endline': 89, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 91, 'name': 'tokenize', 'col_offset': 4, 'classname': 'BertTokenizer', 'endline': 96, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 155, 'name': 'tokenize', 'col_offset': 4, 'classname': 'BasicTokenizer', 'endline': 174, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 176, 'name': '_run_strip_accents', 'col_offset': 4, 'classname': 'BasicTokenizer', 'endline': 185, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 207, 'name': '_tokenize_chinese_chars', 'col_offset': 4, 'classname': 'BasicTokenizer', 'endline': 218, 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'lineno': 69, 'name': 'whitespace_tokenize', 'col_offset': 0, 'endline': 75, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 98, 'name': 'convert_tokens_to_ids', 'col_offset': 4, 'classname': 'BertTokenizer', 'endline': 103, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 105, 'name': 'convert_ids_to_tokens', 'col_offset': 4, 'classname': 'BertTokenizer', 'endline': 110, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 147, 'name': '__init__', 'col_offset': 4, 'classname': 'BasicTokenizer', 'endline': 153, 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 259, 'name': '__init__', 'col_offset': 4, 'classname': 'WordpieceTokenizer', 'endline': 262, 'closures': []}]}","{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\setup.py': {'loc': 30, 'lloc': 2, 'sloc': 29, 'comments': 0, 'multi': 0, 'blank': 1, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': {'loc': 112, 'lloc': 68, 'sloc': 82, 'comments': 20, 'multi': 0, 'blank': 9, 'single_comments': 21}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\file_utils.py': {'loc': 233, 'lloc': 149, 'sloc': 138, 'comments': 14, 'multi': 32, 'blank': 48, 'single_comments': 15}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\modeling.py': {'loc': 965, 'lloc': 453, 'sloc': 475, 'comments': 48, 'multi': 291, 'blank': 147, 'single_comments': 52}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\optimization.py': {'loc': 161, 'lloc': 85, 'sloc': 89, 'comments': 31, 'multi': 18, 'blank': 22, 'single_comments': 32}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\tokenization.py': {'loc': 353, 'lloc': 225, 'sloc': 228, 'comments': 47, 'multi': 20, 'blank': 47, 'single_comments': 58}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\__init__.py': {'loc': 6, 'lloc': 4, 'sloc': 6, 'comments': 0, 'multi': 0, 'blank': 0, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\__main__.py': {'loc': 19, 'lloc': 14, 'sloc': 16, 'comments': 2, 'multi': 0, 'blank': 1, 'single_comments': 2}}","{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\setup.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': {'total': [5, 20, 12, 22, 25, 34, 98.04820237218406, 157.89111045234063, 2.75, 434.2005537439367, 24.122252985774264, 0.05263037015078], 'functions': [['convert_tf_checkpoint_to_pytorch', [5, 18, 11, 20, 23, 31, 86.66829050039843, 140.2304206377674, 2.777777777777777, 389.52894621602053, 21.64049701200114, 0.046743473545922]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\file_utils.py': {'total': [9, 32, 19, 33, 41, 52, 188.52932501298082, 278.59270424014034, 4.640625, 1292.8442681144013, 71.82468156191118, 0.092864234746713], 'functions': [['url_to_filename', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['filename_to_url', [3, 6, 4, 6, 9, 10, 20.264662506490406, 31.699250014423125, 1.5, 47.548875021634686, 2.641604167868593, 0.010566416671474]], ['cached_path', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['split_s3_path', [2, 4, 3, 4, 6, 7, 10.0, 18.094737505048094, 1.0, 18.094737505048094, 1.005263194724894, 0.006031579168349]], ['s3_request', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['s3_etag', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['s3_get', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['http_get', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_from_cache', [4, 7, 4, 7, 11, 11, 27.651484454403228, 38.053747805010275, 2.0, 76.10749561002055, 4.228194200556697, 0.012684582601670002]], ['read_set_from_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_file_extension', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\modeling.py': {'total': [14, 91, 89, 145, 105, 234, 645.5122811668878, 1571.1334511338725, 11.153846153846153, 17524.180801108578, 973.5656000615877, 0.523711150377957], 'functions': [['gelu', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['swish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_dict', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['from_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__repr__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_json_string', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 10, 8, 14, 15, 22, 44.82892142331043, 85.95159310338741, 3.5, 300.83057586185595, 16.712809770103107, 0.028650531034462003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 6, 3, 6, 8, 9, 17.509775004326936, 27.0, 1.0, 27.0, 1.5, 0.009000000000000001]], ['__init__', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['transpose_for_scores', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['forward', [3, 7, 7, 10, 10, 17, 24.406371956566698, 56.472777613085164, 2.1428571428571432, 121.0130948851825, 6.722949715843472, 0.018824259204361]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['init_bert_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['from_pretrained', [7, 17, 10, 19, 24, 29, 89.13835275565901, 132.96391252091354, 3.9117647058823533, 520.1235401553382, 28.895752230852125, 0.044321304173637006]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 9, 8, 12, 14, 20, 40.13896548741762, 76.14709844115208, 3.333333333333333, 253.82366147050695, 14.101314526139275, 0.02538236614705]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 9, 13, 12, 22, 32.0, 78.86917501586544, 3.25, 256.3248188015627, 14.240267711197927, 0.026289725005288003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 3, 4, 5, 7, 6.754887502163469, 16.253496664211536, 1.333333333333333, 21.67132888561538, 1.203962715867521, 0.005417832221403]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 12, 12, 19, 18, 31, 58.52932501298082, 129.26767504471167, 4.75, 614.0214564623805, 34.112303136798914, 0.043089225014903004]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\optimization.py': {'total': [16, 66, 51, 89, 82, 140, 462.93001187765793, 890.0572806465318, 10.787878787878787, 9601.830057883797, 533.4350032157665, 0.29668576021551], 'functions': [['warmup_cosine', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['warmup_constant', [2, 2, 2, 4, 4, 6, 4.0, 12.0, 2.0, 24.0, 1.333333333333333, 0.004]], ['warmup_linear', [3, 3, 3, 6, 6, 9, 9.509775004326938, 23.264662506490403, 3.0, 69.79398751947122, 3.877443751081734, 0.007754887502163001]], ['__init__', [8, 18, 18, 26, 26, 44, 99.05865002596161, 206.81934759820808, 5.777777777777778, 1194.9562305674244, 66.3864572537458, 0.068939782532736]], ['get_lr', [5, 9, 5, 9, 14, 14, 40.13896548741762, 53.30296890880645, 2.5, 133.25742227201613, 7.4031901262231194, 0.017767656302935]], ['step', [10, 27, 18, 34, 37, 52, 161.6012435072873, 270.8915750127054, 6.296296296296297, 1705.6136204503675, 94.75631224724265, 0.090297191670901]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\tokenization.py': {'total': [14, 114, 70, 148, 128, 218, 832.252430523587, 1526.0, 9.087719298245615, 13867.859649122807, 770.4366471734893, 0.508666666666666], 'functions': [['printable_text', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['load_vocab', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['whitespace_tokenize', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_ids', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_ids_to_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_run_strip_accents', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_run_split_on_punc', [3, 3, 3, 5, 6, 8, 9.509775004326938, 20.67970000576925, 2.5, 51.69925001442312, 2.87218055635684, 0.006893233335256]], ['_tokenize_chinese_chars', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_is_chinese_char', [4, 41, 25, 56, 45, 81, 227.65963218934144, 444.84010080270366, 2.731707317073171, 1215.1729582903126, 67.50960879390625, 0.148280033600901]], ['_clean_text', [2, 6, 3, 7, 8, 10, 17.509775004326936, 30.0, 1.166666666666666, 35.0, 1.9444444444444442, 0.01]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [6, 12, 8, 16, 18, 24, 58.52932501298082, 100.07820003461549, 4.0, 400.31280013846197, 22.23960000769233, 0.033359400011538004]], ['_is_whitespace', [2, 11, 6, 14, 13, 20, 40.053747805010275, 74.00879436282185, 1.272727272727272, 94.1930110072278, 5.232945055957099, 0.024669598120940002]], ['_is_control', [2, 7, 4, 9, 9, 13, 21.651484454403228, 41.20902501875006, 1.2857142857142851, 52.98303216696437, 2.943501787053576, 0.013736341672916002]], ['_is_punctuation', [4, 21, 13, 28, 25, 41, 100.23866587835397, 190.3981037807637, 2.666666666666666, 507.7282767487032, 28.207126486039066, 0.063466034593587]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\__init__.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\__main__.py': {'total': [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001], 'functions': []}}"
transformers,"{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'C', 'complexity': 14, 'lineno': 30, 'endline': 87, 'col_offset': 0, 'name': 'convert_tf_checkpoint_to_pytorch', 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\file_utils.py': [{'type': 'function', 'rank': 'B', 'complexity': 6, 'lineno': 72, 'endline': 97, 'col_offset': 0, 'name': 'cached_path', 'closures': []}, {'type': 'function', 'rank': 'B', 'complexity': 6, 'lineno': 161, 'endline': 215, 'col_offset': 0, 'name': 'get_from_cache', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 4, 'lineno': 48, 'endline': 69, 'col_offset': 0, 'name': 'filename_to_url', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 4, 'lineno': 100, 'endline': 110, 'col_offset': 0, 'name': 'split_s3_path', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 4, 'lineno': 149, 'endline': 158, 'col_offset': 0, 'name': 'http_get', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 3, 'lineno': 230, 'endline': 233, 'col_offset': 0, 'name': 'get_file_extension', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'lineno': 30, 'endline': 45, 'col_offset': 0, 'name': 'url_to_filename', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'lineno': 218, 'endline': 227, 'col_offset': 0, 'name': 'read_set_from_file', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'lineno': 113, 'endline': 129, 'col_offset': 0, 'name': 's3_request', 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 3, 'lineno': 120, 'endline': 127, 'col_offset': 4, 'name': 'wrapper', 'closures': []}]}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'lineno': 133, 'endline': 138, 'col_offset': 0, 'name': 's3_etag', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'lineno': 142, 'endline': 146, 'col_offset': 0, 'name': 's3_get', 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\modeling.py': [{'type': 'method', 'rank': 'B', 'complexity': 10, 'lineno': 448, 'endline': 534, 'classname': 'PreTrainedBertModel', 'col_offset': 4, 'name': 'from_pretrained', 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 4, 'lineno': 517, 'endline': 523, 'col_offset': 8, 'name': 'load', 'closures': []}]}, {'type': 'class', 'rank': 'B', 'complexity': 7, 'lineno': 419, 'endline': 534, 'col_offset': 0, 'name': 'PreTrainedBertModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 423, 'endline': 432, 'classname': 'PreTrainedBertModel', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 434, 'endline': 445, 'classname': 'PreTrainedBertModel', 'col_offset': 4, 'name': 'init_bert_weights', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 10, 'lineno': 448, 'endline': 534, 'classname': 'PreTrainedBertModel', 'col_offset': 4, 'name': 'from_pretrained', 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 4, 'lineno': 517, 'endline': 523, 'col_offset': 8, 'name': 'load', 'closures': []}]}]}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 434, 'endline': 445, 'classname': 'PreTrainedBertModel', 'col_offset': 4, 'name': 'init_bert_weights', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 1009, 'endline': 1033, 'classname': 'BertForQuestionAnswering', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'lineno': 71, 'endline': 125, 'classname': 'BertConfig', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'lineno': 321, 'endline': 335, 'col_offset': 0, 'name': 'BertEncoder', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 322, 'endline': 325, 'classname': 'BertEncoder', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'lineno': 327, 'endline': 335, 'classname': 'BertEncoder', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'lineno': 327, 'endline': 335, 'classname': 'BertEncoder', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'lineno': 537, 'endline': 617, 'col_offset': 0, 'name': 'BertModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 581, 'endline': 586, 'classname': 'BertModel', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'lineno': 588, 'endline': 617, 'classname': 'BertModel', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'lineno': 588, 'endline': 617, 'classname': 'BertModel', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'lineno': 946, 'endline': 1033, 'col_offset': 0, 'name': 'BertForQuestionAnswering', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 1001, 'endline': 1007, 'classname': 'BertForQuestionAnswering', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 1009, 'endline': 1033, 'classname': 'BertForQuestionAnswering', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'lineno': 172, 'endline': 200, 'col_offset': 0, 'name': 'BertEmbeddings', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 175, 'endline': 184, 'classname': 'BertEmbeddings', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 186, 'endline': 200, 'classname': 'BertEmbeddings', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'lineno': 280, 'endline': 290, 'col_offset': 0, 'name': 'BertIntermediate', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 281, 'endline': 285, 'classname': 'BertIntermediate', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 287, 'endline': 290, 'classname': 'BertIntermediate', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'lineno': 353, 'endline': 365, 'col_offset': 0, 'name': 'BertPredictionHeadTransform', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 354, 'endline': 359, 'classname': 'BertPredictionHeadTransform', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 361, 'endline': 365, 'classname': 'BertPredictionHeadTransform', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'lineno': 620, 'endline': 688, 'col_offset': 0, 'name': 'BertForPreTraining', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 670, 'endline': 674, 'classname': 'BertForPreTraining', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 676, 'endline': 688, 'classname': 'BertForPreTraining', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 676, 'endline': 688, 'classname': 'BertForPreTraining', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'lineno': 691, 'endline': 749, 'col_offset': 0, 'name': 'BertForMaskedLM', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 733, 'endline': 737, 'classname': 'BertForMaskedLM', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 739, 'endline': 749, 'classname': 'BertForMaskedLM', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'lineno': 752, 'endline': 811, 'col_offset': 0, 'name': 'BertForNextSentencePrediction', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 795, 'endline': 799, 'classname': 'BertForNextSentencePrediction', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 801, 'endline': 811, 'classname': 'BertForNextSentencePrediction', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'lineno': 814, 'endline': 877, 'col_offset': 0, 'name': 'BertForSequenceClassification', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 859, 'endline': 865, 'classname': 'BertForSequenceClassification', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 867, 'endline': 877, 'classname': 'BertForSequenceClassification', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'lineno': 880, 'endline': 943, 'col_offset': 0, 'name': 'BertForTokenClassification', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 925, 'endline': 931, 'classname': 'BertForTokenClassification', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 933, 'endline': 943, 'classname': 'BertForTokenClassification', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 68, 'endline': 153, 'col_offset': 0, 'name': 'BertConfig', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 4, 'lineno': 71, 'endline': 125, 'classname': 'BertConfig', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 129, 'endline': 134, 'classname': 'BertConfig', 'col_offset': 4, 'name': 'from_dict', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 137, 'endline': 141, 'classname': 'BertConfig', 'col_offset': 4, 'name': 'from_json_file', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 143, 'endline': 144, 'classname': 'BertConfig', 'col_offset': 4, 'name': '__repr__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 146, 'endline': 149, 'classname': 'BertConfig', 'col_offset': 4, 'name': 'to_dict', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 151, 'endline': 153, 'classname': 'BertConfig', 'col_offset': 4, 'name': 'to_json_string', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 129, 'endline': 134, 'classname': 'BertConfig', 'col_offset': 4, 'name': 'from_dict', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 156, 'endline': 169, 'col_offset': 0, 'name': 'BertLayerNorm', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 157, 'endline': 163, 'classname': 'BertLayerNorm', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 165, 'endline': 169, 'classname': 'BertLayerNorm', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 186, 'endline': 200, 'classname': 'BertEmbeddings', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 203, 'endline': 251, 'col_offset': 0, 'name': 'BertSelfAttention', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 204, 'endline': 218, 'classname': 'BertSelfAttention', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 220, 'endline': 223, 'classname': 'BertSelfAttention', 'col_offset': 4, 'name': 'transpose_for_scores', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 225, 'endline': 251, 'classname': 'BertSelfAttention', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 204, 'endline': 218, 'classname': 'BertSelfAttention', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 254, 'endline': 265, 'col_offset': 0, 'name': 'BertSelfOutput', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 255, 'endline': 259, 'classname': 'BertSelfOutput', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 261, 'endline': 265, 'classname': 'BertSelfOutput', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 268, 'endline': 277, 'col_offset': 0, 'name': 'BertAttention', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 269, 'endline': 272, 'classname': 'BertAttention', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 274, 'endline': 277, 'classname': 'BertAttention', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 281, 'endline': 285, 'classname': 'BertIntermediate', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 293, 'endline': 304, 'col_offset': 0, 'name': 'BertOutput', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 294, 'endline': 298, 'classname': 'BertOutput', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 300, 'endline': 304, 'classname': 'BertOutput', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 307, 'endline': 318, 'col_offset': 0, 'name': 'BertLayer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 308, 'endline': 312, 'classname': 'BertLayer', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 314, 'endline': 318, 'classname': 'BertLayer', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 322, 'endline': 325, 'classname': 'BertEncoder', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 338, 'endline': 350, 'col_offset': 0, 'name': 'BertPooler', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 339, 'endline': 342, 'classname': 'BertPooler', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 344, 'endline': 350, 'classname': 'BertPooler', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 354, 'endline': 359, 'classname': 'BertPredictionHeadTransform', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 368, 'endline': 384, 'col_offset': 0, 'name': 'BertLMPredictionHead', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 369, 'endline': 379, 'classname': 'BertLMPredictionHead', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 381, 'endline': 384, 'classname': 'BertLMPredictionHead', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 387, 'endline': 394, 'col_offset': 0, 'name': 'BertOnlyMLMHead', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 388, 'endline': 390, 'classname': 'BertOnlyMLMHead', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 392, 'endline': 394, 'classname': 'BertOnlyMLMHead', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 397, 'endline': 404, 'col_offset': 0, 'name': 'BertOnlyNSPHead', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 398, 'endline': 400, 'classname': 'BertOnlyNSPHead', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 402, 'endline': 404, 'classname': 'BertOnlyNSPHead', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'lineno': 407, 'endline': 416, 'col_offset': 0, 'name': 'BertPreTrainingHeads', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 408, 'endline': 411, 'classname': 'BertPreTrainingHeads', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 413, 'endline': 416, 'classname': 'BertPreTrainingHeads', 'col_offset': 4, 'name': 'forward', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 423, 'endline': 432, 'classname': 'PreTrainedBertModel', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 739, 'endline': 749, 'classname': 'BertForMaskedLM', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 801, 'endline': 811, 'classname': 'BertForNextSentencePrediction', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 867, 'endline': 877, 'classname': 'BertForSequenceClassification', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 933, 'endline': 943, 'classname': 'BertForTokenClassification', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'lineno': 53, 'endline': 58, 'col_offset': 0, 'name': 'gelu', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'lineno': 61, 'endline': 62, 'col_offset': 0, 'name': 'swish', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 137, 'endline': 141, 'classname': 'BertConfig', 'col_offset': 4, 'name': 'from_json_file', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 143, 'endline': 144, 'classname': 'BertConfig', 'col_offset': 4, 'name': '__repr__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 146, 'endline': 149, 'classname': 'BertConfig', 'col_offset': 4, 'name': 'to_dict', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 151, 'endline': 153, 'classname': 'BertConfig', 'col_offset': 4, 'name': 'to_json_string', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 157, 'endline': 163, 'classname': 'BertLayerNorm', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 165, 'endline': 169, 'classname': 'BertLayerNorm', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 175, 'endline': 184, 'classname': 'BertEmbeddings', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 220, 'endline': 223, 'classname': 'BertSelfAttention', 'col_offset': 4, 'name': 'transpose_for_scores', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 225, 'endline': 251, 'classname': 'BertSelfAttention', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 255, 'endline': 259, 'classname': 'BertSelfOutput', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 261, 'endline': 265, 'classname': 'BertSelfOutput', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 269, 'endline': 272, 'classname': 'BertAttention', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 274, 'endline': 277, 'classname': 'BertAttention', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 287, 'endline': 290, 'classname': 'BertIntermediate', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 294, 'endline': 298, 'classname': 'BertOutput', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 300, 'endline': 304, 'classname': 'BertOutput', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 308, 'endline': 312, 'classname': 'BertLayer', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 314, 'endline': 318, 'classname': 'BertLayer', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 339, 'endline': 342, 'classname': 'BertPooler', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 344, 'endline': 350, 'classname': 'BertPooler', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 361, 'endline': 365, 'classname': 'BertPredictionHeadTransform', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 369, 'endline': 379, 'classname': 'BertLMPredictionHead', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 381, 'endline': 384, 'classname': 'BertLMPredictionHead', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 388, 'endline': 390, 'classname': 'BertOnlyMLMHead', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 392, 'endline': 394, 'classname': 'BertOnlyMLMHead', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 398, 'endline': 400, 'classname': 'BertOnlyNSPHead', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 402, 'endline': 404, 'classname': 'BertOnlyNSPHead', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 408, 'endline': 411, 'classname': 'BertPreTrainingHeads', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 413, 'endline': 416, 'classname': 'BertPreTrainingHeads', 'col_offset': 4, 'name': 'forward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 581, 'endline': 586, 'classname': 'BertModel', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 670, 'endline': 674, 'classname': 'BertForPreTraining', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 733, 'endline': 737, 'classname': 'BertForMaskedLM', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 795, 'endline': 799, 'classname': 'BertForNextSentencePrediction', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 859, 'endline': 865, 'classname': 'BertForSequenceClassification', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 925, 'endline': 931, 'classname': 'BertForTokenClassification', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 1001, 'endline': 1007, 'classname': 'BertForQuestionAnswering', 'col_offset': 4, 'name': '__init__', 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\optimization.py': [{'type': 'method', 'rank': 'B', 'complexity': 10, 'lineno': 93, 'endline': 161, 'classname': 'BertAdam', 'col_offset': 4, 'name': 'step', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 9, 'lineno': 44, 'endline': 161, 'col_offset': 0, 'name': 'BertAdam', 'methods': [{'type': 'method', 'rank': 'B', 'complexity': 8, 'lineno': 58, 'endline': 76, 'classname': 'BertAdam', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 78, 'endline': 91, 'classname': 'BertAdam', 'col_offset': 4, 'name': 'get_lr', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 10, 'lineno': 93, 'endline': 161, 'classname': 'BertAdam', 'col_offset': 4, 'name': 'step', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 8, 'lineno': 58, 'endline': 76, 'classname': 'BertAdam', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 78, 'endline': 91, 'classname': 'BertAdam', 'col_offset': 4, 'name': 'get_lr', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'lineno': 22, 'endline': 25, 'col_offset': 0, 'name': 'warmup_cosine', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'lineno': 27, 'endline': 30, 'col_offset': 0, 'name': 'warmup_constant', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'lineno': 32, 'endline': 35, 'col_offset': 0, 'name': 'warmup_linear', 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\tokenization.py': [{'type': 'method', 'rank': 'C', 'complexity': 17, 'lineno': 213, 'endline': 233, 'classname': 'BasicTokenizer', 'col_offset': 4, 'name': '_is_chinese_char', 'closures': []}, {'type': 'function', 'rank': 'B', 'complexity': 10, 'lineno': 333, 'endline': 346, 'col_offset': 0, 'name': '_is_punctuation', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'lineno': 257, 'endline': 306, 'classname': 'WordpieceTokenizer', 'col_offset': 4, 'name': 'tokenize', 'closures': []}, {'type': 'function', 'rank': 'B', 'complexity': 6, 'lineno': 309, 'endline': 318, 'col_offset': 0, 'name': '_is_whitespace', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'lineno': 137, 'endline': 246, 'col_offset': 0, 'name': 'BasicTokenizer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 140, 'endline': 146, 'classname': 'BasicTokenizer', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 148, 'endline': 167, 'classname': 'BasicTokenizer', 'col_offset': 4, 'name': 'tokenize', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 169, 'endline': 178, 'classname': 'BasicTokenizer', 'col_offset': 4, 'name': '_run_strip_accents', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 180, 'endline': 198, 'classname': 'BasicTokenizer', 'col_offset': 4, 'name': '_run_split_on_punc', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 200, 'endline': 211, 'classname': 'BasicTokenizer', 'col_offset': 4, 'name': '_tokenize_chinese_chars', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 17, 'lineno': 213, 'endline': 233, 'classname': 'BasicTokenizer', 'col_offset': 4, 'name': '_is_chinese_char', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'lineno': 235, 'endline': 246, 'classname': 'BasicTokenizer', 'col_offset': 4, 'name': '_clean_text', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'lineno': 235, 'endline': 246, 'classname': 'BasicTokenizer', 'col_offset': 4, 'name': '_clean_text', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'lineno': 249, 'endline': 306, 'col_offset': 0, 'name': 'WordpieceTokenizer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 252, 'endline': 255, 'classname': 'WordpieceTokenizer', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'lineno': 257, 'endline': 306, 'classname': 'WordpieceTokenizer', 'col_offset': 4, 'name': 'tokenize', 'closures': []}]}, {'type': 'function', 'rank': 'A', 'complexity': 5, 'lineno': 321, 'endline': 330, 'col_offset': 0, 'name': '_is_control', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 104, 'endline': 134, 'classname': 'BertTokenizer', 'col_offset': 4, 'name': 'from_pretrained', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 180, 'endline': 198, 'classname': 'BasicTokenizer', 'col_offset': 4, 'name': '_run_split_on_punc', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'lineno': 69, 'endline': 134, 'col_offset': 0, 'name': 'BertTokenizer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 71, 'endline': 80, 'classname': 'BertTokenizer', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 82, 'endline': 87, 'classname': 'BertTokenizer', 'col_offset': 4, 'name': 'tokenize', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 89, 'endline': 94, 'classname': 'BertTokenizer', 'col_offset': 4, 'name': 'convert_tokens_to_ids', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 96, 'endline': 101, 'classname': 'BertTokenizer', 'col_offset': 4, 'name': 'convert_ids_to_tokens', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'lineno': 104, 'endline': 134, 'classname': 'BertTokenizer', 'col_offset': 4, 'name': 'from_pretrained', 'closures': []}]}, {'type': 'function', 'rank': 'A', 'complexity': 3, 'lineno': 45, 'endline': 57, 'col_offset': 0, 'name': 'load_vocab', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 71, 'endline': 80, 'classname': 'BertTokenizer', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 82, 'endline': 87, 'classname': 'BertTokenizer', 'col_offset': 4, 'name': 'tokenize', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 148, 'endline': 167, 'classname': 'BasicTokenizer', 'col_offset': 4, 'name': 'tokenize', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 169, 'endline': 178, 'classname': 'BasicTokenizer', 'col_offset': 4, 'name': '_run_strip_accents', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'lineno': 200, 'endline': 211, 'classname': 'BasicTokenizer', 'col_offset': 4, 'name': '_tokenize_chinese_chars', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'lineno': 60, 'endline': 66, 'col_offset': 0, 'name': 'whitespace_tokenize', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 89, 'endline': 94, 'classname': 'BertTokenizer', 'col_offset': 4, 'name': 'convert_tokens_to_ids', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'lineno': 96, 'endline': 101, 'classname': 'BertTokenizer', 'col_offset': 4, 'name': 'convert_ids_to_tokens', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 140, 'endline': 146, 'classname': 'BasicTokenizer', 'col_offset': 4, 'name': '__init__', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'lineno': 252, 'endline': 255, 'classname': 'WordpieceTokenizer', 'col_offset': 4, 'name': '__init__', 'closures': []}]}","{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\setup.py': {'loc': 30, 'lloc': 2, 'sloc': 29, 'comments': 0, 'multi': 0, 'blank': 1, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': {'loc': 112, 'lloc': 68, 'sloc': 82, 'comments': 20, 'multi': 0, 'blank': 9, 'single_comments': 21}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\file_utils.py': {'loc': 233, 'lloc': 149, 'sloc': 138, 'comments': 14, 'multi': 32, 'blank': 48, 'single_comments': 15}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\modeling.py': {'loc': 1033, 'lloc': 472, 'sloc': 495, 'comments': 48, 'multi': 328, 'blank': 158, 'single_comments': 52}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\optimization.py': {'loc': 161, 'lloc': 85, 'sloc': 89, 'comments': 31, 'multi': 18, 'blank': 22, 'single_comments': 32}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\tokenization.py': {'loc': 346, 'lloc': 220, 'sloc': 226, 'comments': 45, 'multi': 20, 'blank': 45, 'single_comments': 55}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\__init__.py': {'loc': 7, 'lloc': 4, 'sloc': 7, 'comments': 0, 'multi': 0, 'blank': 0, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\__main__.py': {'loc': 19, 'lloc': 14, 'sloc': 16, 'comments': 2, 'multi': 0, 'blank': 1, 'single_comments': 2}}","{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\setup.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': {'total': [5, 20, 12, 22, 25, 34, 98.04820237218406, 157.89111045234063, 2.75, 434.2005537439367, 24.122252985774264, 0.05263037015078], 'functions': [['convert_tf_checkpoint_to_pytorch', [5, 18, 11, 20, 23, 31, 86.66829050039843, 140.2304206377674, 2.777777777777777, 389.52894621602053, 21.64049701200114, 0.046743473545922]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\file_utils.py': {'total': [9, 32, 19, 33, 41, 52, 188.52932501298082, 278.59270424014034, 4.640625, 1292.8442681144013, 71.82468156191118, 0.092864234746713], 'functions': [['url_to_filename', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['filename_to_url', [3, 6, 4, 6, 9, 10, 20.264662506490406, 31.699250014423125, 1.5, 47.548875021634686, 2.641604167868593, 0.010566416671474]], ['cached_path', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['split_s3_path', [2, 4, 3, 4, 6, 7, 10.0, 18.094737505048094, 1.0, 18.094737505048094, 1.005263194724894, 0.006031579168349]], ['s3_request', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['s3_etag', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['s3_get', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['http_get', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_from_cache', [4, 7, 4, 7, 11, 11, 27.651484454403228, 38.053747805010275, 2.0, 76.10749561002055, 4.228194200556697, 0.012684582601670002]], ['read_set_from_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_file_extension', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\modeling.py': {'total': [14, 91, 92, 149, 105, 241, 645.5122811668878, 1618.1331697575356, 11.461538461538462, 18546.295561067138, 1030.3497533926188, 0.539377723252511], 'functions': [['gelu', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['swish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_dict', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['from_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__repr__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_json_string', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 10, 8, 14, 15, 22, 44.82892142331043, 85.95159310338741, 3.5, 300.83057586185595, 16.712809770103107, 0.028650531034462003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 6, 3, 6, 8, 9, 17.509775004326936, 27.0, 1.0, 27.0, 1.5, 0.009000000000000001]], ['__init__', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['transpose_for_scores', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['forward', [3, 7, 7, 10, 10, 17, 24.406371956566698, 56.472777613085164, 2.1428571428571432, 121.0130948851825, 6.722949715843472, 0.018824259204361]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['init_bert_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['from_pretrained', [7, 17, 10, 19, 24, 29, 89.13835275565901, 132.96391252091354, 3.9117647058823533, 520.1235401553382, 28.895752230852125, 0.044321304173637006]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 9, 8, 12, 14, 20, 40.13896548741762, 76.14709844115208, 3.333333333333333, 253.82366147050695, 14.101314526139275, 0.02538236614705]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 9, 13, 12, 22, 32.0, 78.86917501586544, 3.25, 256.3248188015627, 14.240267711197927, 0.026289725005288003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 3, 4, 5, 7, 6.754887502163469, 16.253496664211536, 1.333333333333333, 21.67132888561538, 1.203962715867521, 0.005417832221403]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 3, 4, 5, 7, 6.754887502163469, 16.253496664211536, 1.333333333333333, 21.67132888561538, 1.203962715867521, 0.005417832221403]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 12, 12, 19, 18, 31, 58.52932501298082, 129.26767504471167, 4.75, 614.0214564623805, 34.112303136798914, 0.043089225014903004]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\optimization.py': {'total': [16, 66, 51, 89, 82, 140, 462.93001187765793, 890.0572806465318, 10.787878787878787, 9601.830057883797, 533.4350032157665, 0.29668576021551], 'functions': [['warmup_cosine', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['warmup_constant', [2, 2, 2, 4, 4, 6, 4.0, 12.0, 2.0, 24.0, 1.333333333333333, 0.004]], ['warmup_linear', [3, 3, 3, 6, 6, 9, 9.509775004326938, 23.264662506490403, 3.0, 69.79398751947122, 3.877443751081734, 0.007754887502163001]], ['__init__', [8, 18, 18, 26, 26, 44, 99.05865002596161, 206.81934759820808, 5.777777777777778, 1194.9562305674244, 66.3864572537458, 0.068939782532736]], ['get_lr', [5, 9, 5, 9, 14, 14, 40.13896548741762, 53.30296890880645, 2.5, 133.25742227201613, 7.4031901262231194, 0.017767656302935]], ['step', [10, 27, 18, 34, 37, 52, 161.6012435072873, 270.8915750127054, 6.296296296296297, 1705.6136204503675, 94.75631224724265, 0.090297191670901]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\tokenization.py': {'total': [13, 112, 69, 146, 125, 215, 810.5294676062858, 1497.6436212023489, 8.473214285714286, 12689.855326080618, 704.9919625600344, 0.49921454040078206], 'functions': [['load_vocab', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['whitespace_tokenize', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_ids', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_ids_to_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_run_strip_accents', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_run_split_on_punc', [3, 3, 3, 5, 6, 8, 9.509775004326938, 20.67970000576925, 2.5, 51.69925001442312, 2.87218055635684, 0.006893233335256]], ['_tokenize_chinese_chars', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_is_chinese_char', [4, 41, 25, 56, 45, 81, 227.65963218934144, 444.84010080270366, 2.731707317073171, 1215.1729582903126, 67.50960879390625, 0.148280033600901]], ['_clean_text', [2, 6, 3, 7, 8, 10, 17.509775004326936, 30.0, 1.166666666666666, 35.0, 1.9444444444444442, 0.01]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [6, 12, 8, 16, 18, 24, 58.52932501298082, 100.07820003461549, 4.0, 400.31280013846197, 22.23960000769233, 0.033359400011538004]], ['_is_whitespace', [2, 11, 6, 14, 13, 20, 40.053747805010275, 74.00879436282185, 1.272727272727272, 94.1930110072278, 5.232945055957099, 0.024669598120940002]], ['_is_control', [2, 7, 4, 9, 9, 13, 21.651484454403228, 41.20902501875006, 1.2857142857142851, 52.98303216696437, 2.943501787053576, 0.013736341672916002]], ['_is_punctuation', [4, 21, 13, 28, 25, 41, 100.23866587835397, 190.3981037807637, 2.666666666666666, 507.7282767487032, 28.207126486039066, 0.063466034593587]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\__init__.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\__main__.py': {'total': [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001], 'functions': []}}"
transformers,"{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'C', 'name': 'convert_tf_checkpoint_to_pytorch', 'complexity': 17, 'lineno': 30, 'endline': 87, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\file_utils.py': [{'type': 'function', 'rank': 'B', 'name': 'cached_path', 'complexity': 7, 'lineno': 74, 'endline': 101, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'get_from_cache', 'complexity': 7, 'lineno': 165, 'endline': 221, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'filename_to_url', 'complexity': 5, 'lineno': 48, 'endline': 71, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'split_s3_path', 'complexity': 4, 'lineno': 104, 'endline': 114, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'http_get', 'complexity': 4, 'lineno': 153, 'endline': 162, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'get_file_extension', 'complexity': 3, 'lineno': 236, 'endline': 239, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'url_to_filename', 'complexity': 2, 'lineno': 30, 'endline': 45, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'read_set_from_file', 'complexity': 2, 'lineno': 224, 'endline': 233, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 's3_request', 'complexity': 1, 'lineno': 117, 'endline': 133, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'wrapper', 'complexity': 3, 'lineno': 124, 'endline': 131, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 's3_etag', 'complexity': 1, 'lineno': 137, 'endline': 142, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 's3_get', 'complexity': 1, 'lineno': 146, 'endline': 150, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\modeling.py': [{'type': 'method', 'rank': 'C', 'classname': 'PreTrainedBertModel', 'name': 'from_pretrained', 'complexity': 16, 'lineno': 448, 'endline': 551, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'load', 'complexity': 4, 'lineno': 534, 'endline': 540, 'col_offset': 8, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'PreTrainedBertModel', 'complexity': 9, 'lineno': 419, 'endline': 551, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'PreTrainedBertModel', 'name': '__init__', 'complexity': 2, 'lineno': 423, 'endline': 432, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'PreTrainedBertModel', 'name': 'init_bert_weights', 'complexity': 5, 'lineno': 434, 'endline': 445, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'classname': 'PreTrainedBertModel', 'name': 'from_pretrained', 'complexity': 16, 'lineno': 448, 'endline': 551, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'load', 'complexity': 4, 'lineno': 534, 'endline': 540, 'col_offset': 8, 'closures': []}]}]}, {'type': 'method', 'rank': 'A', 'classname': 'PreTrainedBertModel', 'name': 'init_bert_weights', 'complexity': 5, 'lineno': 434, 'endline': 445, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForQuestionAnswering', 'name': 'forward', 'complexity': 5, 'lineno': 1095, 'endline': 1119, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': '__init__', 'complexity': 4, 'lineno': 69, 'endline': 123, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertEncoder', 'complexity': 4, 'lineno': 321, 'endline': 335, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertEncoder', 'name': '__init__', 'complexity': 2, 'lineno': 322, 'endline': 325, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertEncoder', 'name': 'forward', 'complexity': 4, 'lineno': 327, 'endline': 335, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertEncoder', 'name': 'forward', 'complexity': 4, 'lineno': 327, 'endline': 335, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertModel', 'complexity': 4, 'lineno': 554, 'endline': 634, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertModel', 'name': '__init__', 'complexity': 1, 'lineno': 598, 'endline': 603, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertModel', 'name': 'forward', 'complexity': 4, 'lineno': 605, 'endline': 634, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertModel', 'name': 'forward', 'complexity': 4, 'lineno': 605, 'endline': 634, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertForQuestionAnswering', 'complexity': 4, 'lineno': 1032, 'endline': 1119, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForQuestionAnswering', 'name': '__init__', 'complexity': 1, 'lineno': 1087, 'endline': 1093, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForQuestionAnswering', 'name': 'forward', 'complexity': 5, 'lineno': 1095, 'endline': 1119, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertEmbeddings', 'complexity': 3, 'lineno': 172, 'endline': 200, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertEmbeddings', 'name': '__init__', 'complexity': 1, 'lineno': 175, 'endline': 184, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertEmbeddings', 'name': 'forward', 'complexity': 2, 'lineno': 186, 'endline': 200, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertIntermediate', 'complexity': 3, 'lineno': 280, 'endline': 290, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertIntermediate', 'name': '__init__', 'complexity': 2, 'lineno': 281, 'endline': 285, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertIntermediate', 'name': 'forward', 'complexity': 1, 'lineno': 287, 'endline': 290, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertPredictionHeadTransform', 'complexity': 3, 'lineno': 353, 'endline': 365, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertPredictionHeadTransform', 'name': '__init__', 'complexity': 2, 'lineno': 354, 'endline': 359, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPredictionHeadTransform', 'name': 'forward', 'complexity': 1, 'lineno': 361, 'endline': 365, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForPreTraining', 'complexity': 3, 'lineno': 637, 'endline': 705, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForPreTraining', 'name': '__init__', 'complexity': 1, 'lineno': 687, 'endline': 691, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForPreTraining', 'name': 'forward', 'complexity': 3, 'lineno': 693, 'endline': 705, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertForPreTraining', 'name': 'forward', 'complexity': 3, 'lineno': 693, 'endline': 705, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertForMaskedLM', 'complexity': 3, 'lineno': 708, 'endline': 766, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForMaskedLM', 'name': '__init__', 'complexity': 1, 'lineno': 750, 'endline': 754, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForMaskedLM', 'name': 'forward', 'complexity': 2, 'lineno': 756, 'endline': 766, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForNextSentencePrediction', 'complexity': 3, 'lineno': 769, 'endline': 828, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForNextSentencePrediction', 'name': '__init__', 'complexity': 1, 'lineno': 812, 'endline': 816, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForNextSentencePrediction', 'name': 'forward', 'complexity': 2, 'lineno': 818, 'endline': 828, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForSequenceClassification', 'complexity': 3, 'lineno': 831, 'endline': 894, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForSequenceClassification', 'name': '__init__', 'complexity': 1, 'lineno': 876, 'endline': 882, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForSequenceClassification', 'name': 'forward', 'complexity': 2, 'lineno': 884, 'endline': 894, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForMultipleChoice', 'complexity': 3, 'lineno': 897, 'endline': 963, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForMultipleChoice', 'name': '__init__', 'complexity': 1, 'lineno': 941, 'endline': 947, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForMultipleChoice', 'name': 'forward', 'complexity': 2, 'lineno': 949, 'endline': 963, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForTokenClassification', 'complexity': 3, 'lineno': 966, 'endline': 1029, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForTokenClassification', 'name': '__init__', 'complexity': 1, 'lineno': 1011, 'endline': 1017, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForTokenClassification', 'name': 'forward', 'complexity': 2, 'lineno': 1019, 'endline': 1029, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertConfig', 'complexity': 2, 'lineno': 66, 'endline': 151, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': '__init__', 'complexity': 4, 'lineno': 69, 'endline': 123, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'from_dict', 'complexity': 2, 'lineno': 127, 'endline': 132, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'from_json_file', 'complexity': 1, 'lineno': 135, 'endline': 139, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': '__repr__', 'complexity': 1, 'lineno': 141, 'endline': 142, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'to_dict', 'complexity': 1, 'lineno': 144, 'endline': 147, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'to_json_string', 'complexity': 1, 'lineno': 149, 'endline': 151, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'from_dict', 'complexity': 2, 'lineno': 127, 'endline': 132, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertLayerNorm', 'complexity': 2, 'lineno': 157, 'endline': 170, 'col_offset': 4, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertLayerNorm', 'name': '__init__', 'complexity': 1, 'lineno': 158, 'endline': 164, 'col_offset': 8, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayerNorm', 'name': 'forward', 'complexity': 1, 'lineno': 166, 'endline': 170, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertEmbeddings', 'name': 'forward', 'complexity': 2, 'lineno': 186, 'endline': 200, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertSelfAttention', 'complexity': 2, 'lineno': 203, 'endline': 251, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': '__init__', 'complexity': 2, 'lineno': 204, 'endline': 218, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': 'transpose_for_scores', 'complexity': 1, 'lineno': 220, 'endline': 223, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': 'forward', 'complexity': 1, 'lineno': 225, 'endline': 251, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': '__init__', 'complexity': 2, 'lineno': 204, 'endline': 218, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertSelfOutput', 'complexity': 2, 'lineno': 254, 'endline': 265, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertSelfOutput', 'name': '__init__', 'complexity': 1, 'lineno': 255, 'endline': 259, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfOutput', 'name': 'forward', 'complexity': 1, 'lineno': 261, 'endline': 265, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertAttention', 'complexity': 2, 'lineno': 268, 'endline': 277, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertAttention', 'name': '__init__', 'complexity': 1, 'lineno': 269, 'endline': 272, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertAttention', 'name': 'forward', 'complexity': 1, 'lineno': 274, 'endline': 277, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertIntermediate', 'name': '__init__', 'complexity': 2, 'lineno': 281, 'endline': 285, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertOutput', 'complexity': 2, 'lineno': 293, 'endline': 304, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertOutput', 'name': '__init__', 'complexity': 1, 'lineno': 294, 'endline': 298, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOutput', 'name': 'forward', 'complexity': 1, 'lineno': 300, 'endline': 304, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertLayer', 'complexity': 2, 'lineno': 307, 'endline': 318, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertLayer', 'name': '__init__', 'complexity': 1, 'lineno': 308, 'endline': 312, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayer', 'name': 'forward', 'complexity': 1, 'lineno': 314, 'endline': 318, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertEncoder', 'name': '__init__', 'complexity': 2, 'lineno': 322, 'endline': 325, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertPooler', 'complexity': 2, 'lineno': 338, 'endline': 350, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertPooler', 'name': '__init__', 'complexity': 1, 'lineno': 339, 'endline': 342, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPooler', 'name': 'forward', 'complexity': 1, 'lineno': 344, 'endline': 350, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertPredictionHeadTransform', 'name': '__init__', 'complexity': 2, 'lineno': 354, 'endline': 359, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertLMPredictionHead', 'complexity': 2, 'lineno': 368, 'endline': 384, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertLMPredictionHead', 'name': '__init__', 'complexity': 1, 'lineno': 369, 'endline': 379, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLMPredictionHead', 'name': 'forward', 'complexity': 1, 'lineno': 381, 'endline': 384, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertOnlyMLMHead', 'complexity': 2, 'lineno': 387, 'endline': 394, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertOnlyMLMHead', 'name': '__init__', 'complexity': 1, 'lineno': 388, 'endline': 390, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyMLMHead', 'name': 'forward', 'complexity': 1, 'lineno': 392, 'endline': 394, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertOnlyNSPHead', 'complexity': 2, 'lineno': 397, 'endline': 404, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertOnlyNSPHead', 'name': '__init__', 'complexity': 1, 'lineno': 398, 'endline': 400, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyNSPHead', 'name': 'forward', 'complexity': 1, 'lineno': 402, 'endline': 404, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertPreTrainingHeads', 'complexity': 2, 'lineno': 407, 'endline': 416, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertPreTrainingHeads', 'name': '__init__', 'complexity': 1, 'lineno': 408, 'endline': 411, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPreTrainingHeads', 'name': 'forward', 'complexity': 1, 'lineno': 413, 'endline': 416, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'PreTrainedBertModel', 'name': '__init__', 'complexity': 2, 'lineno': 423, 'endline': 432, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForMaskedLM', 'name': 'forward', 'complexity': 2, 'lineno': 756, 'endline': 766, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForNextSentencePrediction', 'name': 'forward', 'complexity': 2, 'lineno': 818, 'endline': 828, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForSequenceClassification', 'name': 'forward', 'complexity': 2, 'lineno': 884, 'endline': 894, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForMultipleChoice', 'name': 'forward', 'complexity': 2, 'lineno': 949, 'endline': 963, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForTokenClassification', 'name': 'forward', 'complexity': 2, 'lineno': 1019, 'endline': 1029, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'gelu', 'complexity': 1, 'lineno': 51, 'endline': 56, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'swish', 'complexity': 1, 'lineno': 59, 'endline': 60, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'from_json_file', 'complexity': 1, 'lineno': 135, 'endline': 139, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': '__repr__', 'complexity': 1, 'lineno': 141, 'endline': 142, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'to_dict', 'complexity': 1, 'lineno': 144, 'endline': 147, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'to_json_string', 'complexity': 1, 'lineno': 149, 'endline': 151, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayerNorm', 'name': '__init__', 'complexity': 1, 'lineno': 158, 'endline': 164, 'col_offset': 8, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayerNorm', 'name': 'forward', 'complexity': 1, 'lineno': 166, 'endline': 170, 'col_offset': 8, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertEmbeddings', 'name': '__init__', 'complexity': 1, 'lineno': 175, 'endline': 184, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': 'transpose_for_scores', 'complexity': 1, 'lineno': 220, 'endline': 223, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': 'forward', 'complexity': 1, 'lineno': 225, 'endline': 251, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfOutput', 'name': '__init__', 'complexity': 1, 'lineno': 255, 'endline': 259, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfOutput', 'name': 'forward', 'complexity': 1, 'lineno': 261, 'endline': 265, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertAttention', 'name': '__init__', 'complexity': 1, 'lineno': 269, 'endline': 272, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertAttention', 'name': 'forward', 'complexity': 1, 'lineno': 274, 'endline': 277, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertIntermediate', 'name': 'forward', 'complexity': 1, 'lineno': 287, 'endline': 290, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOutput', 'name': '__init__', 'complexity': 1, 'lineno': 294, 'endline': 298, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOutput', 'name': 'forward', 'complexity': 1, 'lineno': 300, 'endline': 304, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayer', 'name': '__init__', 'complexity': 1, 'lineno': 308, 'endline': 312, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayer', 'name': 'forward', 'complexity': 1, 'lineno': 314, 'endline': 318, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPooler', 'name': '__init__', 'complexity': 1, 'lineno': 339, 'endline': 342, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPooler', 'name': 'forward', 'complexity': 1, 'lineno': 344, 'endline': 350, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPredictionHeadTransform', 'name': 'forward', 'complexity': 1, 'lineno': 361, 'endline': 365, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLMPredictionHead', 'name': '__init__', 'complexity': 1, 'lineno': 369, 'endline': 379, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLMPredictionHead', 'name': 'forward', 'complexity': 1, 'lineno': 381, 'endline': 384, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyMLMHead', 'name': '__init__', 'complexity': 1, 'lineno': 388, 'endline': 390, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyMLMHead', 'name': 'forward', 'complexity': 1, 'lineno': 392, 'endline': 394, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyNSPHead', 'name': '__init__', 'complexity': 1, 'lineno': 398, 'endline': 400, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyNSPHead', 'name': 'forward', 'complexity': 1, 'lineno': 402, 'endline': 404, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPreTrainingHeads', 'name': '__init__', 'complexity': 1, 'lineno': 408, 'endline': 411, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPreTrainingHeads', 'name': 'forward', 'complexity': 1, 'lineno': 413, 'endline': 416, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertModel', 'name': '__init__', 'complexity': 1, 'lineno': 598, 'endline': 603, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForPreTraining', 'name': '__init__', 'complexity': 1, 'lineno': 687, 'endline': 691, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForMaskedLM', 'name': '__init__', 'complexity': 1, 'lineno': 750, 'endline': 754, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForNextSentencePrediction', 'name': '__init__', 'complexity': 1, 'lineno': 812, 'endline': 816, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForSequenceClassification', 'name': '__init__', 'complexity': 1, 'lineno': 876, 'endline': 882, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForMultipleChoice', 'name': '__init__', 'complexity': 1, 'lineno': 941, 'endline': 947, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForTokenClassification', 'name': '__init__', 'complexity': 1, 'lineno': 1011, 'endline': 1017, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForQuestionAnswering', 'name': '__init__', 'complexity': 1, 'lineno': 1087, 'endline': 1093, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\optimization.py': [{'type': 'method', 'rank': 'B', 'classname': 'BertAdam', 'name': 'step', 'complexity': 10, 'lineno': 94, 'endline': 162, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'BertAdam', 'complexity': 9, 'lineno': 45, 'endline': 162, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'classname': 'BertAdam', 'name': '__init__', 'complexity': 9, 'lineno': 59, 'endline': 77, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertAdam', 'name': 'get_lr', 'complexity': 5, 'lineno': 79, 'endline': 92, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'classname': 'BertAdam', 'name': 'step', 'complexity': 10, 'lineno': 94, 'endline': 162, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'classname': 'BertAdam', 'name': '__init__', 'complexity': 9, 'lineno': 59, 'endline': 77, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertAdam', 'name': 'get_lr', 'complexity': 5, 'lineno': 79, 'endline': 92, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'warmup_cosine', 'complexity': 2, 'lineno': 23, 'endline': 26, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'warmup_constant', 'complexity': 2, 'lineno': 28, 'endline': 31, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'warmup_linear', 'complexity': 2, 'lineno': 33, 'endline': 36, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\tokenization.py': [{'type': 'method', 'rank': 'C', 'classname': 'BasicTokenizer', 'name': '_is_chinese_char', 'complexity': 17, 'lineno': 210, 'endline': 230, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': '_is_punctuation', 'complexity': 10, 'lineno': 330, 'endline': 343, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'B', 'classname': 'WordpieceTokenizer', 'name': 'tokenize', 'complexity': 9, 'lineno': 254, 'endline': 303, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': '_is_whitespace', 'complexity': 6, 'lineno': 306, 'endline': 315, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'BasicTokenizer', 'complexity': 6, 'lineno': 134, 'endline': 243, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '__init__', 'complexity': 1, 'lineno': 137, 'endline': 143, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': 'tokenize', 'complexity': 3, 'lineno': 145, 'endline': 164, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_run_strip_accents', 'complexity': 3, 'lineno': 166, 'endline': 175, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_run_split_on_punc', 'complexity': 5, 'lineno': 177, 'endline': 195, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_tokenize_chinese_chars', 'complexity': 3, 'lineno': 197, 'endline': 208, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'classname': 'BasicTokenizer', 'name': '_is_chinese_char', 'complexity': 17, 'lineno': 210, 'endline': 230, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'classname': 'BasicTokenizer', 'name': '_clean_text', 'complexity': 6, 'lineno': 232, 'endline': 243, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'classname': 'BasicTokenizer', 'name': '_clean_text', 'complexity': 6, 'lineno': 232, 'endline': 243, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'WordpieceTokenizer', 'complexity': 6, 'lineno': 246, 'endline': 303, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'WordpieceTokenizer', 'name': '__init__', 'complexity': 1, 'lineno': 249, 'endline': 252, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'classname': 'WordpieceTokenizer', 'name': 'tokenize', 'complexity': 9, 'lineno': 254, 'endline': 303, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': '_is_control', 'complexity': 5, 'lineno': 318, 'endline': 327, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 101, 'endline': 131, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_run_split_on_punc', 'complexity': 5, 'lineno': 177, 'endline': 195, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertTokenizer', 'complexity': 4, 'lineno': 66, 'endline': 131, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': '__init__', 'complexity': 3, 'lineno': 68, 'endline': 77, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'tokenize', 'complexity': 3, 'lineno': 79, 'endline': 84, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'convert_tokens_to_ids', 'complexity': 2, 'lineno': 86, 'endline': 91, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'convert_ids_to_tokens', 'complexity': 2, 'lineno': 93, 'endline': 98, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 101, 'endline': 131, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'load_vocab', 'complexity': 3, 'lineno': 42, 'endline': 54, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': '__init__', 'complexity': 3, 'lineno': 68, 'endline': 77, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'tokenize', 'complexity': 3, 'lineno': 79, 'endline': 84, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': 'tokenize', 'complexity': 3, 'lineno': 145, 'endline': 164, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_run_strip_accents', 'complexity': 3, 'lineno': 166, 'endline': 175, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_tokenize_chinese_chars', 'complexity': 3, 'lineno': 197, 'endline': 208, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'whitespace_tokenize', 'complexity': 2, 'lineno': 57, 'endline': 63, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'convert_tokens_to_ids', 'complexity': 2, 'lineno': 86, 'endline': 91, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'convert_ids_to_tokens', 'complexity': 2, 'lineno': 93, 'endline': 98, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '__init__', 'complexity': 1, 'lineno': 137, 'endline': 143, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'WordpieceTokenizer', 'name': '__init__', 'complexity': 1, 'lineno': 249, 'endline': 252, 'col_offset': 4, 'closures': []}]}","{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\setup.py': {'loc': 65, 'lloc': 3, 'sloc': 29, 'comments': 0, 'multi': 22, 'blank': 14, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': {'loc': 112, 'lloc': 68, 'sloc': 82, 'comments': 20, 'multi': 0, 'blank': 9, 'single_comments': 21}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\file_utils.py': {'loc': 239, 'lloc': 155, 'sloc': 144, 'comments': 14, 'multi': 32, 'blank': 48, 'single_comments': 15}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\modeling.py': {'loc': 1119, 'lloc': 512, 'sloc': 532, 'comments': 49, 'multi': 367, 'blank': 167, 'single_comments': 53}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\optimization.py': {'loc': 162, 'lloc': 86, 'sloc': 90, 'comments': 31, 'multi': 18, 'blank': 22, 'single_comments': 32}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\tokenization.py': {'loc': 343, 'lloc': 219, 'sloc': 223, 'comments': 45, 'multi': 20, 'blank': 45, 'single_comments': 55}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\__init__.py': {'loc': 8, 'lloc': 5, 'sloc': 8, 'comments': 0, 'multi': 0, 'blank': 0, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\__main__.py': {'loc': 19, 'lloc': 14, 'sloc': 16, 'comments': 2, 'multi': 0, 'blank': 1, 'single_comments': 2}}","{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\setup.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': {'total': [6, 27, 15, 29, 33, 44, 143.89173756274062, 221.95334125177195, 3.222222222222222, 715.1829884779319, 39.732388248773994, 0.073984447083923], 'functions': [['convert_tf_checkpoint_to_pytorch', [6, 25, 14, 27, 31, 41, 131.60617974869504, 203.1220487258619, 3.24, 658.1154378717926, 36.56196877065514, 0.067707349575287]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\file_utils.py': {'total': [9, 32, 19, 33, 41, 52, 188.52932501298082, 278.59270424014034, 4.640625, 1292.8442681144013, 71.82468156191118, 0.092864234746713], 'functions': [['url_to_filename', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['filename_to_url', [3, 6, 4, 6, 9, 10, 20.264662506490406, 31.699250014423125, 1.5, 47.548875021634686, 2.641604167868593, 0.010566416671474]], ['cached_path', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['split_s3_path', [2, 4, 3, 4, 6, 7, 10.0, 18.094737505048094, 1.0, 18.094737505048094, 1.005263194724894, 0.006031579168349]], ['s3_request', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['s3_etag', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['s3_get', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['http_get', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_from_cache', [4, 7, 4, 7, 11, 11, 27.651484454403228, 38.053747805010275, 2.0, 76.10749561002055, 4.228194200556697, 0.012684582601670002]], ['read_set_from_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_file_extension', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\modeling.py': {'total': [14, 94, 103, 164, 108, 267, 669.4343209665043, 1803.5549630776463, 12.212765957446809, 22026.394655458917, 1223.6885919699398, 0.601184987692548], 'functions': [['gelu', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['swish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_dict', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['from_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__repr__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_json_string', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 10, 8, 14, 15, 22, 44.82892142331043, 85.95159310338741, 3.5, 300.83057586185595, 16.712809770103107, 0.028650531034462003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 6, 3, 6, 8, 9, 17.509775004326936, 27.0, 1.0, 27.0, 1.5, 0.009000000000000001]], ['__init__', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['transpose_for_scores', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['forward', [3, 7, 7, 10, 10, 17, 24.406371956566698, 56.472777613085164, 2.1428571428571432, 121.0130948851825, 6.722949715843472, 0.018824259204361]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['init_bert_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['from_pretrained', [7, 21, 13, 25, 28, 38, 111.8901503327572, 182.67948703818894, 4.166666666666667, 761.1645293257873, 42.28691829587707, 0.060893162346062006]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 9, 8, 12, 14, 20, 40.13896548741762, 76.14709844115208, 3.333333333333333, 253.82366147050695, 14.101314526139275, 0.02538236614705]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 9, 13, 12, 22, 32.0, 78.86917501586544, 3.25, 256.3248188015627, 14.240267711197927, 0.026289725005288003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 3, 4, 5, 7, 6.754887502163469, 16.253496664211536, 1.333333333333333, 21.67132888561538, 1.203962715867521, 0.005417832221403]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 8, 9, 5, 17, 6.754887502163469, 39.47277761308516, 3.0, 118.41833283925547, 6.578796268847526, 0.013157592537695]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 3, 4, 5, 7, 6.754887502163469, 16.253496664211536, 1.333333333333333, 21.67132888561538, 1.203962715867521, 0.005417832221403]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 12, 12, 19, 18, 31, 58.52932501298082, 129.26767504471167, 4.75, 614.0214564623805, 34.112303136798914, 0.043089225014903004]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\optimization.py': {'total': [16, 68, 52, 92, 84, 144, 477.94747320502313, 920.4937088801414, 10.823529411764707, 9962.99073140859, 553.499485078255, 0.30683123629338005], 'functions': [['warmup_cosine', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['warmup_constant', [2, 2, 2, 4, 4, 6, 4.0, 12.0, 2.0, 24.0, 1.333333333333333, 0.004]], ['warmup_linear', [3, 3, 3, 6, 6, 9, 9.509775004326938, 23.264662506490403, 3.0, 69.79398751947122, 3.877443751081734, 0.007754887502163001]], ['__init__', [9, 20, 19, 29, 29, 48, 114.96788691072805, 233.1830877661235, 6.525, 1521.519647673956, 84.52886931521977, 0.07772769592204101]], ['get_lr', [5, 9, 5, 9, 14, 14, 40.13896548741762, 53.30296890880645, 2.5, 133.25742227201613, 7.4031901262231194, 0.017767656302935]], ['step', [10, 27, 18, 34, 37, 52, 161.6012435072873, 270.8915750127054, 6.296296296296297, 1705.6136204503675, 94.75631224724265, 0.090297191670901]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\tokenization.py': {'total': [13, 112, 69, 146, 125, 215, 810.5294676062858, 1497.6436212023489, 8.473214285714286, 12689.855326080618, 704.9919625600344, 0.49921454040078206], 'functions': [['load_vocab', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['whitespace_tokenize', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_ids', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_ids_to_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_run_strip_accents', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_run_split_on_punc', [3, 3, 3, 5, 6, 8, 9.509775004326938, 20.67970000576925, 2.5, 51.69925001442312, 2.87218055635684, 0.006893233335256]], ['_tokenize_chinese_chars', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_is_chinese_char', [4, 41, 25, 56, 45, 81, 227.65963218934144, 444.84010080270366, 2.731707317073171, 1215.1729582903126, 67.50960879390625, 0.148280033600901]], ['_clean_text', [2, 6, 3, 7, 8, 10, 17.509775004326936, 30.0, 1.166666666666666, 35.0, 1.9444444444444442, 0.01]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [6, 12, 8, 16, 18, 24, 58.52932501298082, 100.07820003461549, 4.0, 400.31280013846197, 22.23960000769233, 0.033359400011538004]], ['_is_whitespace', [2, 11, 6, 14, 13, 20, 40.053747805010275, 74.00879436282185, 1.272727272727272, 94.1930110072278, 5.232945055957099, 0.024669598120940002]], ['_is_control', [2, 7, 4, 9, 9, 13, 21.651484454403228, 41.20902501875006, 1.2857142857142851, 52.98303216696437, 2.943501787053576, 0.013736341672916002]], ['_is_punctuation', [4, 21, 13, 28, 25, 41, 100.23866587835397, 190.3981037807637, 2.666666666666666, 507.7282767487032, 28.207126486039066, 0.063466034593587]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\__init__.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.4.0\\pytorch_pretrained_bert\\__main__.py': {'total': [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001], 'functions': []}}"
transformers,"{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\convert_openai_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 48, 'complexity': 2, 'name': 'convert_openai_checkpoint_to_pytorch', 'lineno': 30, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 41, 'complexity': 1, 'name': 'convert_tf_checkpoint_to_pytorch', 'lineno': 30, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\convert_transfo_xl_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 89, 'complexity': 4, 'name': 'convert_transfo_xl_checkpoint_to_pytorch', 'lineno': 47, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\file_utils.py': [{'type': 'function', 'rank': 'B', 'col_offset': 0, 'endline': 110, 'complexity': 9, 'name': 'cached_path', 'lineno': 83, 'closures': []}, {'type': 'function', 'rank': 'B', 'col_offset': 0, 'endline': 231, 'complexity': 9, 'name': 'get_from_cache', 'lineno': 174, 'closures': []}, {'type': 'function', 'rank': 'B', 'col_offset': 0, 'endline': 80, 'complexity': 6, 'name': 'filename_to_url', 'lineno': 57, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 123, 'complexity': 4, 'name': 'split_s3_path', 'lineno': 113, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 171, 'complexity': 4, 'name': 'http_get', 'lineno': 162, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 249, 'complexity': 3, 'name': 'get_file_extension', 'lineno': 246, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 54, 'complexity': 2, 'name': 'url_to_filename', 'lineno': 39, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 243, 'complexity': 2, 'name': 'read_set_from_file', 'lineno': 234, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 142, 'complexity': 1, 'name': 's3_request', 'lineno': 126, 'closures': [{'type': 'function', 'rank': 'A', 'col_offset': 4, 'endline': 140, 'complexity': 3, 'name': 'wrapper', 'lineno': 133, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 151, 'complexity': 1, 'name': 's3_etag', 'lineno': 146, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 159, 'complexity': 1, 'name': 's3_get', 'lineno': 155, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\modeling.py': [{'type': 'method', 'rank': 'D', 'col_offset': 4, 'endline': 635, 'complexity': 23, 'classname': 'BertPreTrainedModel', 'name': 'from_pretrained', 'lineno': 515, 'closures': [{'type': 'function', 'rank': 'A', 'col_offset': 8, 'endline': 621, 'complexity': 4, 'name': 'load', 'lineno': 615, 'closures': []}]}, {'type': 'function', 'rank': 'C', 'col_offset': 0, 'endline': 110, 'complexity': 18, 'name': 'load_tf_weights_in_bert', 'lineno': 52, 'closures': []}, {'type': 'class', 'rank': 'C', 'col_offset': 0, 'endline': 635, 'complexity': 11, 'name': 'BertPreTrainedModel', 'lineno': 486, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 499, 'complexity': 2, 'classname': 'BertPreTrainedModel', 'name': '__init__', 'lineno': 490, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 512, 'complexity': 5, 'classname': 'BertPreTrainedModel', 'name': 'init_bert_weights', 'lineno': 501, 'closures': []}, {'type': 'method', 'rank': 'D', 'col_offset': 4, 'endline': 635, 'complexity': 23, 'classname': 'BertPreTrainedModel', 'name': 'from_pretrained', 'lineno': 515, 'closures': [{'type': 'function', 'rank': 'A', 'col_offset': 8, 'endline': 621, 'complexity': 4, 'name': 'load', 'lineno': 615, 'closures': []}]}]}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 186, 'complexity': 6, 'classname': 'BertConfig', 'name': '__init__', 'lineno': 131, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 512, 'complexity': 5, 'classname': 'BertPreTrainedModel', 'name': 'init_bert_weights', 'lineno': 501, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1202, 'complexity': 5, 'classname': 'BertForQuestionAnswering', 'name': 'forward', 'lineno': 1178, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 355, 'complexity': 4, 'name': 'BertIntermediate', 'lineno': 343, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 350, 'complexity': 4, 'classname': 'BertIntermediate', 'name': '__init__', 'lineno': 344, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 355, 'complexity': 1, 'classname': 'BertIntermediate', 'name': 'forward', 'lineno': 352, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 350, 'complexity': 4, 'classname': 'BertIntermediate', 'name': '__init__', 'lineno': 344, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 400, 'complexity': 4, 'name': 'BertEncoder', 'lineno': 386, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 390, 'complexity': 2, 'classname': 'BertEncoder', 'name': '__init__', 'lineno': 387, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 400, 'complexity': 4, 'classname': 'BertEncoder', 'name': 'forward', 'lineno': 392, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 400, 'complexity': 4, 'classname': 'BertEncoder', 'name': 'forward', 'lineno': 392, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 432, 'complexity': 4, 'name': 'BertPredictionHeadTransform', 'lineno': 418, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 426, 'complexity': 4, 'classname': 'BertPredictionHeadTransform', 'name': '__init__', 'lineno': 419, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 432, 'complexity': 1, 'classname': 'BertPredictionHeadTransform', 'name': 'forward', 'lineno': 428, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 426, 'complexity': 4, 'classname': 'BertPredictionHeadTransform', 'name': '__init__', 'lineno': 419, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 718, 'complexity': 4, 'name': 'BertModel', 'lineno': 638, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 687, 'complexity': 1, 'classname': 'BertModel', 'name': '__init__', 'lineno': 682, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 718, 'complexity': 4, 'classname': 'BertModel', 'name': 'forward', 'lineno': 689, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 718, 'complexity': 4, 'classname': 'BertModel', 'name': 'forward', 'lineno': 689, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 1202, 'complexity': 4, 'name': 'BertForQuestionAnswering', 'lineno': 1123, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1176, 'complexity': 1, 'classname': 'BertForQuestionAnswering', 'name': '__init__', 'lineno': 1170, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1202, 'complexity': 5, 'classname': 'BertForQuestionAnswering', 'name': 'forward', 'lineno': 1178, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 214, 'complexity': 3, 'name': 'BertConfig', 'lineno': 128, 'methods': [{'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 186, 'complexity': 6, 'classname': 'BertConfig', 'name': '__init__', 'lineno': 131, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 195, 'complexity': 2, 'classname': 'BertConfig', 'name': 'from_dict', 'lineno': 190, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 202, 'complexity': 1, 'classname': 'BertConfig', 'name': 'from_json_file', 'lineno': 198, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 205, 'complexity': 1, 'classname': 'BertConfig', 'name': '__repr__', 'lineno': 204, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 210, 'complexity': 1, 'classname': 'BertConfig', 'name': 'to_dict', 'lineno': 207, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 214, 'complexity': 1, 'classname': 'BertConfig', 'name': 'to_json_string', 'lineno': 212, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 263, 'complexity': 3, 'name': 'BertEmbeddings', 'lineno': 235, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 247, 'complexity': 1, 'classname': 'BertEmbeddings', 'name': '__init__', 'lineno': 238, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 263, 'complexity': 2, 'classname': 'BertEmbeddings', 'name': 'forward', 'lineno': 249, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 789, 'complexity': 3, 'name': 'BertForPreTraining', 'lineno': 721, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 775, 'complexity': 1, 'classname': 'BertForPreTraining', 'name': '__init__', 'lineno': 771, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 789, 'complexity': 3, 'classname': 'BertForPreTraining', 'name': 'forward', 'lineno': 777, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 789, 'complexity': 3, 'classname': 'BertForPreTraining', 'name': 'forward', 'lineno': 777, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 850, 'complexity': 3, 'name': 'BertForMaskedLM', 'lineno': 792, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 838, 'complexity': 1, 'classname': 'BertForMaskedLM', 'name': '__init__', 'lineno': 834, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 850, 'complexity': 2, 'classname': 'BertForMaskedLM', 'name': 'forward', 'lineno': 840, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 912, 'complexity': 3, 'name': 'BertForNextSentencePrediction', 'lineno': 853, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 900, 'complexity': 1, 'classname': 'BertForNextSentencePrediction', 'name': '__init__', 'lineno': 896, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 912, 'complexity': 2, 'classname': 'BertForNextSentencePrediction', 'name': 'forward', 'lineno': 902, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 978, 'complexity': 3, 'name': 'BertForSequenceClassification', 'lineno': 915, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 966, 'complexity': 1, 'classname': 'BertForSequenceClassification', 'name': '__init__', 'lineno': 960, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 978, 'complexity': 2, 'classname': 'BertForSequenceClassification', 'name': 'forward', 'lineno': 968, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 1047, 'complexity': 3, 'name': 'BertForMultipleChoice', 'lineno': 981, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1031, 'complexity': 1, 'classname': 'BertForMultipleChoice', 'name': '__init__', 'lineno': 1025, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1047, 'complexity': 2, 'classname': 'BertForMultipleChoice', 'name': 'forward', 'lineno': 1033, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 1120, 'complexity': 3, 'name': 'BertForTokenClassification', 'lineno': 1050, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1101, 'complexity': 1, 'classname': 'BertForTokenClassification', 'name': '__init__', 'lineno': 1095, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1120, 'complexity': 3, 'classname': 'BertForTokenClassification', 'name': 'forward', 'lineno': 1103, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1120, 'complexity': 3, 'classname': 'BertForTokenClassification', 'name': 'forward', 'lineno': 1103, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 195, 'complexity': 2, 'classname': 'BertConfig', 'name': 'from_dict', 'lineno': 190, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 4, 'endline': 233, 'complexity': 2, 'name': 'BertLayerNorm', 'lineno': 220, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 8, 'endline': 227, 'complexity': 1, 'classname': 'BertLayerNorm', 'name': '__init__', 'lineno': 221, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 8, 'endline': 233, 'complexity': 1, 'classname': 'BertLayerNorm', 'name': 'forward', 'lineno': 229, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 263, 'complexity': 2, 'classname': 'BertEmbeddings', 'name': 'forward', 'lineno': 249, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 314, 'complexity': 2, 'name': 'BertSelfAttention', 'lineno': 266, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 281, 'complexity': 2, 'classname': 'BertSelfAttention', 'name': '__init__', 'lineno': 267, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 286, 'complexity': 1, 'classname': 'BertSelfAttention', 'name': 'transpose_for_scores', 'lineno': 283, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 314, 'complexity': 1, 'classname': 'BertSelfAttention', 'name': 'forward', 'lineno': 288, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 281, 'complexity': 2, 'classname': 'BertSelfAttention', 'name': '__init__', 'lineno': 267, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 328, 'complexity': 2, 'name': 'BertSelfOutput', 'lineno': 317, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 322, 'complexity': 1, 'classname': 'BertSelfOutput', 'name': '__init__', 'lineno': 318, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 328, 'complexity': 1, 'classname': 'BertSelfOutput', 'name': 'forward', 'lineno': 324, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 340, 'complexity': 2, 'name': 'BertAttention', 'lineno': 331, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 335, 'complexity': 1, 'classname': 'BertAttention', 'name': '__init__', 'lineno': 332, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 340, 'complexity': 1, 'classname': 'BertAttention', 'name': 'forward', 'lineno': 337, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 369, 'complexity': 2, 'name': 'BertOutput', 'lineno': 358, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 363, 'complexity': 1, 'classname': 'BertOutput', 'name': '__init__', 'lineno': 359, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 369, 'complexity': 1, 'classname': 'BertOutput', 'name': 'forward', 'lineno': 365, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 383, 'complexity': 2, 'name': 'BertLayer', 'lineno': 372, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 377, 'complexity': 1, 'classname': 'BertLayer', 'name': '__init__', 'lineno': 373, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 383, 'complexity': 1, 'classname': 'BertLayer', 'name': 'forward', 'lineno': 379, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 390, 'complexity': 2, 'classname': 'BertEncoder', 'name': '__init__', 'lineno': 387, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 415, 'complexity': 2, 'name': 'BertPooler', 'lineno': 403, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 407, 'complexity': 1, 'classname': 'BertPooler', 'name': '__init__', 'lineno': 404, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 415, 'complexity': 1, 'classname': 'BertPooler', 'name': 'forward', 'lineno': 409, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 451, 'complexity': 2, 'name': 'BertLMPredictionHead', 'lineno': 435, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 446, 'complexity': 1, 'classname': 'BertLMPredictionHead', 'name': '__init__', 'lineno': 436, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 451, 'complexity': 1, 'classname': 'BertLMPredictionHead', 'name': 'forward', 'lineno': 448, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 461, 'complexity': 2, 'name': 'BertOnlyMLMHead', 'lineno': 454, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 457, 'complexity': 1, 'classname': 'BertOnlyMLMHead', 'name': '__init__', 'lineno': 455, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 461, 'complexity': 1, 'classname': 'BertOnlyMLMHead', 'name': 'forward', 'lineno': 459, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 471, 'complexity': 2, 'name': 'BertOnlyNSPHead', 'lineno': 464, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 467, 'complexity': 1, 'classname': 'BertOnlyNSPHead', 'name': '__init__', 'lineno': 465, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 471, 'complexity': 1, 'classname': 'BertOnlyNSPHead', 'name': 'forward', 'lineno': 469, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 483, 'complexity': 2, 'name': 'BertPreTrainingHeads', 'lineno': 474, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 478, 'complexity': 1, 'classname': 'BertPreTrainingHeads', 'name': '__init__', 'lineno': 475, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 483, 'complexity': 1, 'classname': 'BertPreTrainingHeads', 'name': 'forward', 'lineno': 480, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 499, 'complexity': 2, 'classname': 'BertPreTrainedModel', 'name': '__init__', 'lineno': 490, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 850, 'complexity': 2, 'classname': 'BertForMaskedLM', 'name': 'forward', 'lineno': 840, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 912, 'complexity': 2, 'classname': 'BertForNextSentencePrediction', 'name': 'forward', 'lineno': 902, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 978, 'complexity': 2, 'classname': 'BertForSequenceClassification', 'name': 'forward', 'lineno': 968, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1047, 'complexity': 2, 'classname': 'BertForMultipleChoice', 'name': 'forward', 'lineno': 1033, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 118, 'complexity': 1, 'name': 'gelu', 'lineno': 113, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 122, 'complexity': 1, 'name': 'swish', 'lineno': 121, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 202, 'complexity': 1, 'classname': 'BertConfig', 'name': 'from_json_file', 'lineno': 198, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 205, 'complexity': 1, 'classname': 'BertConfig', 'name': '__repr__', 'lineno': 204, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 210, 'complexity': 1, 'classname': 'BertConfig', 'name': 'to_dict', 'lineno': 207, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 214, 'complexity': 1, 'classname': 'BertConfig', 'name': 'to_json_string', 'lineno': 212, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 8, 'endline': 227, 'complexity': 1, 'classname': 'BertLayerNorm', 'name': '__init__', 'lineno': 221, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 8, 'endline': 233, 'complexity': 1, 'classname': 'BertLayerNorm', 'name': 'forward', 'lineno': 229, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 247, 'complexity': 1, 'classname': 'BertEmbeddings', 'name': '__init__', 'lineno': 238, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 286, 'complexity': 1, 'classname': 'BertSelfAttention', 'name': 'transpose_for_scores', 'lineno': 283, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 314, 'complexity': 1, 'classname': 'BertSelfAttention', 'name': 'forward', 'lineno': 288, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 322, 'complexity': 1, 'classname': 'BertSelfOutput', 'name': '__init__', 'lineno': 318, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 328, 'complexity': 1, 'classname': 'BertSelfOutput', 'name': 'forward', 'lineno': 324, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 335, 'complexity': 1, 'classname': 'BertAttention', 'name': '__init__', 'lineno': 332, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 340, 'complexity': 1, 'classname': 'BertAttention', 'name': 'forward', 'lineno': 337, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 355, 'complexity': 1, 'classname': 'BertIntermediate', 'name': 'forward', 'lineno': 352, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 363, 'complexity': 1, 'classname': 'BertOutput', 'name': '__init__', 'lineno': 359, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 369, 'complexity': 1, 'classname': 'BertOutput', 'name': 'forward', 'lineno': 365, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 377, 'complexity': 1, 'classname': 'BertLayer', 'name': '__init__', 'lineno': 373, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 383, 'complexity': 1, 'classname': 'BertLayer', 'name': 'forward', 'lineno': 379, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 407, 'complexity': 1, 'classname': 'BertPooler', 'name': '__init__', 'lineno': 404, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 415, 'complexity': 1, 'classname': 'BertPooler', 'name': 'forward', 'lineno': 409, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 432, 'complexity': 1, 'classname': 'BertPredictionHeadTransform', 'name': 'forward', 'lineno': 428, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 446, 'complexity': 1, 'classname': 'BertLMPredictionHead', 'name': '__init__', 'lineno': 436, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 451, 'complexity': 1, 'classname': 'BertLMPredictionHead', 'name': 'forward', 'lineno': 448, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 457, 'complexity': 1, 'classname': 'BertOnlyMLMHead', 'name': '__init__', 'lineno': 455, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 461, 'complexity': 1, 'classname': 'BertOnlyMLMHead', 'name': 'forward', 'lineno': 459, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 467, 'complexity': 1, 'classname': 'BertOnlyNSPHead', 'name': '__init__', 'lineno': 465, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 471, 'complexity': 1, 'classname': 'BertOnlyNSPHead', 'name': 'forward', 'lineno': 469, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 478, 'complexity': 1, 'classname': 'BertPreTrainingHeads', 'name': '__init__', 'lineno': 475, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 483, 'complexity': 1, 'classname': 'BertPreTrainingHeads', 'name': 'forward', 'lineno': 480, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 687, 'complexity': 1, 'classname': 'BertModel', 'name': '__init__', 'lineno': 682, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 775, 'complexity': 1, 'classname': 'BertForPreTraining', 'name': '__init__', 'lineno': 771, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 838, 'complexity': 1, 'classname': 'BertForMaskedLM', 'name': '__init__', 'lineno': 834, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 900, 'complexity': 1, 'classname': 'BertForNextSentencePrediction', 'name': '__init__', 'lineno': 896, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 966, 'complexity': 1, 'classname': 'BertForSequenceClassification', 'name': '__init__', 'lineno': 960, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1031, 'complexity': 1, 'classname': 'BertForMultipleChoice', 'name': '__init__', 'lineno': 1025, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1101, 'complexity': 1, 'classname': 'BertForTokenClassification', 'name': '__init__', 'lineno': 1095, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1176, 'complexity': 1, 'classname': 'BertForQuestionAnswering', 'name': '__init__', 'lineno': 1170, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\modeling_openai.py': [{'type': 'method', 'rank': 'D', 'col_offset': 4, 'endline': 533, 'complexity': 23, 'classname': 'OpenAIGPTPreTrainedModel', 'name': 'from_pretrained', 'lineno': 416, 'closures': [{'type': 'function', 'rank': 'A', 'col_offset': 8, 'endline': 510, 'complexity': 4, 'name': 'load', 'lineno': 503, 'closures': []}]}, {'type': 'function', 'rank': 'C', 'col_offset': 0, 'endline': 113, 'complexity': 20, 'name': 'load_tf_weights_in_openai_gpt', 'lineno': 46, 'closures': []}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'endline': 533, 'complexity': 9, 'name': 'OpenAIGPTPreTrainedModel', 'lineno': 382, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 397, 'complexity': 2, 'classname': 'OpenAIGPTPreTrainedModel', 'name': '__init__', 'lineno': 387, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 410, 'complexity': 5, 'classname': 'OpenAIGPTPreTrainedModel', 'name': 'init_weights', 'lineno': 399, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 413, 'complexity': 1, 'classname': 'OpenAIGPTPreTrainedModel', 'name': 'set_num_special_tokens', 'lineno': 412, 'closures': []}, {'type': 'method', 'rank': 'D', 'col_offset': 4, 'endline': 533, 'complexity': 23, 'classname': 'OpenAIGPTPreTrainedModel', 'name': 'from_pretrained', 'lineno': 416, 'closures': [{'type': 'function', 'rank': 'A', 'col_offset': 8, 'endline': 510, 'complexity': 4, 'name': 'load', 'lineno': 503, 'closures': []}]}]}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 191, 'complexity': 6, 'classname': 'OpenAIGPTConfig', 'name': '__init__', 'lineno': 131, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 410, 'complexity': 5, 'classname': 'OpenAIGPTPreTrainedModel', 'name': 'init_weights', 'lineno': 399, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 640, 'complexity': 4, 'name': 'OpenAIGPTModel', 'lineno': 536, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 596, 'complexity': 2, 'classname': 'OpenAIGPTModel', 'name': '__init__', 'lineno': 587, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 612, 'complexity': 2, 'classname': 'OpenAIGPTModel', 'name': 'set_num_special_tokens', 'lineno': 599, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 640, 'complexity': 4, 'classname': 'OpenAIGPTModel', 'name': 'forward', 'lineno': 614, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 640, 'complexity': 4, 'classname': 'OpenAIGPTModel', 'name': 'forward', 'lineno': 614, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 810, 'complexity': 4, 'classname': 'OpenAIGPTDoubleHeadsModel', 'name': 'forward', 'lineno': 797, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 224, 'complexity': 3, 'name': 'OpenAIGPTConfig', 'lineno': 127, 'methods': [{'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 191, 'complexity': 6, 'classname': 'OpenAIGPTConfig', 'name': '__init__', 'lineno': 131, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 197, 'complexity': 1, 'classname': 'OpenAIGPTConfig', 'name': 'total_tokens_embeddings', 'lineno': 196, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 205, 'complexity': 2, 'classname': 'OpenAIGPTConfig', 'name': 'from_dict', 'lineno': 200, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 212, 'complexity': 1, 'classname': 'OpenAIGPTConfig', 'name': 'from_json_file', 'lineno': 208, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 215, 'complexity': 1, 'classname': 'OpenAIGPTConfig', 'name': '__repr__', 'lineno': 214, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 220, 'complexity': 1, 'classname': 'OpenAIGPTConfig', 'name': 'to_dict', 'lineno': 217, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 224, 'complexity': 1, 'classname': 'OpenAIGPTConfig', 'name': 'to_json_string', 'lineno': 222, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 247, 'complexity': 3, 'name': 'Conv1D', 'lineno': 227, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 238, 'complexity': 2, 'classname': 'Conv1D', 'name': '__init__', 'lineno': 228, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 247, 'complexity': 2, 'classname': 'Conv1D', 'name': 'forward', 'lineno': 240, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 810, 'complexity': 3, 'name': 'OpenAIGPTDoubleHeadsModel', 'lineno': 722, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 788, 'complexity': 1, 'classname': 'OpenAIGPTDoubleHeadsModel', 'name': '__init__', 'lineno': 783, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 795, 'complexity': 1, 'classname': 'OpenAIGPTDoubleHeadsModel', 'name': 'set_num_special_tokens', 'lineno': 790, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 810, 'complexity': 4, 'classname': 'OpenAIGPTDoubleHeadsModel', 'name': 'forward', 'lineno': 797, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 205, 'complexity': 2, 'classname': 'OpenAIGPTConfig', 'name': 'from_dict', 'lineno': 200, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 238, 'complexity': 2, 'classname': 'Conv1D', 'name': '__init__', 'lineno': 228, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 247, 'complexity': 2, 'classname': 'Conv1D', 'name': 'forward', 'lineno': 240, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 301, 'complexity': 2, 'name': 'Attention', 'lineno': 250, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 263, 'complexity': 2, 'classname': 'Attention', 'name': '__init__', 'lineno': 251, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 276, 'complexity': 2, 'classname': 'Attention', 'name': '_attn', 'lineno': 265, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 281, 'complexity': 1, 'classname': 'Attention', 'name': 'merge_heads', 'lineno': 278, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 289, 'complexity': 2, 'classname': 'Attention', 'name': 'split_heads', 'lineno': 283, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 301, 'complexity': 1, 'classname': 'Attention', 'name': 'forward', 'lineno': 291, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 263, 'complexity': 2, 'classname': 'Attention', 'name': '__init__', 'lineno': 251, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 276, 'complexity': 2, 'classname': 'Attention', 'name': '_attn', 'lineno': 265, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 289, 'complexity': 2, 'classname': 'Attention', 'name': 'split_heads', 'lineno': 283, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 316, 'complexity': 2, 'name': 'MLP', 'lineno': 304, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 311, 'complexity': 1, 'classname': 'MLP', 'name': '__init__', 'lineno': 305, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 316, 'complexity': 1, 'classname': 'MLP', 'name': 'forward', 'lineno': 313, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 333, 'complexity': 2, 'name': 'Block', 'lineno': 319, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 326, 'complexity': 1, 'classname': 'Block', 'name': '__init__', 'lineno': 320, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 333, 'complexity': 1, 'classname': 'Block', 'name': 'forward', 'lineno': 328, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 353, 'complexity': 2, 'name': 'OpenAIGPTLMHead', 'lineno': 336, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 342, 'complexity': 1, 'classname': 'OpenAIGPTLMHead', 'name': '__init__', 'lineno': 339, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 347, 'complexity': 1, 'classname': 'OpenAIGPTLMHead', 'name': 'set_embeddings_weights', 'lineno': 344, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 353, 'complexity': 1, 'classname': 'OpenAIGPTLMHead', 'name': 'forward', 'lineno': 349, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 379, 'complexity': 2, 'name': 'OpenAIGPTMultipleChoiceHead', 'lineno': 356, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 367, 'complexity': 1, 'classname': 'OpenAIGPTMultipleChoiceHead', 'name': '__init__', 'lineno': 359, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 379, 'complexity': 1, 'classname': 'OpenAIGPTMultipleChoiceHead', 'name': 'forward', 'lineno': 369, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 397, 'complexity': 2, 'classname': 'OpenAIGPTPreTrainedModel', 'name': '__init__', 'lineno': 387, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 596, 'complexity': 2, 'classname': 'OpenAIGPTModel', 'name': '__init__', 'lineno': 587, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 612, 'complexity': 2, 'classname': 'OpenAIGPTModel', 'name': 'set_num_special_tokens', 'lineno': 599, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 719, 'complexity': 2, 'name': 'OpenAIGPTLMHeadModel', 'lineno': 643, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 703, 'complexity': 1, 'classname': 'OpenAIGPTLMHeadModel', 'name': '__init__', 'lineno': 699, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 710, 'complexity': 1, 'classname': 'OpenAIGPTLMHeadModel', 'name': 'set_num_special_tokens', 'lineno': 705, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 719, 'complexity': 2, 'classname': 'OpenAIGPTLMHeadModel', 'name': 'forward', 'lineno': 712, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 719, 'complexity': 2, 'classname': 'OpenAIGPTLMHeadModel', 'name': 'forward', 'lineno': 712, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 117, 'complexity': 1, 'name': 'gelu', 'lineno': 116, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 121, 'complexity': 1, 'name': 'swish', 'lineno': 120, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 197, 'complexity': 1, 'classname': 'OpenAIGPTConfig', 'name': 'total_tokens_embeddings', 'lineno': 196, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 212, 'complexity': 1, 'classname': 'OpenAIGPTConfig', 'name': 'from_json_file', 'lineno': 208, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 215, 'complexity': 1, 'classname': 'OpenAIGPTConfig', 'name': '__repr__', 'lineno': 214, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 220, 'complexity': 1, 'classname': 'OpenAIGPTConfig', 'name': 'to_dict', 'lineno': 217, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 224, 'complexity': 1, 'classname': 'OpenAIGPTConfig', 'name': 'to_json_string', 'lineno': 222, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 281, 'complexity': 1, 'classname': 'Attention', 'name': 'merge_heads', 'lineno': 278, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 301, 'complexity': 1, 'classname': 'Attention', 'name': 'forward', 'lineno': 291, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 311, 'complexity': 1, 'classname': 'MLP', 'name': '__init__', 'lineno': 305, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 316, 'complexity': 1, 'classname': 'MLP', 'name': 'forward', 'lineno': 313, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 326, 'complexity': 1, 'classname': 'Block', 'name': '__init__', 'lineno': 320, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 333, 'complexity': 1, 'classname': 'Block', 'name': 'forward', 'lineno': 328, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 342, 'complexity': 1, 'classname': 'OpenAIGPTLMHead', 'name': '__init__', 'lineno': 339, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 347, 'complexity': 1, 'classname': 'OpenAIGPTLMHead', 'name': 'set_embeddings_weights', 'lineno': 344, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 353, 'complexity': 1, 'classname': 'OpenAIGPTLMHead', 'name': 'forward', 'lineno': 349, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 367, 'complexity': 1, 'classname': 'OpenAIGPTMultipleChoiceHead', 'name': '__init__', 'lineno': 359, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 379, 'complexity': 1, 'classname': 'OpenAIGPTMultipleChoiceHead', 'name': 'forward', 'lineno': 369, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 413, 'complexity': 1, 'classname': 'OpenAIGPTPreTrainedModel', 'name': 'set_num_special_tokens', 'lineno': 412, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 703, 'complexity': 1, 'classname': 'OpenAIGPTLMHeadModel', 'name': '__init__', 'lineno': 699, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 710, 'complexity': 1, 'classname': 'OpenAIGPTLMHeadModel', 'name': 'set_num_special_tokens', 'lineno': 705, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 788, 'complexity': 1, 'classname': 'OpenAIGPTDoubleHeadsModel', 'name': '__init__', 'lineno': 783, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 795, 'complexity': 1, 'classname': 'OpenAIGPTDoubleHeadsModel', 'name': 'set_num_special_tokens', 'lineno': 790, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\modeling_transfo_xl.py': [{'type': 'method', 'rank': 'D', 'col_offset': 4, 'endline': 879, 'complexity': 29, 'classname': 'TransfoXLPreTrainedModel', 'name': 'init_weights', 'lineno': 840, 'closures': []}, {'type': 'method', 'rank': 'D', 'col_offset': 4, 'endline': 1226, 'complexity': 24, 'classname': 'TransfoXLModel', 'name': '_forward', 'lineno': 1138, 'closures': []}, {'type': 'method', 'rank': 'C', 'col_offset': 4, 'endline': 1091, 'complexity': 18, 'classname': 'TransfoXLModel', 'name': '__init__', 'lineno': 1018, 'closures': []}, {'type': 'function', 'rank': 'C', 'col_offset': 0, 'endline': 180, 'complexity': 16, 'name': 'load_tf_weights_in_transfo_xl', 'lineno': 127, 'closures': []}, {'type': 'method', 'rank': 'C', 'col_offset': 4, 'endline': 975, 'complexity': 14, 'classname': 'TransfoXLPreTrainedModel', 'name': 'from_pretrained', 'lineno': 885, 'closures': [{'type': 'function', 'rank': 'A', 'col_offset': 8, 'endline': 961, 'complexity': 4, 'name': 'load', 'lineno': 955, 'closures': []}]}, {'type': 'method', 'rank': 'C', 'col_offset': 4, 'endline': 1336, 'complexity': 12, 'classname': 'TransfoXLLMHeadModel', 'name': 'tie_weights', 'lineno': 1320, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 695, 'complexity': 10, 'classname': 'RelLearnableMultiHeadAttn', 'name': 'forward', 'lineno': 616, 'closures': []}, {'type': 'function', 'rank': 'B', 'col_offset': 0, 'endline': 125, 'complexity': 9, 'name': 'build_tf_to_pytorch_map', 'lineno': 55, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 610, 'complexity': 9, 'classname': 'RelPartialLearnableMultiHeadAttn', 'name': 'forward', 'lineno': 537, 'closures': []}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'endline': 975, 'complexity': 9, 'name': 'TransfoXLPreTrainedModel', 'lineno': 816, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 829, 'complexity': 2, 'classname': 'TransfoXLPreTrainedModel', 'name': '__init__', 'lineno': 820, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 835, 'complexity': 3, 'classname': 'TransfoXLPreTrainedModel', 'name': 'init_weight', 'lineno': 831, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 838, 'complexity': 1, 'classname': 'TransfoXLPreTrainedModel', 'name': 'init_bias', 'lineno': 837, 'closures': []}, {'type': 'method', 'rank': 'D', 'col_offset': 4, 'endline': 879, 'complexity': 29, 'classname': 'TransfoXLPreTrainedModel', 'name': 'init_weights', 'lineno': 840, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 882, 'complexity': 1, 'classname': 'TransfoXLPreTrainedModel', 'name': 'set_num_special_tokens', 'lineno': 881, 'closures': []}, {'type': 'method', 'rank': 'C', 'col_offset': 4, 'endline': 975, 'complexity': 14, 'classname': 'TransfoXLPreTrainedModel', 'name': 'from_pretrained', 'lineno': 885, 'closures': [{'type': 'function', 'rank': 'A', 'col_offset': 8, 'endline': 961, 'complexity': 4, 'name': 'load', 'lineno': 955, 'closures': []}]}]}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 451, 'complexity': 8, 'classname': 'MultiHeadAttn', 'name': 'forward', 'lineno': 402, 'closures': []}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'endline': 1252, 'complexity': 8, 'name': 'TransfoXLModel', 'lineno': 978, 'methods': [{'type': 'method', 'rank': 'C', 'col_offset': 4, 'endline': 1091, 'complexity': 18, 'classname': 'TransfoXLModel', 'name': '__init__', 'lineno': 1018, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1094, 'complexity': 1, 'classname': 'TransfoXLModel', 'name': 'backward_compatible', 'lineno': 1093, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1100, 'complexity': 1, 'classname': 'TransfoXLModel', 'name': 'reset_length', 'lineno': 1097, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1113, 'complexity': 3, 'classname': 'TransfoXLModel', 'name': 'init_mems', 'lineno': 1102, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1136, 'complexity': 4, 'classname': 'TransfoXLModel', 'name': '_update_mems', 'lineno': 1115, 'closures': []}, {'type': 'method', 'rank': 'D', 'col_offset': 4, 'endline': 1226, 'complexity': 24, 'classname': 'TransfoXLModel', 'name': '_forward', 'lineno': 1138, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1252, 'complexity': 2, 'classname': 'TransfoXLModel', 'name': 'forward', 'lineno': 1228, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 287, 'complexity': 7, 'classname': 'TransfoXLConfig', 'name': '__init__', 'lineno': 186, 'closures': []}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'endline': 451, 'complexity': 7, 'name': 'MultiHeadAttn', 'lineno': 372, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 400, 'complexity': 3, 'classname': 'MultiHeadAttn', 'name': '__init__', 'lineno': 373, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 451, 'complexity': 8, 'classname': 'MultiHeadAttn', 'name': 'forward', 'lineno': 402, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'endline': 695, 'complexity': 7, 'name': 'RelLearnableMultiHeadAttn', 'lineno': 612, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 614, 'complexity': 1, 'classname': 'RelLearnableMultiHeadAttn', 'name': '__init__', 'lineno': 613, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 695, 'complexity': 10, 'classname': 'RelLearnableMultiHeadAttn', 'name': 'forward', 'lineno': 616, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'endline': 610, 'complexity': 6, 'name': 'RelPartialLearnableMultiHeadAttn', 'lineno': 531, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 535, 'complexity': 1, 'classname': 'RelPartialLearnableMultiHeadAttn', 'name': '__init__', 'lineno': 532, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 610, 'complexity': 9, 'classname': 'RelPartialLearnableMultiHeadAttn', 'name': 'forward', 'lineno': 537, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'endline': 813, 'complexity': 6, 'name': 'AdaptiveEmbedding', 'lineno': 752, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 781, 'complexity': 4, 'classname': 'AdaptiveEmbedding', 'name': '__init__', 'lineno': 753, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 813, 'complexity': 5, 'classname': 'AdaptiveEmbedding', 'name': 'forward', 'lineno': 783, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 813, 'complexity': 5, 'classname': 'AdaptiveEmbedding', 'name': 'forward', 'lineno': 783, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 1376, 'complexity': 5, 'name': 'TransfoXLLMHeadModel', 'lineno': 1255, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1318, 'complexity': 2, 'classname': 'TransfoXLLMHeadModel', 'name': '__init__', 'lineno': 1305, 'closures': []}, {'type': 'method', 'rank': 'C', 'col_offset': 4, 'endline': 1336, 'complexity': 12, 'classname': 'TransfoXLLMHeadModel', 'name': 'tie_weights', 'lineno': 1320, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1339, 'complexity': 1, 'classname': 'TransfoXLLMHeadModel', 'name': 'reset_length', 'lineno': 1338, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1342, 'complexity': 1, 'classname': 'TransfoXLLMHeadModel', 'name': 'init_mems', 'lineno': 1341, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1376, 'complexity': 5, 'classname': 'TransfoXLLMHeadModel', 'name': 'forward', 'lineno': 1344, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1376, 'complexity': 5, 'classname': 'TransfoXLLMHeadModel', 'name': 'forward', 'lineno': 1344, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 781, 'complexity': 4, 'classname': 'AdaptiveEmbedding', 'name': '__init__', 'lineno': 753, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1136, 'complexity': 4, 'classname': 'TransfoXLModel', 'name': '_update_mems', 'lineno': 1115, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 315, 'complexity': 3, 'name': 'TransfoXLConfig', 'lineno': 183, 'methods': [{'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 287, 'complexity': 7, 'classname': 'TransfoXLConfig', 'name': '__init__', 'lineno': 186, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 296, 'complexity': 2, 'classname': 'TransfoXLConfig', 'name': 'from_dict', 'lineno': 291, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 303, 'complexity': 1, 'classname': 'TransfoXLConfig', 'name': 'from_json_file', 'lineno': 299, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 306, 'complexity': 1, 'classname': 'TransfoXLConfig', 'name': '__repr__', 'lineno': 305, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 311, 'complexity': 1, 'classname': 'TransfoXLConfig', 'name': 'to_dict', 'lineno': 308, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 315, 'complexity': 1, 'classname': 'TransfoXLConfig', 'name': 'to_json_string', 'lineno': 313, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 334, 'complexity': 3, 'name': 'PositionalEmbedding', 'lineno': 318, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 325, 'complexity': 1, 'classname': 'PositionalEmbedding', 'name': '__init__', 'lineno': 319, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 334, 'complexity': 2, 'classname': 'PositionalEmbedding', 'name': 'forward', 'lineno': 327, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 370, 'complexity': 3, 'name': 'PositionwiseFF', 'lineno': 337, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 354, 'complexity': 1, 'classname': 'PositionwiseFF', 'name': '__init__', 'lineno': 338, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 370, 'complexity': 2, 'classname': 'PositionwiseFF', 'name': 'forward', 'lineno': 356, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 400, 'complexity': 3, 'classname': 'MultiHeadAttn', 'name': '__init__', 'lineno': 373, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 529, 'complexity': 3, 'name': 'RelMultiHeadAttn', 'lineno': 453, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 481, 'complexity': 3, 'classname': 'RelMultiHeadAttn', 'name': '__init__', 'lineno': 454, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 492, 'complexity': 2, 'classname': 'RelMultiHeadAttn', 'name': '_parallelogram_mask', 'lineno': 483, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 510, 'complexity': 3, 'classname': 'RelMultiHeadAttn', 'name': '_shift', 'lineno': 494, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 526, 'complexity': 2, 'classname': 'RelMultiHeadAttn', 'name': '_rel_shift', 'lineno': 512, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 529, 'complexity': 1, 'classname': 'RelMultiHeadAttn', 'name': 'forward', 'lineno': 528, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 481, 'complexity': 3, 'classname': 'RelMultiHeadAttn', 'name': '__init__', 'lineno': 454, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 510, 'complexity': 3, 'classname': 'RelMultiHeadAttn', 'name': '_shift', 'lineno': 494, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 835, 'complexity': 3, 'classname': 'TransfoXLPreTrainedModel', 'name': 'init_weight', 'lineno': 831, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1113, 'complexity': 3, 'classname': 'TransfoXLModel', 'name': 'init_mems', 'lineno': 1102, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 296, 'complexity': 2, 'classname': 'TransfoXLConfig', 'name': 'from_dict', 'lineno': 291, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 334, 'complexity': 2, 'classname': 'PositionalEmbedding', 'name': 'forward', 'lineno': 327, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 370, 'complexity': 2, 'classname': 'PositionwiseFF', 'name': 'forward', 'lineno': 356, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 492, 'complexity': 2, 'classname': 'RelMultiHeadAttn', 'name': '_parallelogram_mask', 'lineno': 483, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 526, 'complexity': 2, 'classname': 'RelMultiHeadAttn', 'name': '_rel_shift', 'lineno': 512, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 711, 'complexity': 2, 'name': 'DecoderLayer', 'lineno': 697, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 703, 'complexity': 1, 'classname': 'DecoderLayer', 'name': '__init__', 'lineno': 698, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 711, 'complexity': 1, 'classname': 'DecoderLayer', 'name': 'forward', 'lineno': 705, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 730, 'complexity': 2, 'name': 'RelLearnableDecoderLayer', 'lineno': 713, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 721, 'complexity': 1, 'classname': 'RelLearnableDecoderLayer', 'name': '__init__', 'lineno': 714, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 730, 'complexity': 1, 'classname': 'RelLearnableDecoderLayer', 'name': 'forward', 'lineno': 723, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 749, 'complexity': 2, 'name': 'RelPartialLearnableDecoderLayer', 'lineno': 732, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 740, 'complexity': 1, 'classname': 'RelPartialLearnableDecoderLayer', 'name': '__init__', 'lineno': 733, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 749, 'complexity': 1, 'classname': 'RelPartialLearnableDecoderLayer', 'name': 'forward', 'lineno': 742, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 829, 'complexity': 2, 'classname': 'TransfoXLPreTrainedModel', 'name': '__init__', 'lineno': 820, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1252, 'complexity': 2, 'classname': 'TransfoXLModel', 'name': 'forward', 'lineno': 1228, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1318, 'complexity': 2, 'classname': 'TransfoXLLMHeadModel', 'name': '__init__', 'lineno': 1305, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 303, 'complexity': 1, 'classname': 'TransfoXLConfig', 'name': 'from_json_file', 'lineno': 299, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 306, 'complexity': 1, 'classname': 'TransfoXLConfig', 'name': '__repr__', 'lineno': 305, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 311, 'complexity': 1, 'classname': 'TransfoXLConfig', 'name': 'to_dict', 'lineno': 308, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 315, 'complexity': 1, 'classname': 'TransfoXLConfig', 'name': 'to_json_string', 'lineno': 313, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 325, 'complexity': 1, 'classname': 'PositionalEmbedding', 'name': '__init__', 'lineno': 319, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 354, 'complexity': 1, 'classname': 'PositionwiseFF', 'name': '__init__', 'lineno': 338, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 529, 'complexity': 1, 'classname': 'RelMultiHeadAttn', 'name': 'forward', 'lineno': 528, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 535, 'complexity': 1, 'classname': 'RelPartialLearnableMultiHeadAttn', 'name': '__init__', 'lineno': 532, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 614, 'complexity': 1, 'classname': 'RelLearnableMultiHeadAttn', 'name': '__init__', 'lineno': 613, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 703, 'complexity': 1, 'classname': 'DecoderLayer', 'name': '__init__', 'lineno': 698, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 711, 'complexity': 1, 'classname': 'DecoderLayer', 'name': 'forward', 'lineno': 705, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 721, 'complexity': 1, 'classname': 'RelLearnableDecoderLayer', 'name': '__init__', 'lineno': 714, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 730, 'complexity': 1, 'classname': 'RelLearnableDecoderLayer', 'name': 'forward', 'lineno': 723, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 740, 'complexity': 1, 'classname': 'RelPartialLearnableDecoderLayer', 'name': '__init__', 'lineno': 733, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 749, 'complexity': 1, 'classname': 'RelPartialLearnableDecoderLayer', 'name': 'forward', 'lineno': 742, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 838, 'complexity': 1, 'classname': 'TransfoXLPreTrainedModel', 'name': 'init_bias', 'lineno': 837, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 882, 'complexity': 1, 'classname': 'TransfoXLPreTrainedModel', 'name': 'set_num_special_tokens', 'lineno': 881, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1094, 'complexity': 1, 'classname': 'TransfoXLModel', 'name': 'backward_compatible', 'lineno': 1093, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1100, 'complexity': 1, 'classname': 'TransfoXLModel', 'name': 'reset_length', 'lineno': 1097, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1339, 'complexity': 1, 'classname': 'TransfoXLLMHeadModel', 'name': 'reset_length', 'lineno': 1338, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 1342, 'complexity': 1, 'classname': 'TransfoXLLMHeadModel', 'name': 'init_mems', 'lineno': 1341, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\modeling_transfo_xl_utilities.py': [{'type': 'method', 'rank': 'C', 'col_offset': 4, 'endline': 195, 'complexity': 19, 'classname': 'ProjectedAdaptiveLogSoftmax', 'name': 'forward', 'lineno': 92, 'closures': []}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'endline': 257, 'complexity': 9, 'name': 'ProjectedAdaptiveLogSoftmax', 'lineno': 31, 'methods': [{'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 76, 'complexity': 6, 'classname': 'ProjectedAdaptiveLogSoftmax', 'name': '__init__', 'lineno': 32, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 90, 'complexity': 2, 'classname': 'ProjectedAdaptiveLogSoftmax', 'name': '_compute_logit', 'lineno': 78, 'closures': []}, {'type': 'method', 'rank': 'C', 'col_offset': 4, 'endline': 195, 'complexity': 19, 'classname': 'ProjectedAdaptiveLogSoftmax', 'name': 'forward', 'lineno': 92, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 257, 'complexity': 7, 'classname': 'ProjectedAdaptiveLogSoftmax', 'name': 'log_prob', 'lineno': 198, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 257, 'complexity': 7, 'classname': 'ProjectedAdaptiveLogSoftmax', 'name': 'log_prob', 'lineno': 198, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 76, 'complexity': 6, 'classname': 'ProjectedAdaptiveLogSoftmax', 'name': '__init__', 'lineno': 32, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 90, 'complexity': 2, 'classname': 'ProjectedAdaptiveLogSoftmax', 'name': '_compute_logit', 'lineno': 78, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 300, 'complexity': 2, 'name': 'LogUniformSampler', 'lineno': 260, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 279, 'complexity': 1, 'classname': 'LogUniformSampler', 'name': '__init__', 'lineno': 261, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 300, 'complexity': 1, 'classname': 'LogUniformSampler', 'name': 'sample', 'lineno': 281, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 333, 'complexity': 1, 'name': 'sample_logits', 'lineno': 302, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 279, 'complexity': 1, 'classname': 'LogUniformSampler', 'name': '__init__', 'lineno': 261, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 300, 'complexity': 1, 'classname': 'LogUniformSampler', 'name': 'sample', 'lineno': 281, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\optimization.py': [{'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 162, 'complexity': 10, 'classname': 'BertAdam', 'name': 'step', 'lineno': 94, 'closures': []}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'endline': 162, 'complexity': 9, 'name': 'BertAdam', 'lineno': 45, 'methods': [{'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 77, 'complexity': 9, 'classname': 'BertAdam', 'name': '__init__', 'lineno': 59, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 92, 'complexity': 5, 'classname': 'BertAdam', 'name': 'get_lr', 'lineno': 79, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 162, 'complexity': 10, 'classname': 'BertAdam', 'name': 'step', 'lineno': 94, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 77, 'complexity': 9, 'classname': 'BertAdam', 'name': '__init__', 'lineno': 59, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 92, 'complexity': 5, 'classname': 'BertAdam', 'name': 'get_lr', 'lineno': 79, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 26, 'complexity': 2, 'name': 'warmup_cosine', 'lineno': 23, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 31, 'complexity': 2, 'name': 'warmup_constant', 'lineno': 28, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 36, 'complexity': 2, 'name': 'warmup_linear', 'lineno': 33, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\optimization_openai.py': [{'type': 'method', 'rank': 'C', 'col_offset': 4, 'endline': 140, 'complexity': 12, 'classname': 'OpenAIAdam', 'name': 'step', 'lineno': 80, 'closures': []}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'endline': 140, 'complexity': 10, 'name': 'OpenAIAdam', 'lineno': 42, 'methods': [{'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 63, 'complexity': 9, 'classname': 'OpenAIAdam', 'name': '__init__', 'lineno': 45, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 78, 'complexity': 5, 'classname': 'OpenAIAdam', 'name': 'get_lr', 'lineno': 65, 'closures': []}, {'type': 'method', 'rank': 'C', 'col_offset': 4, 'endline': 140, 'complexity': 12, 'classname': 'OpenAIAdam', 'name': 'step', 'lineno': 80, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 63, 'complexity': 9, 'classname': 'OpenAIAdam', 'name': '__init__', 'lineno': 45, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 78, 'complexity': 5, 'classname': 'OpenAIAdam', 'name': 'get_lr', 'lineno': 65, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 25, 'complexity': 2, 'name': 'warmup_cosine', 'lineno': 23, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 29, 'complexity': 2, 'name': 'warmup_constant', 'lineno': 27, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 33, 'complexity': 2, 'name': 'warmup_linear', 'lineno': 31, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\tokenization.py': [{'type': 'method', 'rank': 'C', 'col_offset': 4, 'endline': 258, 'complexity': 17, 'classname': 'BasicTokenizer', 'name': '_is_chinese_char', 'lineno': 238, 'closures': []}, {'type': 'function', 'rank': 'B', 'col_offset': 0, 'endline': 371, 'complexity': 10, 'name': '_is_punctuation', 'lineno': 358, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 331, 'complexity': 9, 'classname': 'WordpieceTokenizer', 'name': 'tokenize', 'lineno': 282, 'closures': []}, {'type': 'function', 'rank': 'B', 'col_offset': 0, 'endline': 343, 'complexity': 6, 'name': '_is_whitespace', 'lineno': 334, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 154, 'complexity': 6, 'classname': 'BertTokenizer', 'name': 'from_pretrained', 'lineno': 119, 'closures': []}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'endline': 271, 'complexity': 6, 'name': 'BasicTokenizer', 'lineno': 157, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 169, 'complexity': 1, 'classname': 'BasicTokenizer', 'name': '__init__', 'lineno': 160, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 190, 'complexity': 4, 'classname': 'BasicTokenizer', 'name': 'tokenize', 'lineno': 171, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 201, 'complexity': 3, 'classname': 'BasicTokenizer', 'name': '_run_strip_accents', 'lineno': 192, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 223, 'complexity': 6, 'classname': 'BasicTokenizer', 'name': '_run_split_on_punc', 'lineno': 203, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 236, 'complexity': 3, 'classname': 'BasicTokenizer', 'name': '_tokenize_chinese_chars', 'lineno': 225, 'closures': []}, {'type': 'method', 'rank': 'C', 'col_offset': 4, 'endline': 258, 'complexity': 17, 'classname': 'BasicTokenizer', 'name': '_is_chinese_char', 'lineno': 238, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 271, 'complexity': 6, 'classname': 'BasicTokenizer', 'name': '_clean_text', 'lineno': 260, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 223, 'complexity': 6, 'classname': 'BasicTokenizer', 'name': '_run_split_on_punc', 'lineno': 203, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 271, 'complexity': 6, 'classname': 'BasicTokenizer', 'name': '_clean_text', 'lineno': 260, 'closures': []}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'endline': 331, 'complexity': 6, 'name': 'WordpieceTokenizer', 'lineno': 274, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 280, 'complexity': 1, 'classname': 'WordpieceTokenizer', 'name': '__init__', 'lineno': 277, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 331, 'complexity': 9, 'classname': 'WordpieceTokenizer', 'name': 'tokenize', 'lineno': 282, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 355, 'complexity': 5, 'name': '_is_control', 'lineno': 346, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 154, 'complexity': 4, 'name': 'BertTokenizer', 'lineno': 74, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 89, 'complexity': 4, 'classname': 'BertTokenizer', 'name': '__init__', 'lineno': 77, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 96, 'complexity': 3, 'classname': 'BertTokenizer', 'name': 'tokenize', 'lineno': 91, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 109, 'complexity': 3, 'classname': 'BertTokenizer', 'name': 'convert_tokens_to_ids', 'lineno': 98, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 116, 'complexity': 2, 'classname': 'BertTokenizer', 'name': 'convert_ids_to_tokens', 'lineno': 111, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 154, 'complexity': 6, 'classname': 'BertTokenizer', 'name': 'from_pretrained', 'lineno': 119, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 89, 'complexity': 4, 'classname': 'BertTokenizer', 'name': '__init__', 'lineno': 77, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 190, 'complexity': 4, 'classname': 'BasicTokenizer', 'name': 'tokenize', 'lineno': 171, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 62, 'complexity': 3, 'name': 'load_vocab', 'lineno': 50, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 96, 'complexity': 3, 'classname': 'BertTokenizer', 'name': 'tokenize', 'lineno': 91, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 109, 'complexity': 3, 'classname': 'BertTokenizer', 'name': 'convert_tokens_to_ids', 'lineno': 98, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 201, 'complexity': 3, 'classname': 'BasicTokenizer', 'name': '_run_strip_accents', 'lineno': 192, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 236, 'complexity': 3, 'classname': 'BasicTokenizer', 'name': '_tokenize_chinese_chars', 'lineno': 225, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 71, 'complexity': 2, 'name': 'whitespace_tokenize', 'lineno': 65, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 116, 'complexity': 2, 'classname': 'BertTokenizer', 'name': 'convert_ids_to_tokens', 'lineno': 111, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 169, 'complexity': 1, 'classname': 'BasicTokenizer', 'name': '__init__', 'lineno': 160, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 280, 'complexity': 1, 'classname': 'WordpieceTokenizer', 'name': '__init__', 'lineno': 277, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\tokenization_openai.py': [{'type': 'method', 'rank': 'C', 'col_offset': 4, 'endline': 196, 'complexity': 12, 'classname': 'OpenAIGPTTokenizer', 'name': 'bpe', 'lineno': 155, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 225, 'complexity': 8, 'classname': 'OpenAIGPTTokenizer', 'name': 'convert_tokens_to_ids', 'lineno': 206, 'closures': []}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'endline': 248, 'complexity': 6, 'name': 'OpenAIGPTTokenizer', 'lineno': 71, 'methods': [{'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 119, 'complexity': 6, 'classname': 'OpenAIGPTTokenizer', 'name': 'from_pretrained', 'lineno': 79, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 137, 'complexity': 5, 'classname': 'OpenAIGPTTokenizer', 'name': '__init__', 'lineno': 121, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 140, 'complexity': 1, 'classname': 'OpenAIGPTTokenizer', 'name': '__len__', 'lineno': 139, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 153, 'complexity': 4, 'classname': 'OpenAIGPTTokenizer', 'name': 'set_special_tokens', 'lineno': 142, 'closures': []}, {'type': 'method', 'rank': 'C', 'col_offset': 4, 'endline': 196, 'complexity': 12, 'classname': 'OpenAIGPTTokenizer', 'name': 'bpe', 'lineno': 155, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 204, 'complexity': 3, 'classname': 'OpenAIGPTTokenizer', 'name': 'tokenize', 'lineno': 198, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 225, 'complexity': 8, 'classname': 'OpenAIGPTTokenizer', 'name': 'convert_tokens_to_ids', 'lineno': 206, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 236, 'complexity': 4, 'classname': 'OpenAIGPTTokenizer', 'name': 'convert_ids_to_tokens', 'lineno': 227, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 248, 'complexity': 2, 'classname': 'OpenAIGPTTokenizer', 'name': 'decode', 'lineno': 238, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 119, 'complexity': 6, 'classname': 'OpenAIGPTTokenizer', 'name': 'from_pretrained', 'lineno': 79, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 137, 'complexity': 5, 'classname': 'OpenAIGPTTokenizer', 'name': '__init__', 'lineno': 121, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 153, 'complexity': 4, 'classname': 'OpenAIGPTTokenizer', 'name': 'set_special_tokens', 'lineno': 142, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 236, 'complexity': 4, 'classname': 'OpenAIGPTTokenizer', 'name': 'convert_ids_to_tokens', 'lineno': 227, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 204, 'complexity': 3, 'classname': 'OpenAIGPTTokenizer', 'name': 'tokenize', 'lineno': 198, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 54, 'complexity': 2, 'name': 'get_pairs', 'lineno': 44, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 248, 'complexity': 2, 'classname': 'OpenAIGPTTokenizer', 'name': 'decode', 'lineno': 238, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 69, 'complexity': 1, 'name': 'text_standardize', 'lineno': 56, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 140, 'complexity': 1, 'classname': 'OpenAIGPTTokenizer', 'name': '__len__', 'lineno': 139, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\tokenization_transfo_xl.py': [{'type': 'function', 'rank': 'B', 'col_offset': 0, 'endline': 672, 'complexity': 10, 'name': '_is_punctuation', 'lineno': 659, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 454, 'complexity': 9, 'classname': 'LMShuffledIterator', 'name': 'stream_iterator', 'lineno': 407, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 181, 'complexity': 8, 'classname': 'TransfoXLTokenizer', 'name': 'encode_file', 'lineno': 165, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 539, 'complexity': 8, 'classname': 'TransfoXLCorpus', 'name': 'from_pretrained', 'lineno': 499, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 601, 'complexity': 8, 'classname': 'TransfoXLCorpus', 'name': 'get_iterator', 'lineno': 587, 'closures': []}, {'type': 'function', 'rank': 'B', 'col_offset': 0, 'endline': 633, 'complexity': 7, 'name': 'get_lm_corpus', 'lineno': 604, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 117, 'complexity': 7, 'classname': 'TransfoXLTokenizer', 'name': 'count_file', 'lineno': 104, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 194, 'complexity': 7, 'classname': 'TransfoXLTokenizer', 'name': 'encode_sents', 'lineno': 183, 'closures': []}, {'type': 'class', 'rank': 'B', 'col_offset': 0, 'endline': 601, 'complexity': 7, 'name': 'TransfoXLCorpus', 'lineno': 497, 'methods': [{'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 539, 'complexity': 8, 'classname': 'TransfoXLCorpus', 'name': 'from_pretrained', 'lineno': 499, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 546, 'complexity': 1, 'classname': 'TransfoXLCorpus', 'name': '__init__', 'lineno': 541, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 585, 'complexity': 7, 'classname': 'TransfoXLCorpus', 'name': 'build_corpus', 'lineno': 548, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 601, 'complexity': 8, 'classname': 'TransfoXLCorpus', 'name': 'get_iterator', 'lineno': 587, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 585, 'complexity': 7, 'classname': 'TransfoXLCorpus', 'name': 'build_corpus', 'lineno': 548, 'closures': []}, {'type': 'function', 'rank': 'B', 'col_offset': 0, 'endline': 644, 'complexity': 6, 'name': '_is_whitespace', 'lineno': 635, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 127, 'complexity': 6, 'classname': 'TransfoXLTokenizer', 'name': 'count_sents', 'lineno': 119, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 268, 'complexity': 6, 'classname': 'TransfoXLTokenizer', 'name': '_run_split_on_punc', 'lineno': 248, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 292, 'complexity': 6, 'classname': 'TransfoXLTokenizer', 'name': '_clean_text', 'lineno': 281, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 323, 'complexity': 6, 'classname': 'TransfoXLTokenizer', 'name': 'tokenize', 'lineno': 305, 'closures': []}, {'type': 'function', 'rank': 'A', 'col_offset': 0, 'endline': 656, 'complexity': 5, 'name': '_is_control', 'lineno': 647, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 323, 'complexity': 5, 'name': 'TransfoXLTokenizer', 'lineno': 53, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 91, 'complexity': 5, 'classname': 'TransfoXLTokenizer', 'name': 'from_pretrained', 'lineno': 58, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 102, 'complexity': 1, 'classname': 'TransfoXLTokenizer', 'name': '__init__', 'lineno': 93, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 117, 'complexity': 7, 'classname': 'TransfoXLTokenizer', 'name': 'count_file', 'lineno': 104, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 127, 'complexity': 6, 'classname': 'TransfoXLTokenizer', 'name': 'count_sents', 'lineno': 119, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 142, 'complexity': 4, 'classname': 'TransfoXLTokenizer', 'name': '_build_from_file', 'lineno': 129, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 163, 'complexity': 5, 'classname': 'TransfoXLTokenizer', 'name': 'build_vocab', 'lineno': 144, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 181, 'complexity': 8, 'classname': 'TransfoXLTokenizer', 'name': 'encode_file', 'lineno': 165, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 194, 'complexity': 7, 'classname': 'TransfoXLTokenizer', 'name': 'encode_sents', 'lineno': 183, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 200, 'complexity': 2, 'classname': 'TransfoXLTokenizer', 'name': 'add_special', 'lineno': 196, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 205, 'complexity': 2, 'classname': 'TransfoXLTokenizer', 'name': 'add_symbol', 'lineno': 202, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 209, 'complexity': 2, 'classname': 'TransfoXLTokenizer', 'name': 'get_sym', 'lineno': 207, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 225, 'complexity': 5, 'classname': 'TransfoXLTokenizer', 'name': 'get_idx', 'lineno': 211, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 229, 'complexity': 2, 'classname': 'TransfoXLTokenizer', 'name': 'convert_ids_to_tokens', 'lineno': 227, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 233, 'complexity': 2, 'classname': 'TransfoXLTokenizer', 'name': 'convert_tokens_to_ids', 'lineno': 231, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 236, 'complexity': 1, 'classname': 'TransfoXLTokenizer', 'name': 'convert_to_tensor', 'lineno': 235, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 243, 'complexity': 5, 'classname': 'TransfoXLTokenizer', 'name': 'decode', 'lineno': 238, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 246, 'complexity': 1, 'classname': 'TransfoXLTokenizer', 'name': '__len__', 'lineno': 245, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 268, 'complexity': 6, 'classname': 'TransfoXLTokenizer', 'name': '_run_split_on_punc', 'lineno': 248, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 279, 'complexity': 3, 'classname': 'TransfoXLTokenizer', 'name': '_run_strip_accents', 'lineno': 270, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 292, 'complexity': 6, 'classname': 'TransfoXLTokenizer', 'name': '_clean_text', 'lineno': 281, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 303, 'complexity': 3, 'classname': 'TransfoXLTokenizer', 'name': 'whitespace_tokenize', 'lineno': 294, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 323, 'complexity': 6, 'classname': 'TransfoXLTokenizer', 'name': 'tokenize', 'lineno': 305, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 91, 'complexity': 5, 'classname': 'TransfoXLTokenizer', 'name': 'from_pretrained', 'lineno': 58, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 163, 'complexity': 5, 'classname': 'TransfoXLTokenizer', 'name': 'build_vocab', 'lineno': 144, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 225, 'complexity': 5, 'classname': 'TransfoXLTokenizer', 'name': 'get_idx', 'lineno': 211, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 243, 'complexity': 5, 'classname': 'TransfoXLTokenizer', 'name': 'decode', 'lineno': 238, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 461, 'complexity': 5, 'name': 'LMShuffledIterator', 'lineno': 384, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 396, 'complexity': 2, 'classname': 'LMShuffledIterator', 'name': '__init__', 'lineno': 385, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 405, 'complexity': 3, 'classname': 'LMShuffledIterator', 'name': 'get_sent_stream', 'lineno': 398, 'closures': []}, {'type': 'method', 'rank': 'B', 'col_offset': 4, 'endline': 454, 'complexity': 9, 'classname': 'LMShuffledIterator', 'name': 'stream_iterator', 'lineno': 407, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 461, 'complexity': 2, 'classname': 'LMShuffledIterator', 'name': '__iter__', 'lineno': 456, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 142, 'complexity': 4, 'classname': 'TransfoXLTokenizer', 'name': '_build_from_file', 'lineno': 129, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 378, 'complexity': 4, 'classname': 'LMOrderedIterator', 'name': 'get_varlen_iter', 'lineno': 368, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 494, 'complexity': 4, 'name': 'LMMultiFileIterator', 'lineno': 464, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 476, 'complexity': 2, 'classname': 'LMMultiFileIterator', 'name': '__init__', 'lineno': 465, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 484, 'complexity': 2, 'classname': 'LMMultiFileIterator', 'name': 'get_sent_stream', 'lineno': 478, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 494, 'complexity': 4, 'classname': 'LMMultiFileIterator', 'name': '__iter__', 'lineno': 486, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 494, 'complexity': 4, 'classname': 'LMMultiFileIterator', 'name': '__iter__', 'lineno': 486, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 279, 'complexity': 3, 'classname': 'TransfoXLTokenizer', 'name': '_run_strip_accents', 'lineno': 270, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 303, 'complexity': 3, 'classname': 'TransfoXLTokenizer', 'name': 'whitespace_tokenize', 'lineno': 294, 'closures': []}, {'type': 'class', 'rank': 'A', 'col_offset': 0, 'endline': 381, 'complexity': 3, 'name': 'LMOrderedIterator', 'lineno': 326, 'methods': [{'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 347, 'complexity': 2, 'classname': 'LMOrderedIterator', 'name': '__init__', 'lineno': 327, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 362, 'complexity': 2, 'classname': 'LMOrderedIterator', 'name': 'get_batch', 'lineno': 349, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 366, 'complexity': 2, 'classname': 'LMOrderedIterator', 'name': 'get_fixlen_iter', 'lineno': 364, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 378, 'complexity': 4, 'classname': 'LMOrderedIterator', 'name': 'get_varlen_iter', 'lineno': 368, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 381, 'complexity': 1, 'classname': 'LMOrderedIterator', 'name': '__iter__', 'lineno': 380, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 405, 'complexity': 3, 'classname': 'LMShuffledIterator', 'name': 'get_sent_stream', 'lineno': 398, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 200, 'complexity': 2, 'classname': 'TransfoXLTokenizer', 'name': 'add_special', 'lineno': 196, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 205, 'complexity': 2, 'classname': 'TransfoXLTokenizer', 'name': 'add_symbol', 'lineno': 202, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 209, 'complexity': 2, 'classname': 'TransfoXLTokenizer', 'name': 'get_sym', 'lineno': 207, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 229, 'complexity': 2, 'classname': 'TransfoXLTokenizer', 'name': 'convert_ids_to_tokens', 'lineno': 227, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 233, 'complexity': 2, 'classname': 'TransfoXLTokenizer', 'name': 'convert_tokens_to_ids', 'lineno': 231, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 347, 'complexity': 2, 'classname': 'LMOrderedIterator', 'name': '__init__', 'lineno': 327, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 362, 'complexity': 2, 'classname': 'LMOrderedIterator', 'name': 'get_batch', 'lineno': 349, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 366, 'complexity': 2, 'classname': 'LMOrderedIterator', 'name': 'get_fixlen_iter', 'lineno': 364, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 396, 'complexity': 2, 'classname': 'LMShuffledIterator', 'name': '__init__', 'lineno': 385, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 461, 'complexity': 2, 'classname': 'LMShuffledIterator', 'name': '__iter__', 'lineno': 456, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 476, 'complexity': 2, 'classname': 'LMMultiFileIterator', 'name': '__init__', 'lineno': 465, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 484, 'complexity': 2, 'classname': 'LMMultiFileIterator', 'name': 'get_sent_stream', 'lineno': 478, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 102, 'complexity': 1, 'classname': 'TransfoXLTokenizer', 'name': '__init__', 'lineno': 93, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 236, 'complexity': 1, 'classname': 'TransfoXLTokenizer', 'name': 'convert_to_tensor', 'lineno': 235, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 246, 'complexity': 1, 'classname': 'TransfoXLTokenizer', 'name': '__len__', 'lineno': 245, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 381, 'complexity': 1, 'classname': 'LMOrderedIterator', 'name': '__iter__', 'lineno': 380, 'closures': []}, {'type': 'method', 'rank': 'A', 'col_offset': 4, 'endline': 546, 'complexity': 1, 'classname': 'TransfoXLCorpus', 'name': '__init__', 'lineno': 541, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\__main__.py': [{'type': 'function', 'rank': 'C', 'col_offset': 0, 'endline': 63, 'complexity': 12, 'name': 'main', 'lineno': 2, 'closures': []}]}","{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\setup.py': {'loc': 70, 'lloc': 5, 'sloc': 34, 'comments': 1, 'multi': 22, 'blank': 14, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\convert_openai_checkpoint_to_pytorch.py': {'loc': 72, 'lloc': 27, 'sloc': 43, 'comments': 18, 'multi': 0, 'blank': 10, 'single_comments': 19}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': {'loc': 66, 'lloc': 25, 'sloc': 39, 'comments': 18, 'multi': 0, 'blank': 8, 'single_comments': 19}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\convert_transfo_xl_checkpoint_to_pytorch.py': {'loc': 116, 'lloc': 57, 'sloc': 81, 'comments': 21, 'multi': 0, 'blank': 13, 'single_comments': 22}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\file_utils.py': {'loc': 249, 'lloc': 164, 'sloc': 154, 'comments': 14, 'multi': 32, 'blank': 48, 'single_comments': 15}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\modeling.py': {'loc': 1202, 'lloc': 586, 'sloc': 607, 'comments': 55, 'multi': 367, 'blank': 169, 'single_comments': 59}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\modeling_openai.py': {'loc': 810, 'lloc': 442, 'sloc': 450, 'comments': 61, 'multi': 190, 'blank': 111, 'single_comments': 59}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\modeling_transfo_xl.py': {'loc': 1376, 'lloc': 825, 'sloc': 906, 'comments': 105, 'multi': 165, 'blank': 219, 'single_comments': 86}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\modeling_transfo_xl_utilities.py': {'loc': 402, 'lloc': 223, 'sloc': 213, 'comments': 62, 'multi': 51, 'blank': 78, 'single_comments': 60}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\optimization.py': {'loc': 162, 'lloc': 86, 'sloc': 90, 'comments': 31, 'multi': 18, 'blank': 22, 'single_comments': 32}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\optimization_openai.py': {'loc': 140, 'lloc': 85, 'sloc': 89, 'comments': 20, 'multi': 7, 'blank': 23, 'single_comments': 21}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\tokenization.py': {'loc': 371, 'lloc': 229, 'sloc': 248, 'comments': 47, 'multi': 20, 'blank': 46, 'single_comments': 57}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\tokenization_openai.py': {'loc': 248, 'lloc': 180, 'sloc': 183, 'comments': 18, 'multi': 22, 'blank': 20, 'single_comments': 23}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\tokenization_transfo_xl.py': {'loc': 672, 'lloc': 481, 'sloc': 490, 'comments': 45, 'multi': 22, 'blank': 106, 'single_comments': 54}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\__init__.py': {'loc': 20, 'lloc': 10, 'sloc': 17, 'comments': 0, 'multi': 0, 'blank': 3, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\__main__.py': {'loc': 65, 'lloc': 47, 'sloc': 61, 'comments': 2, 'multi': 0, 'blank': 2, 'single_comments': 2}}","{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\setup.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\convert_openai_checkpoint_to_pytorch.py': {'total': [2, 10, 6, 12, 12, 18, 35.219280948873624, 64.52932501298082, 1.2, 77.43519001557698, 4.301955000865387, 0.021509775004326003], 'functions': [['convert_openai_checkpoint_to_pytorch', [2, 8, 5, 10, 10, 15, 26.0, 49.82892142331044, 1.25, 62.28615177913805, 3.460341765507669, 0.016609640474436003]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': {'total': [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001], 'functions': [['convert_tf_checkpoint_to_pytorch', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\convert_transfo_xl_checkpoint_to_pytorch.py': {'total': [2, 12, 7, 14, 14, 21, 45.01955000865388, 79.95445336320968, 1.166666666666666, 93.2801955904113, 5.182233088356183, 0.026651484454403], 'functions': [['convert_transfo_xl_checkpoint_to_pytorch', [2, 8, 5, 10, 10, 15, 26.0, 49.82892142331044, 1.25, 62.28615177913805, 3.460341765507669, 0.016609640474436003]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\file_utils.py': {'total': [10, 48, 28, 50, 58, 78, 301.29748098348915, 456.9225176199506, 5.208333333333333, 2379.804779270576, 132.2113766261431, 0.152307505873316], 'functions': [['url_to_filename', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['filename_to_url', [5, 10, 6, 10, 15, 16, 44.82892142331043, 62.5102495297363, 2.5, 156.27562382434076, 8.681979101352264, 0.020836749843245003]], ['cached_path', [4, 12, 7, 14, 16, 21, 51.01955000865388, 84.0, 2.333333333333333, 196.0, 10.88888888888889, 0.028]], ['split_s3_path', [2, 4, 3, 4, 6, 7, 10.0, 18.094737505048094, 1.0, 18.094737505048094, 1.005263194724894, 0.006031579168349]], ['s3_request', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['s3_etag', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['s3_get', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['http_get', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_from_cache', [6, 12, 7, 12, 18, 19, 58.52932501298082, 79.22857502740393, 3.0, 237.6857250822118, 13.204762504567322, 0.026409525009134002]], ['read_set_from_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_file_extension', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\modeling.py': {'total': [16, 145, 138, 227, 161, 365, 1105.0868180521654, 2675.784660511835, 12.524137931034483, 33511.896161996505, 1861.7720089998058, 0.891928220170611], 'functions': [['load_tf_weights_in_bert', [6, 25, 14, 27, 31, 41, 131.60617974869504, 203.1220487258619, 3.24, 658.1154378717926, 36.56196877065514, 0.067707349575287]], ['gelu', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['swish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['from_dict', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['from_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__repr__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_json_string', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 10, 8, 14, 15, 22, 44.82892142331043, 85.95159310338741, 3.5, 300.83057586185595, 16.712809770103107, 0.028650531034462003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 6, 3, 6, 8, 9, 17.509775004326936, 27.0, 1.0, 27.0, 1.5, 0.009000000000000001]], ['__init__', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['transpose_for_scores', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['forward', [3, 7, 7, 10, 10, 17, 24.406371956566698, 56.472777613085164, 2.1428571428571432, 121.0130948851825, 6.722949715843472, 0.018824259204361]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['init_bert_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['from_pretrained', [10, 30, 20, 36, 40, 56, 180.4259988171292, 298.0279733136923, 6.0, 1788.1678398821539, 99.34265777123078, 0.09934265777123001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 9, 8, 12, 14, 20, 40.13896548741762, 76.14709844115208, 3.333333333333333, 253.82366147050695, 14.101314526139275, 0.02538236614705]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 9, 13, 12, 22, 32.0, 78.86917501586544, 3.25, 256.3248188015627, 14.240267711197927, 0.026289725005288003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 3, 4, 5, 7, 6.754887502163469, 16.253496664211536, 1.333333333333333, 21.67132888561538, 1.203962715867521, 0.005417832221403]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 8, 9, 5, 17, 6.754887502163469, 39.47277761308516, 3.0, 118.41833283925547, 6.578796268847526, 0.013157592537695]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 5, 8, 11, 8, 19, 16.36452797660028, 57.0, 3.3, 188.1, 10.45, 0.019]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 12, 12, 19, 18, 31, 58.52932501298082, 129.26767504471167, 4.75, 614.0214564623805, 34.112303136798914, 0.043089225014903004]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\modeling_openai.py': {'total': [16, 143, 131, 209, 159, 340, 1087.8616011593097, 2486.380204796681, 11.692307692307692, 29071.522394545806, 1615.084577474767, 0.828793401598893], 'functions': [['load_tf_weights_in_openai_gpt', [4, 21, 19, 35, 25, 54, 100.23866587835397, 250.76823424783512, 3.333333333333333, 835.8941141594504, 46.43856189774724, 0.083589411415945]], ['gelu', [3, 13, 7, 14, 16, 21, 52.860603837997665, 84.0, 1.615384615384615, 135.6923076923077, 7.538461538461539, 0.028]], ['swish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['total_tokens_embeddings', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['from_dict', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['from_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__repr__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_json_string', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [3, 4, 5, 7, 7, 12, 12.75488750216347, 33.68825906469125, 2.625, 88.43168004481454, 4.912871113600808, 0.011229419688230002]], ['__init__', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['_attn', [5, 10, 10, 15, 15, 25, 44.82892142331043, 97.67226489021297, 3.75, 366.27099333829864, 20.34838851879437, 0.03255742163007]], ['merge_heads', [3, 6, 5, 7, 9, 12, 20.264662506490406, 38.03910001730775, 1.75, 66.56842503028857, 3.698245835016031, 0.012679700005769]], ['split_heads', [3, 5, 4, 6, 8, 10, 16.36452797660028, 30.0, 1.8, 54.0, 3.0, 0.01]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_embeddings_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 1, 7, 7, 2, 14, 0.0, 14.0, 3.5, 49.0, 2.7222222222222223, 0.004666666666666]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['set_num_special_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [9, 37, 26, 45, 46, 71, 221.27909954125198, 392.1728988800479, 5.472972972972973, 2146.3516763029647, 119.24175979460915, 0.130724299626682]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['set_num_special_tokens', [2, 3, 3, 4, 5, 7, 6.754887502163469, 16.253496664211536, 1.333333333333333, 21.67132888561538, 1.203962715867521, 0.005417832221403]], ['forward', [4, 10, 13, 18, 14, 31, 41.219280948873624, 118.02800258378572, 3.6, 424.9008093016286, 23.605600516757146, 0.039342667527928005]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_num_special_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 5, 6, 5, 11, 6.754887502163469, 25.541209043760983, 2.0, 51.082418087521965, 2.837912115973442, 0.008513736347920001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_num_special_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 4, 9, 11, 6, 20, 10.0, 51.69925001442312, 2.75, 142.1729375396636, 7.898496529981311, 0.017233083338141]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\modeling_transfo_xl.py': {'total': [20, 293, 289, 511, 313, 800, 2487.502320243466, 6632.015077546094, 17.440273037542664, 115664.15374150357, 6425.78631897242, 2.210671692515364], 'functions': [['build_tf_to_pytorch_map', [3, 21, 21, 41, 24, 62, 96.99355338051744, 284.2676750447117, 2.928571428571428, 832.49819120237, 46.24989951124277, 0.09475589168157]], ['load_tf_weights_in_transfo_xl', [6, 22, 16, 32, 28, 48, 113.61727061434748, 230.75303625876498, 4.363636363636363, 1006.9223400382471, 55.94013000212484, 0.076917678752921]], ['__init__', [5, 14, 7, 14, 19, 21, 64.91260938324326, 89.20647778231529, 2.5, 223.01619445578822, 12.389788580877124, 0.029735492594105004]], ['from_dict', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['from_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__repr__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_json_string', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [2, 6, 3, 6, 8, 9, 17.509775004326936, 27.0, 1.0, 27.0, 1.5, 0.009000000000000001]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 2, 4, 3, 6, 2.0, 9.509775004326938, 1.0, 9.509775004326938, 0.5283208335737181, 0.0031699250014420003]], ['__init__', [5, 12, 9, 18, 17, 27, 54.62919048309069, 110.36149671375918, 3.75, 413.85561267659693, 22.99197848203316, 0.036787165571253]], ['forward', [6, 16, 11, 19, 22, 30, 79.50977500432694, 133.78294855911892, 3.5625, 476.60175424186116, 26.477875235658953, 0.044594316186372]], ['__init__', [5, 12, 8, 16, 17, 24, 54.62919048309069, 98.09910819000817, 3.333333333333333, 326.99702730002724, 18.16650151666818, 0.032699702730002]], ['_parallelogram_mask', [1, 1, 4, 4, 2, 8, 0.0, 8.0, 2.0, 16.0, 0.8888888888888881, 0.002666666666666]], ['_shift', [3, 2, 8, 10, 5, 18, 6.754887502163469, 41.79470570797252, 7.5, 313.4602928097939, 17.414460711655217, 0.013931568569324001]], ['_rel_shift', [3, 10, 5, 10, 13, 15, 37.974168451037094, 55.506595772116384, 1.5, 83.25989365817458, 4.625549647676365, 0.018502198590705]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [6, 21, 16, 27, 27, 43, 107.74844088268091, 204.46016259302917, 3.857142857142857, 788.6320557159696, 43.812891984220535, 0.06815338753100901]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [8, 27, 24, 38, 35, 62, 152.38196255841368, 318.01554705058794, 5.62962962962963, 1790.3097463588656, 99.46165257549254, 0.106005182350195]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [7, 14, 10, 20, 21, 30, 72.95445336320968, 131.76952268336282, 5.0, 658.847613416814, 36.602645189823, 0.04392317422778701]], ['forward', [8, 15, 10, 19, 23, 29, 82.60335893412778, 131.18329672565338, 5.066666666666666, 664.6620367433104, 36.92566870796169, 0.043727765575217]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['init_weight', [2, 4, 3, 5, 6, 8, 10.0, 20.67970000576925, 1.25, 25.84962500721156, 1.43609027817842, 0.006893233335256]], ['init_bias', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['init_weights', [4, 30, 24, 42, 34, 66, 155.20671786825557, 335.7725475225224, 2.8, 940.1631330630627, 52.231285170170146, 0.111924182507507]], ['set_num_special_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [9, 27, 17, 31, 36, 48, 156.9112875713945, 248.15640006923098, 5.166666666666667, 1282.1414003576936, 71.23007779764964, 0.08271880002307701]], ['__init__', [4, 11, 10, 19, 15, 29, 46.053747805010275, 113.29982727264704, 3.454545454545454, 391.399403305508, 21.744411294750442, 0.037766609090882]], ['backward_compatible', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['reset_length', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['init_mems', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_update_mems', [4, 12, 6, 12, 16, 18, 51.01955000865388, 72.0, 2.0, 144.0, 8.0, 0.024]], ['_forward', [9, 29, 48, 81, 38, 129, 169.41077387168042, 676.9826492342224, 12.568965517241379, 8508.971573995657, 472.72064299975875, 0.22566088307807403]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['tie_weights', [4, 10, 6, 13, 14, 19, 41.219280948873624, 72.33974351909447, 2.6, 188.08333314964563, 10.449074063869201, 0.024113247839698003]], ['reset_length', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['init_mems', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 9, 9, 12, 13, 21, 36.52932501298081, 77.70923408096293, 2.666666666666666, 207.22462421590114, 11.512479123105619, 0.025903078026987002]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\modeling_transfo_xl_utilities.py': {'total': [17, 87, 83, 145, 104, 228, 630.0229524400952, 1527.7002557361689, 14.166666666666666, 21642.420289595724, 1202.356682755318, 0.5092334185787231], 'functions': [['__init__', [7, 15, 11, 22, 22, 33, 78.25484338853101, 147.1612434150308, 5.133333333333334, 755.4277161971582, 41.96820645539768, 0.049053747805010005]], ['_compute_logit', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [12, 32, 35, 64, 44, 99, 203.01955000865388, 540.4837302450925, 12.0, 6485.80476294111, 360.3224868300617, 0.18016124341503]], ['log_prob', [4, 10, 11, 20, 14, 31, 41.219280948873624, 118.02800258378572, 4.0, 472.1120103351429, 26.22844501861905, 0.039342667527928005]], ['__init__', [5, 12, 9, 14, 17, 23, 54.62919048309069, 94.01164534875782, 2.916666666666666, 274.2006322672103, 15.233368459289462, 0.031337215116252]], ['sample', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['sample_logits', [4, 13, 14, 19, 17, 33, 56.105716335834195, 134.8862737612612, 2.923076923076923, 394.28295407137887, 21.904608559521048, 0.044962091253753]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\optimization.py': {'total': [16, 68, 52, 92, 84, 144, 477.94747320502313, 920.4937088801414, 10.823529411764707, 9962.99073140859, 553.499485078255, 0.30683123629338005], 'functions': [['warmup_cosine', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['warmup_constant', [2, 2, 2, 4, 4, 6, 4.0, 12.0, 2.0, 24.0, 1.333333333333333, 0.004]], ['warmup_linear', [3, 3, 3, 6, 6, 9, 9.509775004326938, 23.264662506490403, 3.0, 69.79398751947122, 3.877443751081734, 0.007754887502163001]], ['__init__', [9, 20, 19, 29, 29, 48, 114.96788691072805, 233.1830877661235, 6.525, 1521.519647673956, 84.52886931521977, 0.07772769592204101]], ['get_lr', [5, 9, 5, 9, 14, 14, 40.13896548741762, 53.30296890880645, 2.5, 133.25742227201613, 7.4031901262231194, 0.017767656302935]], ['step', [10, 27, 18, 34, 37, 52, 161.6012435072873, 270.8915750127054, 6.296296296296297, 1705.6136204503675, 94.75631224724265, 0.090297191670901]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\optimization_openai.py': {'total': [18, 92, 70, 127, 110, 197, 675.2263499832068, 1335.927863564358, 12.423913043478262, 16597.451609283275, 922.0806449601819, 0.445309287854785], 'functions': [['warmup_cosine', [5, 13, 9, 18, 18, 27, 59.715356810271004, 112.58797503894243, 3.461538461538461, 389.7276059040315, 21.651533661335083, 0.03752932501298]], ['warmup_constant', [5, 8, 6, 12, 13, 18, 35.60964047443681, 66.60791492653966, 3.75, 249.77968097452373, 13.876648943029096, 0.022202638308846]], ['warmup_linear', [5, 9, 7, 14, 14, 21, 40.13896548741762, 79.95445336320968, 3.8888888888888893, 310.93398530137097, 17.27411029452061, 0.026651484454403]], ['__init__', [9, 20, 19, 29, 29, 48, 114.96788691072805, 233.1830877661235, 6.525, 1521.519647673956, 84.52886931521977, 0.07772769592204101]], ['get_lr', [5, 9, 5, 9, 14, 14, 40.13896548741762, 53.30296890880645, 2.5, 133.25742227201613, 7.4031901262231194, 0.017767656302935]], ['step', [13, 33, 24, 45, 46, 69, 214.57072227466315, 381.1257749679339, 8.863636363636363, 3378.160278124869, 187.67557100693716, 0.12704192498931102]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\tokenization.py': {'total': [15, 123, 75, 158, 138, 233, 912.5326430908542, 1656.2861984293136, 9.634146341463415, 15956.90361901412, 886.4946455007844, 0.552095399476437], 'functions': [['load_vocab', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['whitespace_tokenize', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_ids', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['convert_ids_to_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [2, 5, 3, 6, 7, 9, 13.60964047443681, 25.26619429851844, 1.2, 30.319433158222125, 1.684412953234562, 0.008422064766172]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_run_strip_accents', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_run_split_on_punc', [4, 5, 4, 7, 9, 11, 19.60964047443681, 34.86917501586544, 2.8, 97.63369004442322, 5.424093891356845, 0.011623058338621001]], ['_tokenize_chinese_chars', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_is_chinese_char', [4, 41, 25, 56, 45, 81, 227.65963218934144, 444.84010080270366, 2.731707317073171, 1215.1729582903126, 67.50960879390625, 0.148280033600901]], ['_clean_text', [2, 6, 3, 7, 8, 10, 17.509775004326936, 30.0, 1.166666666666666, 35.0, 1.9444444444444442, 0.01]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [6, 12, 8, 16, 18, 24, 58.52932501298082, 100.07820003461549, 4.0, 400.31280013846197, 22.23960000769233, 0.033359400011538004]], ['_is_whitespace', [2, 11, 6, 14, 13, 20, 40.053747805010275, 74.00879436282185, 1.272727272727272, 94.1930110072278, 5.232945055957099, 0.024669598120940002]], ['_is_control', [2, 7, 4, 9, 9, 13, 21.651484454403228, 41.20902501875006, 1.2857142857142851, 52.98303216696437, 2.943501787053576, 0.013736341672916002]], ['_is_punctuation', [4, 21, 13, 28, 25, 41, 100.23866587835397, 190.3981037807637, 2.666666666666666, 507.7282767487032, 28.207126486039066, 0.063466034593587]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\tokenization_openai.py': {'total': [12, 56, 38, 71, 68, 109, 368.23142564387973, 663.5334496962871, 7.607142857142857, 5047.593742332469, 280.4218745740261, 0.221177816565429], 'functions': [['get_pairs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['text_standardize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['__init__', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['__len__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['set_special_tokens', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['bpe', [9, 25, 20, 38, 34, 58, 144.62572975734892, 295.07284479251973, 6.84, 2018.298258380835, 112.1276810211575, 0.09835761493083901]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_ids', [5, 11, 6, 12, 16, 18, 49.663388279447084, 72.0, 2.727272727272727, 196.36363636363635, 10.909090909090908, 0.024]], ['convert_ids_to_tokens', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['decode', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\tokenization_transfo_xl.py': {'total': [19, 194, 137, 276, 213, 413, 1555.093714139731, 3194.435073153272, 13.515463917525773, 43174.27196808185, 2398.570664893436, 1.06481169105109], 'functions': [['from_pretrained', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['count_file', [4, 7, 4, 9, 11, 13, 27.651484454403228, 44.97261104228487, 2.571428571428571, 115.64385696587539, 6.42465872032641, 0.014990870347428001]], ['count_sents', [4, 7, 4, 9, 11, 13, 27.651484454403228, 44.97261104228487, 2.571428571428571, 115.64385696587539, 6.42465872032641, 0.014990870347428001]], ['_build_from_file', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]], ['build_vocab', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['encode_file', [4, 7, 4, 9, 11, 13, 27.651484454403228, 44.97261104228487, 2.571428571428571, 115.64385696587539, 6.42465872032641, 0.014990870347428001]], ['encode_sents', [4, 7, 4, 9, 11, 13, 27.651484454403228, 44.97261104228487, 2.571428571428571, 115.64385696587539, 6.42465872032641, 0.014990870347428001]], ['add_special', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['add_symbol', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['get_sym', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['get_idx', [1, 4, 3, 6, 5, 9, 8.0, 20.89735285398626, 0.75, 15.673014640489694, 0.8707230355827601, 0.006965784284662001]], ['convert_ids_to_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_ids', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_to_tensor', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['decode', [2, 3, 2, 4, 5, 6, 6.754887502163469, 13.931568569324174, 1.333333333333333, 18.575424759098897, 1.03196804217216, 0.004643856189774]], ['__len__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_run_split_on_punc', [4, 5, 4, 7, 9, 11, 19.60964047443681, 34.86917501586544, 2.8, 97.63369004442322, 5.424093891356845, 0.011623058338621001]], ['_run_strip_accents', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_clean_text', [2, 6, 3, 7, 8, 10, 17.509775004326936, 30.0, 1.166666666666666, 35.0, 1.9444444444444442, 0.01]], ['whitespace_tokenize', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['tokenize', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['__init__', [6, 9, 7, 13, 15, 20, 44.039100017307746, 78.13781191217038, 4.333333333333333, 338.5971849527383, 18.810954719596573, 0.026045937304056]], ['get_batch', [3, 9, 8, 16, 12, 24, 33.28421251514428, 86.03910001730776, 2.666666666666666, 229.43760004615402, 12.746533335897446, 0.028679700005769002]], ['get_fixlen_iter', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_varlen_iter', [6, 11, 7, 14, 17, 21, 53.563522809337215, 85.83671966625714, 3.818181818181818, 327.74020236207275, 18.207789020115154, 0.028612239888752004]], ['__iter__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_sent_stream', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['stream_iterator', [10, 16, 19, 34, 26, 53, 97.21928094887363, 249.1233050614779, 10.625, 2646.9351162782027, 147.0519509043446, 0.083041101687159]], ['__iter__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_sent_stream', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__iter__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [3, 8, 5, 10, 11, 15, 28.75488750216347, 51.89147427955947, 1.875, 97.296514274174, 5.405361904120777, 0.017297158093186]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build_corpus', [2, 6, 6, 12, 8, 18, 17.509775004326936, 54.0, 2.0, 108.0, 6.0, 0.018000000000000002]], ['get_iterator', [2, 8, 7, 14, 10, 21, 26.0, 69.76048999263462, 1.75, 122.08085748711058, 6.782269860395032, 0.023253496664211]], ['get_lm_corpus', [2, 5, 4, 8, 7, 12, 13.60964047443681, 33.68825906469125, 1.6, 53.901214503506004, 2.994511916861444, 0.011229419688230002]], ['_is_whitespace', [2, 11, 6, 14, 13, 20, 40.053747805010275, 74.00879436282185, 1.272727272727272, 94.1930110072278, 5.232945055957099, 0.024669598120940002]], ['_is_control', [2, 7, 4, 9, 9, 13, 21.651484454403228, 41.20902501875006, 1.2857142857142851, 52.98303216696437, 2.943501787053576, 0.013736341672916002]], ['_is_punctuation', [4, 21, 13, 28, 25, 41, 100.23866587835397, 190.3981037807637, 2.666666666666666, 507.7282767487032, 28.207126486039066, 0.063466034593587]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\__init__.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.5.0\\pytorch_pretrained_bert\\__main__.py': {'total': [6, 21, 12, 24, 27, 36, 107.74844088268091, 171.1759500778849, 3.428571428571428, 586.8889716956053, 32.60494287197807, 0.05705865002596101], 'functions': [['main', [6, 19, 11, 22, 25, 33, 96.22039775975506, 153.24725426256592, 3.473684210526316, 532.332567438387, 29.57403152435483, 0.051082418087521]]]}}"
transformers,"{'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_gpt2_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 33, 'endline': 51, 'name': 'convert_gpt2_checkpoint_to_pytorch', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_openai_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 33, 'endline': 51, 'name': 'convert_openai_checkpoint_to_pytorch', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_pytorch_checkpoint_to_tf.py': [{'type': 'function', 'rank': 'A', 'complexity': 5, 'col_offset': 0, 'lineno': 26, 'endline': 92, 'name': 'convert_pytorch_checkpoint_to_tf', 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 67, 'endline': 70, 'name': 'to_tf_var_name', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 72, 'endline': 77, 'name': 'create_tf_var', 'closures': []}]}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 95, 'endline': 125, 'name': 'main', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_roberta_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'C', 'complexity': 12, 'col_offset': 0, 'lineno': 42, 'endline': 155, 'name': 'convert_roberta_checkpoint_to_pytorch', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 29, 'endline': 40, 'name': 'convert_tf_checkpoint_to_pytorch', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_transfo_xl_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 48, 'endline': 90, 'name': 'convert_transfo_xl_checkpoint_to_pytorch', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_xlm_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 32, 'endline': 58, 'name': 'convert_xlm_checkpoint_to_pytorch', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_xlnet_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 46, 'endline': 72, 'name': 'convert_xlnet_checkpoint_to_pytorch', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\file_utils.py': [{'type': 'function', 'rank': 'C', 'complexity': 20, 'col_offset': 0, 'lineno': 191, 'endline': 266, 'name': 'get_from_cache', 'closures': []}, {'type': 'function', 'rank': 'B', 'complexity': 9, 'col_offset': 0, 'lineno': 97, 'endline': 127, 'name': 'cached_path', 'closures': []}, {'type': 'function', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 71, 'endline': 94, 'name': 'filename_to_url', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 130, 'endline': 140, 'name': 'split_s3_path', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 179, 'endline': 188, 'name': 'http_get', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 53, 'endline': 68, 'name': 'url_to_filename', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 143, 'endline': 159, 'name': 's3_request', 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 150, 'endline': 157, 'name': 'wrapper', 'closures': []}]}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 163, 'endline': 168, 'name': 's3_etag', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 172, 'endline': 176, 'name': 's3_get', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_auto.py': [{'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 62, 'endline': 137, 'name': 'from_pretrained', 'classname': 'AutoConfig', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 168, 'endline': 258, 'name': 'from_pretrained', 'classname': 'AutoModel', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 289, 'endline': 382, 'name': 'from_pretrained', 'classname': 'AutoModelWithLMHead', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 35, 'endline': 137, 'name': 'AutoConfig', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 57, 'endline': 58, 'name': '__init__', 'classname': 'AutoConfig', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 62, 'endline': 137, 'name': 'from_pretrained', 'classname': 'AutoConfig', 'closures': []}]}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 140, 'endline': 258, 'name': 'AutoModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 163, 'endline': 164, 'name': '__init__', 'classname': 'AutoModel', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 168, 'endline': 258, 'name': 'from_pretrained', 'classname': 'AutoModel', 'closures': []}]}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 261, 'endline': 382, 'name': 'AutoModelWithLMHead', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 284, 'endline': 285, 'name': '__init__', 'classname': 'AutoModelWithLMHead', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 289, 'endline': 382, 'name': 'from_pretrained', 'classname': 'AutoModelWithLMHead', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 410, 'endline': 493, 'name': 'from_pretrained', 'classname': 'AutoModelForSequenceClassification', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 5, 'col_offset': 0, 'lineno': 385, 'endline': 493, 'name': 'AutoModelForSequenceClassification', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 405, 'endline': 406, 'name': '__init__', 'classname': 'AutoModelForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 410, 'endline': 493, 'name': 'from_pretrained', 'classname': 'AutoModelForSequenceClassification', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 520, 'endline': 600, 'name': 'from_pretrained', 'classname': 'AutoModelForQuestionAnswering', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 496, 'endline': 600, 'name': 'AutoModelForQuestionAnswering', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 515, 'endline': 516, 'name': '__init__', 'classname': 'AutoModelForQuestionAnswering', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 520, 'endline': 600, 'name': 'from_pretrained', 'classname': 'AutoModelForQuestionAnswering', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 57, 'endline': 58, 'name': '__init__', 'classname': 'AutoConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 163, 'endline': 164, 'name': '__init__', 'classname': 'AutoModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 284, 'endline': 285, 'name': '__init__', 'classname': 'AutoModelWithLMHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 405, 'endline': 406, 'name': '__init__', 'classname': 'AutoModelForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 515, 'endline': 516, 'name': '__init__', 'classname': 'AutoModelForQuestionAnswering', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_bert.py': [{'type': 'function', 'rank': 'C', 'complexity': 20, 'col_offset': 0, 'lineno': 69, 'endline': 133, 'name': 'load_tf_weights_in_bert', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 7, 'col_offset': 0, 'lineno': 152, 'endline': 218, 'name': 'BertConfig', 'methods': [{'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 183, 'endline': 218, 'name': '__init__', 'classname': 'BertConfig', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 424, 'endline': 446, 'name': 'forward', 'classname': 'BertEncoder', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 183, 'endline': 218, 'name': '__init__', 'classname': 'BertConfig', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 417, 'endline': 446, 'name': 'BertEncoder', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 418, 'endline': 422, 'name': '__init__', 'classname': 'BertEncoder', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 424, 'endline': 446, 'name': 'forward', 'classname': 'BertEncoder', 'closures': []}]}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 532, 'endline': 551, 'name': 'BertPreTrainedModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 541, 'endline': 551, 'name': '_init_weights', 'classname': 'BertPreTrainedModel', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 671, 'endline': 715, 'name': 'forward', 'classname': 'BertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 342, 'endline': 363, 'name': 'prune_heads', 'classname': 'BertAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 541, 'endline': 551, 'name': '_init_weights', 'classname': 'BertPreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 1064, 'endline': 1087, 'name': 'forward', 'classname': 'BertForMultipleChoice', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 1206, 'endline': 1235, 'name': 'forward', 'classname': 'BertForQuestionAnswering', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 372, 'endline': 384, 'name': 'BertIntermediate', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 373, 'endline': 379, 'name': '__init__', 'classname': 'BertIntermediate', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 381, 'endline': 384, 'name': 'forward', 'classname': 'BertIntermediate', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 373, 'endline': 379, 'name': '__init__', 'classname': 'BertIntermediate', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 464, 'endline': 478, 'name': 'BertPredictionHeadTransform', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 465, 'endline': 472, 'name': '__init__', 'classname': 'BertPredictionHeadTransform', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 474, 'endline': 478, 'name': 'forward', 'classname': 'BertPredictionHeadTransform', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 465, 'endline': 472, 'name': '__init__', 'classname': 'BertPredictionHeadTransform', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 987, 'endline': 1087, 'name': 'BertForMultipleChoice', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1055, 'endline': 1062, 'name': '__init__', 'classname': 'BertForMultipleChoice', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 1064, 'endline': 1087, 'name': 'forward', 'classname': 'BertForMultipleChoice', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 1160, 'endline': 1235, 'name': 'BertForQuestionAnswering', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1197, 'endline': 1204, 'name': '__init__', 'classname': 'BertForQuestionAnswering', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 1206, 'endline': 1235, 'name': 'forward', 'classname': 'BertForQuestionAnswering', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 229, 'endline': 258, 'name': 'BertEmbeddings', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 232, 'endline': 241, 'name': '__init__', 'classname': 'BertEmbeddings', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 243, 'endline': 258, 'name': 'forward', 'classname': 'BertEmbeddings', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 243, 'endline': 258, 'name': 'forward', 'classname': 'BertEmbeddings', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 261, 'endline': 318, 'name': 'BertSelfAttention', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 262, 'endline': 278, 'name': '__init__', 'classname': 'BertSelfAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 280, 'endline': 283, 'name': 'transpose_for_scores', 'classname': 'BertSelfAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 285, 'endline': 318, 'name': 'forward', 'classname': 'BertSelfAttention', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 285, 'endline': 318, 'name': 'forward', 'classname': 'BertSelfAttention', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 335, 'endline': 369, 'name': 'BertAttention', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 336, 'endline': 340, 'name': '__init__', 'classname': 'BertAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 342, 'endline': 363, 'name': 'prune_heads', 'classname': 'BertAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 365, 'endline': 369, 'name': 'forward', 'classname': 'BertAttention', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 619, 'endline': 715, 'name': 'BertModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 648, 'endline': 655, 'name': '__init__', 'classname': 'BertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 657, 'endline': 661, 'name': '_resize_token_embeddings', 'classname': 'BertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 663, 'endline': 669, 'name': '_prune_heads', 'classname': 'BertModel', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 671, 'endline': 715, 'name': 'forward', 'classname': 'BertModel', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 721, 'endline': 791, 'name': 'BertForPreTraining', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 758, 'endline': 765, 'name': '__init__', 'classname': 'BertForPreTraining', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 767, 'endline': 772, 'name': 'tie_weights', 'classname': 'BertForPreTraining', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 774, 'endline': 791, 'name': 'forward', 'classname': 'BertForPreTraining', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 774, 'endline': 791, 'name': 'forward', 'classname': 'BertForPreTraining', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 861, 'endline': 913, 'name': 'BertForNextSentencePrediction', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 891, 'endline': 897, 'name': '__init__', 'classname': 'BertForNextSentencePrediction', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 899, 'endline': 913, 'name': 'forward', 'classname': 'BertForNextSentencePrediction', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 919, 'endline': 981, 'name': 'BertForSequenceClassification', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 950, 'endline': 958, 'name': '__init__', 'classname': 'BertForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 960, 'endline': 981, 'name': 'forward', 'classname': 'BertForSequenceClassification', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 960, 'endline': 981, 'name': 'forward', 'classname': 'BertForSequenceClassification', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 1093, 'endline': 1154, 'name': 'BertForTokenClassification', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1122, 'endline': 1130, 'name': '__init__', 'classname': 'BertForTokenClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 1132, 'endline': 1154, 'name': 'forward', 'classname': 'BertForTokenClassification', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 1132, 'endline': 1154, 'name': 'forward', 'classname': 'BertForTokenClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 262, 'endline': 278, 'name': '__init__', 'classname': 'BertSelfAttention', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 321, 'endline': 332, 'name': 'BertSelfOutput', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 322, 'endline': 326, 'name': '__init__', 'classname': 'BertSelfOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 328, 'endline': 332, 'name': 'forward', 'classname': 'BertSelfOutput', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 387, 'endline': 398, 'name': 'BertOutput', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 388, 'endline': 392, 'name': '__init__', 'classname': 'BertOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 394, 'endline': 398, 'name': 'forward', 'classname': 'BertOutput', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 401, 'endline': 414, 'name': 'BertLayer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 402, 'endline': 406, 'name': '__init__', 'classname': 'BertLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 408, 'endline': 414, 'name': 'forward', 'classname': 'BertLayer', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 418, 'endline': 422, 'name': '__init__', 'classname': 'BertEncoder', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 449, 'endline': 461, 'name': 'BertPooler', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 450, 'endline': 453, 'name': '__init__', 'classname': 'BertPooler', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 455, 'endline': 461, 'name': 'forward', 'classname': 'BertPooler', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 481, 'endline': 497, 'name': 'BertLMPredictionHead', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 482, 'endline': 492, 'name': '__init__', 'classname': 'BertLMPredictionHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 494, 'endline': 497, 'name': 'forward', 'classname': 'BertLMPredictionHead', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 500, 'endline': 507, 'name': 'BertOnlyMLMHead', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 501, 'endline': 503, 'name': '__init__', 'classname': 'BertOnlyMLMHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 505, 'endline': 507, 'name': 'forward', 'classname': 'BertOnlyMLMHead', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 510, 'endline': 517, 'name': 'BertOnlyNSPHead', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 511, 'endline': 513, 'name': '__init__', 'classname': 'BertOnlyNSPHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 515, 'endline': 517, 'name': 'forward', 'classname': 'BertOnlyNSPHead', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 520, 'endline': 529, 'name': 'BertPreTrainingHeads', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 521, 'endline': 524, 'name': '__init__', 'classname': 'BertPreTrainingHeads', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 526, 'endline': 529, 'name': 'forward', 'classname': 'BertPreTrainingHeads', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 663, 'endline': 669, 'name': '_prune_heads', 'classname': 'BertModel', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 796, 'endline': 856, 'name': 'BertForMaskedLM', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 826, 'endline': 833, 'name': '__init__', 'classname': 'BertForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 835, 'endline': 840, 'name': 'tie_weights', 'classname': 'BertForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 842, 'endline': 856, 'name': 'forward', 'classname': 'BertForMaskedLM', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 842, 'endline': 856, 'name': 'forward', 'classname': 'BertForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 899, 'endline': 913, 'name': 'forward', 'classname': 'BertForNextSentencePrediction', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 136, 'endline': 142, 'name': 'gelu', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 145, 'endline': 146, 'name': 'swish', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 232, 'endline': 241, 'name': '__init__', 'classname': 'BertEmbeddings', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 280, 'endline': 283, 'name': 'transpose_for_scores', 'classname': 'BertSelfAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 322, 'endline': 326, 'name': '__init__', 'classname': 'BertSelfOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 328, 'endline': 332, 'name': 'forward', 'classname': 'BertSelfOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 336, 'endline': 340, 'name': '__init__', 'classname': 'BertAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 365, 'endline': 369, 'name': 'forward', 'classname': 'BertAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 381, 'endline': 384, 'name': 'forward', 'classname': 'BertIntermediate', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 388, 'endline': 392, 'name': '__init__', 'classname': 'BertOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 394, 'endline': 398, 'name': 'forward', 'classname': 'BertOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 402, 'endline': 406, 'name': '__init__', 'classname': 'BertLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 408, 'endline': 414, 'name': 'forward', 'classname': 'BertLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 450, 'endline': 453, 'name': '__init__', 'classname': 'BertPooler', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 455, 'endline': 461, 'name': 'forward', 'classname': 'BertPooler', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 474, 'endline': 478, 'name': 'forward', 'classname': 'BertPredictionHeadTransform', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 482, 'endline': 492, 'name': '__init__', 'classname': 'BertLMPredictionHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 494, 'endline': 497, 'name': 'forward', 'classname': 'BertLMPredictionHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 501, 'endline': 503, 'name': '__init__', 'classname': 'BertOnlyMLMHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 505, 'endline': 507, 'name': 'forward', 'classname': 'BertOnlyMLMHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 511, 'endline': 513, 'name': '__init__', 'classname': 'BertOnlyNSPHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 515, 'endline': 517, 'name': 'forward', 'classname': 'BertOnlyNSPHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 521, 'endline': 524, 'name': '__init__', 'classname': 'BertPreTrainingHeads', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 526, 'endline': 529, 'name': 'forward', 'classname': 'BertPreTrainingHeads', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 648, 'endline': 655, 'name': '__init__', 'classname': 'BertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 657, 'endline': 661, 'name': '_resize_token_embeddings', 'classname': 'BertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 758, 'endline': 765, 'name': '__init__', 'classname': 'BertForPreTraining', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 767, 'endline': 772, 'name': 'tie_weights', 'classname': 'BertForPreTraining', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 826, 'endline': 833, 'name': '__init__', 'classname': 'BertForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 835, 'endline': 840, 'name': 'tie_weights', 'classname': 'BertForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 891, 'endline': 897, 'name': '__init__', 'classname': 'BertForNextSentencePrediction', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 950, 'endline': 958, 'name': '__init__', 'classname': 'BertForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1055, 'endline': 1062, 'name': '__init__', 'classname': 'BertForMultipleChoice', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1122, 'endline': 1130, 'name': '__init__', 'classname': 'BertForTokenClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1197, 'endline': 1204, 'name': '__init__', 'classname': 'BertForQuestionAnswering', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_distilbert.py': [{'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 338, 'endline': 387, 'name': 'forward', 'classname': 'Transformer', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 7, 'col_offset': 0, 'lineno': 328, 'endline': 387, 'name': 'Transformer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 329, 'endline': 336, 'name': '__init__', 'classname': 'Transformer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 338, 'endline': 387, 'name': 'forward', 'classname': 'Transformer', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 403, 'endline': 415, 'name': '_init_weights', 'classname': 'DistilBertPreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 54, 'endline': 94, 'name': '__init__', 'classname': 'DistilBertConfig', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 5, 'col_offset': 0, 'lineno': 161, 'endline': 258, 'name': 'MultiHeadSelfAttention', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 162, 'endline': 177, 'name': '__init__', 'classname': 'MultiHeadSelfAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 179, 'endline': 198, 'name': 'prune_heads', 'classname': 'MultiHeadSelfAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 200, 'endline': 258, 'name': 'forward', 'classname': 'MultiHeadSelfAttention', 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 8, 'lineno': 227, 'endline': 229, 'name': 'shape', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 8, 'lineno': 231, 'endline': 233, 'name': 'unshape', 'closures': []}]}]}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 179, 'endline': 198, 'name': 'prune_heads', 'classname': 'MultiHeadSelfAttention', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 5, 'col_offset': 0, 'lineno': 391, 'endline': 415, 'name': 'DistilBertPreTrainedModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 400, 'endline': 401, 'name': '__init__', 'classname': 'DistilBertPreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 403, 'endline': 415, 'name': '_init_weights', 'classname': 'DistilBertPreTrainedModel', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 504, 'endline': 531, 'name': 'forward', 'classname': 'DistilBertModel', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 5, 'col_offset': 0, 'lineno': 679, 'endline': 756, 'name': 'DistilBertForQuestionAnswering', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 716, 'endline': 724, 'name': '__init__', 'classname': 'DistilBertForQuestionAnswering', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 726, 'endline': 756, 'name': 'forward', 'classname': 'DistilBertForQuestionAnswering', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 726, 'endline': 756, 'name': 'forward', 'classname': 'DistilBertForQuestionAnswering', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 200, 'endline': 258, 'name': 'forward', 'classname': 'MultiHeadSelfAttention', 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 8, 'lineno': 227, 'endline': 229, 'name': 'shape', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 8, 'lineno': 231, 'endline': 233, 'name': 'unshape', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 276, 'endline': 325, 'name': 'TransformerBlock', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 277, 'endline': 293, 'name': '__init__', 'classname': 'TransformerBlock', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 295, 'endline': 325, 'name': 'forward', 'classname': 'TransformerBlock', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 295, 'endline': 325, 'name': 'forward', 'classname': 'TransformerBlock', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 113, 'endline': 121, 'name': 'create_sinusoidal_embeddings', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 51, 'endline': 106, 'name': 'DistilBertConfig', 'methods': [{'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 54, 'endline': 94, 'name': '__init__', 'classname': 'DistilBertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 97, 'endline': 98, 'name': 'hidden_size', 'classname': 'DistilBertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 101, 'endline': 102, 'name': 'num_attention_heads', 'classname': 'DistilBertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 105, 'endline': 106, 'name': 'num_hidden_layers', 'classname': 'DistilBertConfig', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 123, 'endline': 159, 'name': 'Embeddings', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 124, 'endline': 135, 'name': '__init__', 'classname': 'Embeddings', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 137, 'endline': 159, 'name': 'forward', 'classname': 'Embeddings', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 260, 'endline': 274, 'name': 'FFN', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 261, 'endline': 267, 'name': '__init__', 'classname': 'FFN', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 269, 'endline': 274, 'name': 'forward', 'classname': 'FFN', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 261, 'endline': 267, 'name': '__init__', 'classname': 'FFN', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 460, 'endline': 531, 'name': 'DistilBertModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 482, 'endline': 488, 'name': '__init__', 'classname': 'DistilBertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 490, 'endline': 494, 'name': '_resize_token_embeddings', 'classname': 'DistilBertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 496, 'endline': 502, 'name': '_prune_heads', 'classname': 'DistilBertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 504, 'endline': 531, 'name': 'forward', 'classname': 'DistilBertModel', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 610, 'endline': 673, 'name': 'DistilBertForSequenceClassification', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 641, 'endline': 650, 'name': '__init__', 'classname': 'DistilBertForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 652, 'endline': 673, 'name': 'forward', 'classname': 'DistilBertForSequenceClassification', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 652, 'endline': 673, 'name': 'forward', 'classname': 'DistilBertForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 124, 'endline': 135, 'name': '__init__', 'classname': 'Embeddings', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 162, 'endline': 177, 'name': '__init__', 'classname': 'MultiHeadSelfAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 277, 'endline': 293, 'name': '__init__', 'classname': 'TransformerBlock', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 329, 'endline': 336, 'name': '__init__', 'classname': 'Transformer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 496, 'endline': 502, 'name': '_prune_heads', 'classname': 'DistilBertModel', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 536, 'endline': 604, 'name': 'DistilBertForMaskedLM', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 566, 'endline': 579, 'name': '__init__', 'classname': 'DistilBertForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 581, 'endline': 586, 'name': 'tie_weights', 'classname': 'DistilBertForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 588, 'endline': 604, 'name': 'forward', 'classname': 'DistilBertForMaskedLM', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 588, 'endline': 604, 'name': 'forward', 'classname': 'DistilBertForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 716, 'endline': 724, 'name': '__init__', 'classname': 'DistilBertForQuestionAnswering', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 110, 'endline': 111, 'name': 'gelu', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 97, 'endline': 98, 'name': 'hidden_size', 'classname': 'DistilBertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 101, 'endline': 102, 'name': 'num_attention_heads', 'classname': 'DistilBertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 105, 'endline': 106, 'name': 'num_hidden_layers', 'classname': 'DistilBertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 137, 'endline': 159, 'name': 'forward', 'classname': 'Embeddings', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 269, 'endline': 274, 'name': 'forward', 'classname': 'FFN', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 400, 'endline': 401, 'name': '__init__', 'classname': 'DistilBertPreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 482, 'endline': 488, 'name': '__init__', 'classname': 'DistilBertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 490, 'endline': 494, 'name': '_resize_token_embeddings', 'classname': 'DistilBertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 566, 'endline': 579, 'name': '__init__', 'classname': 'DistilBertForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 581, 'endline': 586, 'name': 'tie_weights', 'classname': 'DistilBertForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 641, 'endline': 650, 'name': '__init__', 'classname': 'DistilBertForSequenceClassification', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_gpt2.py': [{'type': 'function', 'rank': 'C', 'complexity': 14, 'col_offset': 0, 'lineno': 47, 'endline': 98, 'name': 'load_tf_weights_in_gpt2', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 14, 'col_offset': 4, 'lineno': 476, 'endline': 545, 'name': 'forward', 'classname': 'GPT2Model', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 127, 'endline': 197, 'name': '__init__', 'classname': 'GPT2Config', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 426, 'endline': 545, 'name': 'GPT2Model', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 452, 'endline': 463, 'name': '__init__', 'classname': 'GPT2Model', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 465, 'endline': 467, 'name': '_resize_token_embeddings', 'classname': 'GPT2Model', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 469, 'endline': 474, 'name': '_prune_heads', 'classname': 'GPT2Model', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 14, 'col_offset': 4, 'lineno': 476, 'endline': 545, 'name': 'forward', 'classname': 'GPT2Model', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 238, 'endline': 258, 'name': 'prune_heads', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 364, 'endline': 375, 'name': '_init_weights', 'classname': 'GPT2PreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 260, 'endline': 278, 'name': '_attn', 'classname': 'Attention', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 352, 'endline': 375, 'name': 'GPT2PreTrainedModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 361, 'endline': 362, 'name': '__init__', 'classname': 'GPT2PreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 364, 'endline': 375, 'name': '_init_weights', 'classname': 'GPT2PreTrainedModel', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 105, 'endline': 215, 'name': 'GPT2Config', 'methods': [{'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 127, 'endline': 197, 'name': '__init__', 'classname': 'GPT2Config', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 202, 'endline': 203, 'name': 'max_position_embeddings', 'classname': 'GPT2Config', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 206, 'endline': 207, 'name': 'hidden_size', 'classname': 'GPT2Config', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 210, 'endline': 211, 'name': 'num_attention_heads', 'classname': 'GPT2Config', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 214, 'endline': 215, 'name': 'num_hidden_layers', 'classname': 'GPT2Config', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 219, 'endline': 313, 'name': 'Attention', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 220, 'endline': 236, 'name': '__init__', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 238, 'endline': 258, 'name': 'prune_heads', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 260, 'endline': 278, 'name': '_attn', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 280, 'endline': 283, 'name': 'merge_heads', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 285, 'endline': 291, 'name': 'split_heads', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 293, 'endline': 313, 'name': 'forward', 'classname': 'Attention', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 630, 'endline': 751, 'name': 'GPT2DoubleHeadsModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 712, 'endline': 719, 'name': '__init__', 'classname': 'GPT2DoubleHeadsModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 721, 'endline': 726, 'name': 'tie_weights', 'classname': 'GPT2DoubleHeadsModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 728, 'endline': 751, 'name': 'forward', 'classname': 'GPT2DoubleHeadsModel', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 728, 'endline': 751, 'name': 'forward', 'classname': 'GPT2DoubleHeadsModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 220, 'endline': 236, 'name': '__init__', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 285, 'endline': 291, 'name': 'split_heads', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 293, 'endline': 313, 'name': 'forward', 'classname': 'Attention', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 316, 'endline': 328, 'name': 'MLP', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 317, 'endline': 323, 'name': '__init__', 'classname': 'MLP', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 325, 'endline': 328, 'name': 'forward', 'classname': 'MLP', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 331, 'endline': 349, 'name': 'Block', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 332, 'endline': 338, 'name': '__init__', 'classname': 'Block', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 340, 'endline': 349, 'name': 'forward', 'classname': 'Block', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 452, 'endline': 463, 'name': '__init__', 'classname': 'GPT2Model', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 469, 'endline': 474, 'name': '_prune_heads', 'classname': 'GPT2Model', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 550, 'endline': 622, 'name': 'GPT2LMHeadModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 589, 'endline': 595, 'name': '__init__', 'classname': 'GPT2LMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 597, 'endline': 602, 'name': 'tie_weights', 'classname': 'GPT2LMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 604, 'endline': 622, 'name': 'forward', 'classname': 'GPT2LMHeadModel', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 604, 'endline': 622, 'name': 'forward', 'classname': 'GPT2LMHeadModel', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 101, 'endline': 102, 'name': 'gelu', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 202, 'endline': 203, 'name': 'max_position_embeddings', 'classname': 'GPT2Config', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 206, 'endline': 207, 'name': 'hidden_size', 'classname': 'GPT2Config', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 210, 'endline': 211, 'name': 'num_attention_heads', 'classname': 'GPT2Config', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 214, 'endline': 215, 'name': 'num_hidden_layers', 'classname': 'GPT2Config', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 280, 'endline': 283, 'name': 'merge_heads', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 317, 'endline': 323, 'name': '__init__', 'classname': 'MLP', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 325, 'endline': 328, 'name': 'forward', 'classname': 'MLP', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 332, 'endline': 338, 'name': '__init__', 'classname': 'Block', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 340, 'endline': 349, 'name': 'forward', 'classname': 'Block', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 361, 'endline': 362, 'name': '__init__', 'classname': 'GPT2PreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 465, 'endline': 467, 'name': '_resize_token_embeddings', 'classname': 'GPT2Model', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 589, 'endline': 595, 'name': '__init__', 'classname': 'GPT2LMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 597, 'endline': 602, 'name': 'tie_weights', 'classname': 'GPT2LMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 712, 'endline': 719, 'name': '__init__', 'classname': 'GPT2DoubleHeadsModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 721, 'endline': 726, 'name': 'tie_weights', 'classname': 'GPT2DoubleHeadsModel', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_openai.py': [{'type': 'function', 'rank': 'D', 'complexity': 21, 'col_offset': 0, 'lineno': 44, 'endline': 116, 'name': 'load_tf_weights_in_openai_gpt', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 12, 'col_offset': 4, 'lineno': 473, 'endline': 532, 'name': 'forward', 'classname': 'OpenAIGPTModel', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 157, 'endline': 214, 'name': '__init__', 'classname': 'OpenAIGPTConfig', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 361, 'endline': 381, 'name': 'OpenAIGPTPreTrainedModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 370, 'endline': 381, 'name': '_init_weights', 'classname': 'OpenAIGPTPreTrainedModel', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 254, 'endline': 271, 'name': 'prune_heads', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 370, 'endline': 381, 'name': '_init_weights', 'classname': 'OpenAIGPTPreTrainedModel', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 5, 'col_offset': 0, 'lineno': 428, 'endline': 532, 'name': 'OpenAIGPTModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 450, 'endline': 460, 'name': '__init__', 'classname': 'OpenAIGPTModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 462, 'endline': 464, 'name': '_resize_token_embeddings', 'classname': 'OpenAIGPTModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 466, 'endline': 471, 'name': '_prune_heads', 'classname': 'OpenAIGPTModel', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 12, 'col_offset': 4, 'lineno': 473, 'endline': 532, 'name': 'forward', 'classname': 'OpenAIGPTModel', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 273, 'endline': 292, 'name': '_attn', 'classname': 'Attention', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 130, 'endline': 232, 'name': 'OpenAIGPTConfig', 'methods': [{'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 157, 'endline': 214, 'name': '__init__', 'classname': 'OpenAIGPTConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 219, 'endline': 220, 'name': 'max_position_embeddings', 'classname': 'OpenAIGPTConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 223, 'endline': 224, 'name': 'hidden_size', 'classname': 'OpenAIGPTConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 227, 'endline': 228, 'name': 'num_attention_heads', 'classname': 'OpenAIGPTConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 231, 'endline': 232, 'name': 'num_hidden_layers', 'classname': 'OpenAIGPTConfig', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 235, 'endline': 322, 'name': 'Attention', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 236, 'endline': 252, 'name': '__init__', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 254, 'endline': 271, 'name': 'prune_heads', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 273, 'endline': 292, 'name': '_attn', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 294, 'endline': 297, 'name': 'merge_heads', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 299, 'endline': 305, 'name': 'split_heads', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 307, 'endline': 322, 'name': 'forward', 'classname': 'Attention', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 608, 'endline': 713, 'name': 'OpenAIGPTDoubleHeadsModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 673, 'endline': 681, 'name': '__init__', 'classname': 'OpenAIGPTDoubleHeadsModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 683, 'endline': 688, 'name': 'tie_weights', 'classname': 'OpenAIGPTDoubleHeadsModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 690, 'endline': 713, 'name': 'forward', 'classname': 'OpenAIGPTDoubleHeadsModel', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 690, 'endline': 713, 'name': 'forward', 'classname': 'OpenAIGPTDoubleHeadsModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 236, 'endline': 252, 'name': '__init__', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 299, 'endline': 305, 'name': 'split_heads', 'classname': 'Attention', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 325, 'endline': 337, 'name': 'MLP', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 326, 'endline': 332, 'name': '__init__', 'classname': 'MLP', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 334, 'endline': 337, 'name': 'forward', 'classname': 'MLP', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 340, 'endline': 358, 'name': 'Block', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 341, 'endline': 347, 'name': '__init__', 'classname': 'Block', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 349, 'endline': 358, 'name': 'forward', 'classname': 'Block', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 450, 'endline': 460, 'name': '__init__', 'classname': 'OpenAIGPTModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 466, 'endline': 471, 'name': '_prune_heads', 'classname': 'OpenAIGPTModel', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 537, 'endline': 600, 'name': 'OpenAIGPTLMHeadModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 568, 'endline': 574, 'name': '__init__', 'classname': 'OpenAIGPTLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 576, 'endline': 581, 'name': 'tie_weights', 'classname': 'OpenAIGPTLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 583, 'endline': 600, 'name': 'forward', 'classname': 'OpenAIGPTLMHeadModel', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 583, 'endline': 600, 'name': 'forward', 'classname': 'OpenAIGPTLMHeadModel', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 119, 'endline': 120, 'name': 'gelu', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 123, 'endline': 124, 'name': 'swish', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 219, 'endline': 220, 'name': 'max_position_embeddings', 'classname': 'OpenAIGPTConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 223, 'endline': 224, 'name': 'hidden_size', 'classname': 'OpenAIGPTConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 227, 'endline': 228, 'name': 'num_attention_heads', 'classname': 'OpenAIGPTConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 231, 'endline': 232, 'name': 'num_hidden_layers', 'classname': 'OpenAIGPTConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 294, 'endline': 297, 'name': 'merge_heads', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 307, 'endline': 322, 'name': 'forward', 'classname': 'Attention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 326, 'endline': 332, 'name': '__init__', 'classname': 'MLP', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 334, 'endline': 337, 'name': 'forward', 'classname': 'MLP', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 341, 'endline': 347, 'name': '__init__', 'classname': 'Block', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 349, 'endline': 358, 'name': 'forward', 'classname': 'Block', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 462, 'endline': 464, 'name': '_resize_token_embeddings', 'classname': 'OpenAIGPTModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 568, 'endline': 574, 'name': '__init__', 'classname': 'OpenAIGPTLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 576, 'endline': 581, 'name': 'tie_weights', 'classname': 'OpenAIGPTLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 673, 'endline': 681, 'name': '__init__', 'classname': 'OpenAIGPTDoubleHeadsModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 683, 'endline': 688, 'name': 'tie_weights', 'classname': 'OpenAIGPTDoubleHeadsModel', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_roberta.py': [{'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 49, 'endline': 64, 'name': 'RobertaEmbeddings', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 53, 'endline': 55, 'name': '__init__', 'classname': 'RobertaEmbeddings', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 57, 'endline': 64, 'name': 'forward', 'classname': 'RobertaEmbeddings', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 134, 'endline': 178, 'name': 'RobertaModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 167, 'endline': 171, 'name': '__init__', 'classname': 'RobertaModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 173, 'endline': 178, 'name': 'forward', 'classname': 'RobertaModel', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 274, 'endline': 334, 'name': 'RobertaForSequenceClassification', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 309, 'endline': 314, 'name': '__init__', 'classname': 'RobertaForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 316, 'endline': 334, 'name': 'forward', 'classname': 'RobertaForSequenceClassification', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 316, 'endline': 334, 'name': 'forward', 'classname': 'RobertaForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 57, 'endline': 64, 'name': 'forward', 'classname': 'RobertaEmbeddings', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 173, 'endline': 178, 'name': 'forward', 'classname': 'RobertaModel', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 183, 'endline': 246, 'name': 'RobertaForMaskedLM', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 217, 'endline': 224, 'name': '__init__', 'classname': 'RobertaForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 226, 'endline': 230, 'name': 'tie_weights', 'classname': 'RobertaForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 232, 'endline': 246, 'name': 'forward', 'classname': 'RobertaForMaskedLM', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 232, 'endline': 246, 'name': 'forward', 'classname': 'RobertaForMaskedLM', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 249, 'endline': 268, 'name': 'RobertaLMHead', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 252, 'endline': 258, 'name': '__init__', 'classname': 'RobertaLMHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 260, 'endline': 268, 'name': 'forward', 'classname': 'RobertaLMHead', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 338, 'endline': 354, 'name': 'RobertaClassificationHead', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 341, 'endline': 345, 'name': '__init__', 'classname': 'RobertaClassificationHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 347, 'endline': 354, 'name': 'forward', 'classname': 'RobertaClassificationHead', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 53, 'endline': 55, 'name': '__init__', 'classname': 'RobertaEmbeddings', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 67, 'endline': 68, 'name': 'RobertaConfig', 'methods': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 167, 'endline': 171, 'name': '__init__', 'classname': 'RobertaModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 217, 'endline': 224, 'name': '__init__', 'classname': 'RobertaForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 226, 'endline': 230, 'name': 'tie_weights', 'classname': 'RobertaForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 252, 'endline': 258, 'name': '__init__', 'classname': 'RobertaLMHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 260, 'endline': 268, 'name': 'forward', 'classname': 'RobertaLMHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 309, 'endline': 314, 'name': '__init__', 'classname': 'RobertaForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 341, 'endline': 345, 'name': '__init__', 'classname': 'RobertaClassificationHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 347, 'endline': 354, 'name': 'forward', 'classname': 'RobertaClassificationHead', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_transfo_xl.py': [{'type': 'method', 'rank': 'E', 'complexity': 35, 'col_offset': 4, 'lineno': 1112, 'endline': 1241, 'name': '_forward', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'method', 'rank': 'D', 'complexity': 28, 'col_offset': 4, 'lineno': 865, 'endline': 904, 'name': '_init_weights', 'classname': 'TransfoXLPreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 18, 'col_offset': 4, 'lineno': 979, 'endline': 1059, 'name': '__init__', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'function', 'rank': 'C', 'complexity': 16, 'col_offset': 0, 'lineno': 122, 'endline': 175, 'name': 'load_tf_weights_in_transfo_xl', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 14, 'col_offset': 4, 'lineno': 1309, 'endline': 1334, 'name': 'tie_weights', 'classname': 'TransfoXLLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 12, 'col_offset': 4, 'lineno': 632, 'endline': 717, 'name': 'forward', 'classname': 'RelLearnableMultiHeadAttn', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 11, 'col_offset': 4, 'lineno': 546, 'endline': 626, 'name': 'forward', 'classname': 'RelPartialLearnableMultiHeadAttn', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 10, 'col_offset': 4, 'lineno': 403, 'endline': 459, 'name': 'forward', 'classname': 'MultiHeadAttn', 'closures': []}, {'type': 'function', 'rank': 'B', 'complexity': 9, 'col_offset': 0, 'lineno': 50, 'endline': 120, 'name': 'build_tf_to_pytorch_map', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 9, 'col_offset': 0, 'lineno': 847, 'endline': 907, 'name': 'TransfoXLPreTrainedModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 856, 'endline': 860, 'name': '_init_weight', 'classname': 'TransfoXLPreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 862, 'endline': 863, 'name': '_init_bias', 'classname': 'TransfoXLPreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'D', 'complexity': 28, 'col_offset': 4, 'lineno': 865, 'endline': 904, 'name': '_init_weights', 'classname': 'TransfoXLPreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 906, 'endline': 907, 'name': 'set_num_special_tokens', 'classname': 'TransfoXLPreTrainedModel', 'closures': []}]}, {'type': 'class', 'rank': 'B', 'complexity': 8, 'col_offset': 0, 'lineno': 372, 'endline': 459, 'name': 'MultiHeadAttn', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 373, 'endline': 401, 'name': '__init__', 'classname': 'MultiHeadAttn', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 10, 'col_offset': 4, 'lineno': 403, 'endline': 459, 'name': 'forward', 'classname': 'MultiHeadAttn', 'closures': []}]}, {'type': 'class', 'rank': 'B', 'complexity': 8, 'col_offset': 0, 'lineno': 628, 'endline': 717, 'name': 'RelLearnableMultiHeadAttn', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 629, 'endline': 630, 'name': '__init__', 'classname': 'RelLearnableMultiHeadAttn', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 12, 'col_offset': 4, 'lineno': 632, 'endline': 717, 'name': 'forward', 'classname': 'RelLearnableMultiHeadAttn', 'closures': []}]}, {'type': 'class', 'rank': 'B', 'complexity': 8, 'col_offset': 0, 'lineno': 953, 'endline': 1252, 'name': 'TransfoXLModel', 'methods': [{'type': 'method', 'rank': 'C', 'complexity': 18, 'col_offset': 4, 'lineno': 979, 'endline': 1059, 'name': '__init__', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1061, 'endline': 1062, 'name': '_resize_token_embeddings', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1064, 'endline': 1065, 'name': 'backward_compatible', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1067, 'endline': 1070, 'name': 'reset_length', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1072, 'endline': 1074, 'name': '_prune_heads', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 1076, 'endline': 1087, 'name': 'init_mems', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 1089, 'endline': 1110, 'name': '_update_mems', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'method', 'rank': 'E', 'complexity': 35, 'col_offset': 4, 'lineno': 1112, 'endline': 1241, 'name': '_forward', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 1243, 'endline': 1252, 'name': 'forward', 'classname': 'TransfoXLModel', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 215, 'endline': 287, 'name': '__init__', 'classname': 'TransfoXLConfig', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 7, 'col_offset': 0, 'lineno': 540, 'endline': 626, 'name': 'RelPartialLearnableMultiHeadAttn', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 541, 'endline': 544, 'name': '__init__', 'classname': 'RelPartialLearnableMultiHeadAttn', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 11, 'col_offset': 4, 'lineno': 546, 'endline': 626, 'name': 'forward', 'classname': 'RelPartialLearnableMultiHeadAttn', 'closures': []}]}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 783, 'endline': 844, 'name': 'AdaptiveEmbedding', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 784, 'endline': 812, 'name': '__init__', 'classname': 'AdaptiveEmbedding', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 814, 'endline': 844, 'name': 'forward', 'classname': 'AdaptiveEmbedding', 'closures': []}]}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 1258, 'endline': 1368, 'name': 'TransfoXLLMHeadModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 1294, 'endline': 1307, 'name': '__init__', 'classname': 'TransfoXLLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 14, 'col_offset': 4, 'lineno': 1309, 'endline': 1334, 'name': 'tie_weights', 'classname': 'TransfoXLLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1336, 'endline': 1337, 'name': 'reset_length', 'classname': 'TransfoXLLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1339, 'endline': 1340, 'name': 'init_mems', 'classname': 'TransfoXLLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 1342, 'endline': 1368, 'name': 'forward', 'classname': 'TransfoXLLMHeadModel', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 1342, 'endline': 1368, 'name': 'forward', 'classname': 'TransfoXLLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 814, 'endline': 844, 'name': 'forward', 'classname': 'AdaptiveEmbedding', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 784, 'endline': 812, 'name': '__init__', 'classname': 'AdaptiveEmbedding', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 1089, 'endline': 1110, 'name': '_update_mems', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 178, 'endline': 312, 'name': 'TransfoXLConfig', 'methods': [{'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 215, 'endline': 287, 'name': '__init__', 'classname': 'TransfoXLConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 291, 'endline': 292, 'name': 'max_position_embeddings', 'classname': 'TransfoXLConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 295, 'endline': 296, 'name': 'vocab_size', 'classname': 'TransfoXLConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 299, 'endline': 300, 'name': 'vocab_size', 'classname': 'TransfoXLConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 303, 'endline': 304, 'name': 'hidden_size', 'classname': 'TransfoXLConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 307, 'endline': 308, 'name': 'num_attention_heads', 'classname': 'TransfoXLConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 311, 'endline': 312, 'name': 'num_hidden_layers', 'classname': 'TransfoXLConfig', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 315, 'endline': 331, 'name': 'PositionalEmbedding', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 316, 'endline': 322, 'name': '__init__', 'classname': 'PositionalEmbedding', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 324, 'endline': 331, 'name': 'forward', 'classname': 'PositionalEmbedding', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 335, 'endline': 368, 'name': 'PositionwiseFF', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 336, 'endline': 352, 'name': '__init__', 'classname': 'PositionwiseFF', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 354, 'endline': 368, 'name': 'forward', 'classname': 'PositionwiseFF', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 373, 'endline': 401, 'name': '__init__', 'classname': 'MultiHeadAttn', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 461, 'endline': 538, 'name': 'RelMultiHeadAttn', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 462, 'endline': 490, 'name': '__init__', 'classname': 'RelMultiHeadAttn', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 492, 'endline': 501, 'name': '_parallelogram_mask', 'classname': 'RelMultiHeadAttn', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 503, 'endline': 519, 'name': '_shift', 'classname': 'RelMultiHeadAttn', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 521, 'endline': 535, 'name': '_rel_shift', 'classname': 'RelMultiHeadAttn', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 537, 'endline': 538, 'name': 'forward', 'classname': 'RelMultiHeadAttn', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 462, 'endline': 490, 'name': '__init__', 'classname': 'RelMultiHeadAttn', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 503, 'endline': 519, 'name': '_shift', 'classname': 'RelMultiHeadAttn', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 856, 'endline': 860, 'name': '_init_weight', 'classname': 'TransfoXLPreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 1076, 'endline': 1087, 'name': 'init_mems', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 324, 'endline': 331, 'name': 'forward', 'classname': 'PositionalEmbedding', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 354, 'endline': 368, 'name': 'forward', 'classname': 'PositionwiseFF', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 492, 'endline': 501, 'name': '_parallelogram_mask', 'classname': 'RelMultiHeadAttn', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 521, 'endline': 535, 'name': '_rel_shift', 'classname': 'RelMultiHeadAttn', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 721, 'endline': 737, 'name': 'DecoderLayer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 722, 'endline': 727, 'name': '__init__', 'classname': 'DecoderLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 729, 'endline': 737, 'name': 'forward', 'classname': 'DecoderLayer', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 739, 'endline': 758, 'name': 'RelLearnableDecoderLayer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 740, 'endline': 747, 'name': '__init__', 'classname': 'RelLearnableDecoderLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 749, 'endline': 758, 'name': 'forward', 'classname': 'RelLearnableDecoderLayer', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 760, 'endline': 779, 'name': 'RelPartialLearnableDecoderLayer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 761, 'endline': 768, 'name': '__init__', 'classname': 'RelPartialLearnableDecoderLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 770, 'endline': 779, 'name': 'forward', 'classname': 'RelPartialLearnableDecoderLayer', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 1243, 'endline': 1252, 'name': 'forward', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 1294, 'endline': 1307, 'name': '__init__', 'classname': 'TransfoXLLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 291, 'endline': 292, 'name': 'max_position_embeddings', 'classname': 'TransfoXLConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 295, 'endline': 296, 'name': 'vocab_size', 'classname': 'TransfoXLConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 299, 'endline': 300, 'name': 'vocab_size', 'classname': 'TransfoXLConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 303, 'endline': 304, 'name': 'hidden_size', 'classname': 'TransfoXLConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 307, 'endline': 308, 'name': 'num_attention_heads', 'classname': 'TransfoXLConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 311, 'endline': 312, 'name': 'num_hidden_layers', 'classname': 'TransfoXLConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 316, 'endline': 322, 'name': '__init__', 'classname': 'PositionalEmbedding', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 336, 'endline': 352, 'name': '__init__', 'classname': 'PositionwiseFF', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 537, 'endline': 538, 'name': 'forward', 'classname': 'RelMultiHeadAttn', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 541, 'endline': 544, 'name': '__init__', 'classname': 'RelPartialLearnableMultiHeadAttn', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 629, 'endline': 630, 'name': '__init__', 'classname': 'RelLearnableMultiHeadAttn', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 722, 'endline': 727, 'name': '__init__', 'classname': 'DecoderLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 729, 'endline': 737, 'name': 'forward', 'classname': 'DecoderLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 740, 'endline': 747, 'name': '__init__', 'classname': 'RelLearnableDecoderLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 749, 'endline': 758, 'name': 'forward', 'classname': 'RelLearnableDecoderLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 761, 'endline': 768, 'name': '__init__', 'classname': 'RelPartialLearnableDecoderLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 770, 'endline': 779, 'name': 'forward', 'classname': 'RelPartialLearnableDecoderLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 862, 'endline': 863, 'name': '_init_bias', 'classname': 'TransfoXLPreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 906, 'endline': 907, 'name': 'set_num_special_tokens', 'classname': 'TransfoXLPreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1061, 'endline': 1062, 'name': '_resize_token_embeddings', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1064, 'endline': 1065, 'name': 'backward_compatible', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1067, 'endline': 1070, 'name': 'reset_length', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1072, 'endline': 1074, 'name': '_prune_heads', 'classname': 'TransfoXLModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1336, 'endline': 1337, 'name': 'reset_length', 'classname': 'TransfoXLLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1339, 'endline': 1340, 'name': 'init_mems', 'classname': 'TransfoXLLMHeadModel', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_transfo_xl_utilities.py': [{'type': 'method', 'rank': 'C', 'complexity': 19, 'col_offset': 4, 'lineno': 92, 'endline': 195, 'name': 'forward', 'classname': 'ProjectedAdaptiveLogSoftmax', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 9, 'col_offset': 0, 'lineno': 31, 'endline': 257, 'name': 'ProjectedAdaptiveLogSoftmax', 'methods': [{'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 32, 'endline': 76, 'name': '__init__', 'classname': 'ProjectedAdaptiveLogSoftmax', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 78, 'endline': 90, 'name': '_compute_logit', 'classname': 'ProjectedAdaptiveLogSoftmax', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 19, 'col_offset': 4, 'lineno': 92, 'endline': 195, 'name': 'forward', 'classname': 'ProjectedAdaptiveLogSoftmax', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 198, 'endline': 257, 'name': 'log_prob', 'classname': 'ProjectedAdaptiveLogSoftmax', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 198, 'endline': 257, 'name': 'log_prob', 'classname': 'ProjectedAdaptiveLogSoftmax', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 32, 'endline': 76, 'name': '__init__', 'classname': 'ProjectedAdaptiveLogSoftmax', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 78, 'endline': 90, 'name': '_compute_logit', 'classname': 'ProjectedAdaptiveLogSoftmax', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 260, 'endline': 299, 'name': 'LogUniformSampler', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 261, 'endline': 278, 'name': '__init__', 'classname': 'LogUniformSampler', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 280, 'endline': 299, 'name': 'sample', 'classname': 'LogUniformSampler', 'closures': []}]}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 301, 'endline': 332, 'name': 'sample_logits', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 261, 'endline': 278, 'name': '__init__', 'classname': 'LogUniformSampler', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 280, 'endline': 299, 'name': 'sample', 'classname': 'LogUniformSampler', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_utils.py': [{'type': 'method', 'rank': 'D', 'complexity': 29, 'col_offset': 4, 'lineno': 414, 'endline': 606, 'name': 'from_pretrained', 'classname': 'PreTrainedModel', 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 4, 'col_offset': 8, 'lineno': 569, 'endline': 575, 'name': 'load', 'closures': []}]}, {'type': 'method', 'rank': 'C', 'complexity': 14, 'col_offset': 4, 'lineno': 857, 'endline': 885, 'name': '__init__', 'classname': 'SequenceSummary', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 12, 'col_offset': 4, 'lineno': 121, 'endline': 220, 'name': 'from_pretrained', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'class', 'rank': 'C', 'complexity': 12, 'col_offset': 0, 'lineno': 842, 'endline': 916, 'name': 'SequenceSummary', 'methods': [{'type': 'method', 'rank': 'C', 'complexity': 14, 'col_offset': 4, 'lineno': 857, 'endline': 885, 'name': '__init__', 'classname': 'SequenceSummary', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 887, 'endline': 916, 'name': 'forward', 'classname': 'SequenceSummary', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 782, 'endline': 839, 'name': 'forward', 'classname': 'SQuADHead', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 7, 'col_offset': 0, 'lineno': 258, 'endline': 606, 'name': 'PreTrainedModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 280, 'endline': 290, 'name': '__init__', 'classname': 'PreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 292, 'endline': 324, 'name': '_get_resized_embeddings', 'classname': 'PreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 326, 'endline': 339, 'name': '_tie_or_clone_weights', 'classname': 'PreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 342, 'endline': 368, 'name': 'resize_token_embeddings', 'classname': 'PreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 370, 'endline': 377, 'name': 'init_weights', 'classname': 'PreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 379, 'endline': 394, 'name': 'prune_heads', 'classname': 'PreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 396, 'endline': 411, 'name': 'save_pretrained', 'classname': 'PreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'D', 'complexity': 29, 'col_offset': 4, 'lineno': 414, 'endline': 606, 'name': 'from_pretrained', 'classname': 'PreTrainedModel', 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 4, 'col_offset': 8, 'lineno': 569, 'endline': 575, 'name': 'load', 'closures': []}]}]}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 887, 'endline': 916, 'name': 'forward', 'classname': 'SequenceSummary', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 733, 'endline': 839, 'name': 'SQuADHead', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 773, 'endline': 780, 'name': '__init__', 'classname': 'SQuADHead', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 782, 'endline': 839, 'name': 'forward', 'classname': 'SQuADHead', 'closures': []}]}, {'type': 'function', 'rank': 'A', 'complexity': 5, 'col_offset': 0, 'lineno': 968, 'endline': 978, 'name': 'prune_layer', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 919, 'endline': 941, 'name': 'prune_linear_layer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 326, 'endline': 339, 'name': '_tie_or_clone_weights', 'classname': 'PreTrainedModel', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 648, 'endline': 686, 'name': 'PoolerEndLogits', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 651, 'endline': 656, 'name': '__init__', 'classname': 'PoolerEndLogits', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 658, 'endline': 686, 'name': 'forward', 'classname': 'PoolerEndLogits', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 658, 'endline': 686, 'name': 'forward', 'classname': 'PoolerEndLogits', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 689, 'endline': 730, 'name': 'PoolerAnswerClass', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 691, 'endline': 695, 'name': '__init__', 'classname': 'PoolerAnswerClass', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 697, 'endline': 730, 'name': 'forward', 'classname': 'PoolerAnswerClass', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 697, 'endline': 730, 'name': 'forward', 'classname': 'PoolerAnswerClass', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 81, 'endline': 255, 'name': 'PretrainedConfig', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 101, 'endline': 107, 'name': '__init__', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 109, 'endline': 118, 'name': 'save_pretrained', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 12, 'col_offset': 4, 'lineno': 121, 'endline': 220, 'name': 'from_pretrained', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 223, 'endline': 228, 'name': 'from_dict', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 231, 'endline': 235, 'name': 'from_json_file', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 237, 'endline': 238, 'name': '__eq__', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 240, 'endline': 241, 'name': '__repr__', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 243, 'endline': 246, 'name': 'to_dict', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 248, 'endline': 250, 'name': 'to_json_string', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 252, 'endline': 255, 'name': 'to_json_file', 'classname': 'PretrainedConfig', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 292, 'endline': 324, 'name': '_get_resized_embeddings', 'classname': 'PreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 342, 'endline': 368, 'name': 'resize_token_embeddings', 'classname': 'PreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 396, 'endline': 411, 'name': 'save_pretrained', 'classname': 'PreTrainedModel', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 628, 'endline': 645, 'name': 'PoolerStartLogits', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 630, 'endline': 632, 'name': '__init__', 'classname': 'PoolerStartLogits', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 634, 'endline': 645, 'name': 'forward', 'classname': 'PoolerStartLogits', 'closures': []}]}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 944, 'endline': 965, 'name': 'prune_conv1d_layer', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 46, 'endline': 53, 'name': 'Identity', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 8, 'lineno': 49, 'endline': 50, 'name': '__init__', 'classname': 'Identity', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 8, 'lineno': 52, 'endline': 53, 'name': 'forward', 'classname': 'Identity', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 109, 'endline': 118, 'name': 'save_pretrained', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 223, 'endline': 228, 'name': 'from_dict', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 280, 'endline': 290, 'name': '__init__', 'classname': 'PreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 370, 'endline': 377, 'name': 'init_weights', 'classname': 'PreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 379, 'endline': 394, 'name': 'prune_heads', 'classname': 'PreTrainedModel', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 609, 'endline': 625, 'name': 'Conv1D', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 610, 'endline': 619, 'name': '__init__', 'classname': 'Conv1D', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 621, 'endline': 625, 'name': 'forward', 'classname': 'Conv1D', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 634, 'endline': 645, 'name': 'forward', 'classname': 'PoolerStartLogits', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 57, 'endline': 61, 'name': 'add_start_docstrings', 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 8, 'lineno': 58, 'endline': 60, 'name': 'docstring_decorator', 'closures': []}]}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 63, 'endline': 67, 'name': 'add_end_docstrings', 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 8, 'lineno': 64, 'endline': 66, 'name': 'docstring_decorator', 'closures': []}]}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 70, 'endline': 73, 'name': 'add_start_docstrings', 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 8, 'lineno': 71, 'endline': 72, 'name': 'docstring_decorator', 'closures': []}]}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 75, 'endline': 78, 'name': 'add_end_docstrings', 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 8, 'lineno': 76, 'endline': 77, 'name': 'docstring_decorator', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 8, 'lineno': 49, 'endline': 50, 'name': '__init__', 'classname': 'Identity', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 8, 'lineno': 52, 'endline': 53, 'name': 'forward', 'classname': 'Identity', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 101, 'endline': 107, 'name': '__init__', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 231, 'endline': 235, 'name': 'from_json_file', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 237, 'endline': 238, 'name': '__eq__', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 240, 'endline': 241, 'name': '__repr__', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 243, 'endline': 246, 'name': 'to_dict', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 248, 'endline': 250, 'name': 'to_json_string', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 252, 'endline': 255, 'name': 'to_json_file', 'classname': 'PretrainedConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 610, 'endline': 619, 'name': '__init__', 'classname': 'Conv1D', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 621, 'endline': 625, 'name': 'forward', 'classname': 'Conv1D', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 630, 'endline': 632, 'name': '__init__', 'classname': 'PoolerStartLogits', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 651, 'endline': 656, 'name': '__init__', 'classname': 'PoolerEndLogits', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 691, 'endline': 695, 'name': '__init__', 'classname': 'PoolerAnswerClass', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 773, 'endline': 780, 'name': '__init__', 'classname': 'SQuADHead', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_xlm.py': [{'type': 'method', 'rank': 'D', 'complexity': 23, 'col_offset': 4, 'lineno': 587, 'endline': 701, 'name': 'forward', 'classname': 'XLMModel', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 12, 'col_offset': 4, 'lineno': 297, 'endline': 358, 'name': 'forward', 'classname': 'MultiHeadAttention', 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 8, 'lineno': 313, 'endline': 315, 'name': 'shape', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 8, 'lineno': 317, 'endline': 319, 'name': 'unshape', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 10, 'col_offset': 4, 'lineno': 390, 'endline': 402, 'name': '_init_weights', 'classname': 'XLMPreTrainedModel', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 10, 'col_offset': 0, 'lineno': 478, 'endline': 701, 'name': 'XLMModel', 'methods': [{'type': 'method', 'rank': 'B', 'complexity': 10, 'col_offset': 4, 'lineno': 505, 'endline': 573, 'name': '__init__', 'classname': 'XLMModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 575, 'endline': 577, 'name': '_resize_token_embeddings', 'classname': 'XLMModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 579, 'endline': 585, 'name': '_prune_heads', 'classname': 'XLMModel', 'closures': []}, {'type': 'method', 'rank': 'D', 'complexity': 23, 'col_offset': 4, 'lineno': 587, 'endline': 701, 'name': 'forward', 'classname': 'XLMModel', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 10, 'col_offset': 4, 'lineno': 505, 'endline': 573, 'name': '__init__', 'classname': 'XLMModel', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 7, 'col_offset': 0, 'lineno': 257, 'endline': 358, 'name': 'MultiHeadAttention', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 261, 'endline': 274, 'name': '__init__', 'classname': 'MultiHeadAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 276, 'endline': 295, 'name': 'prune_heads', 'classname': 'MultiHeadAttention', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 12, 'col_offset': 4, 'lineno': 297, 'endline': 358, 'name': 'forward', 'classname': 'MultiHeadAttention', 'closures': [{'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 8, 'lineno': 313, 'endline': 315, 'name': 'shape', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 8, 'lineno': 317, 'endline': 319, 'name': 'unshape', 'closures': []}]}]}, {'type': 'class', 'rank': 'B', 'complexity': 7, 'col_offset': 0, 'lineno': 378, 'endline': 402, 'name': 'XLMPreTrainedModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 387, 'endline': 388, 'name': '__init__', 'classname': 'XLMPreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 10, 'col_offset': 4, 'lineno': 390, 'endline': 402, 'name': '_init_weights', 'classname': 'XLMPreTrainedModel', 'closures': []}]}, {'type': 'function', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 232, 'endline': 254, 'name': 'get_masks', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 109, 'endline': 186, 'name': '__init__', 'classname': 'XLMConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 276, 'endline': 295, 'name': 'prune_heads', 'classname': 'MultiHeadAttention', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 704, 'endline': 743, 'name': 'XLMPredLayer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 708, 'endline': 723, 'name': '__init__', 'classname': 'XLMPredLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 726, 'endline': 743, 'name': 'forward', 'classname': 'XLMPredLayer', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 726, 'endline': 743, 'name': 'forward', 'classname': 'XLMPredLayer', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 210, 'endline': 218, 'name': 'create_sinusoidal_embeddings', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 64, 'endline': 207, 'name': 'XLMConfig', 'methods': [{'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 109, 'endline': 186, 'name': '__init__', 'classname': 'XLMConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 190, 'endline': 191, 'name': 'vocab_size', 'classname': 'XLMConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 194, 'endline': 195, 'name': 'vocab_size', 'classname': 'XLMConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 198, 'endline': 199, 'name': 'hidden_size', 'classname': 'XLMConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 202, 'endline': 203, 'name': 'num_attention_heads', 'classname': 'XLMConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 206, 'endline': 207, 'name': 'num_hidden_layers', 'classname': 'XLMConfig', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 361, 'endline': 375, 'name': 'TransformerFFN', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 363, 'endline': 368, 'name': '__init__', 'classname': 'TransformerFFN', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 370, 'endline': 375, 'name': 'forward', 'classname': 'TransformerFFN', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 809, 'endline': 870, 'name': 'XLMForSequenceClassification', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 840, 'endline': 847, 'name': '__init__', 'classname': 'XLMForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 849, 'endline': 870, 'name': 'forward', 'classname': 'XLMForSequenceClassification', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 849, 'endline': 870, 'name': 'forward', 'classname': 'XLMForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 261, 'endline': 274, 'name': '__init__', 'classname': 'MultiHeadAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 363, 'endline': 368, 'name': '__init__', 'classname': 'TransformerFFN', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 579, 'endline': 585, 'name': '_prune_heads', 'classname': 'XLMModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 708, 'endline': 723, 'name': '__init__', 'classname': 'XLMPredLayer', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 749, 'endline': 803, 'name': 'XLMWithLMHeadModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 780, 'endline': 786, 'name': '__init__', 'classname': 'XLMWithLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 788, 'endline': 791, 'name': 'tie_weights', 'classname': 'XLMWithLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 793, 'endline': 803, 'name': 'forward', 'classname': 'XLMWithLMHeadModel', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 876, 'endline': 941, 'name': 'XLMForQuestionAnswering', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 919, 'endline': 925, 'name': '__init__', 'classname': 'XLMForQuestionAnswering', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 927, 'endline': 941, 'name': 'forward', 'classname': 'XLMForQuestionAnswering', 'closures': []}]}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 221, 'endline': 229, 'name': 'gelu', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 190, 'endline': 191, 'name': 'vocab_size', 'classname': 'XLMConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 194, 'endline': 195, 'name': 'vocab_size', 'classname': 'XLMConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 198, 'endline': 199, 'name': 'hidden_size', 'classname': 'XLMConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 202, 'endline': 203, 'name': 'num_attention_heads', 'classname': 'XLMConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 206, 'endline': 207, 'name': 'num_hidden_layers', 'classname': 'XLMConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 370, 'endline': 375, 'name': 'forward', 'classname': 'TransformerFFN', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 387, 'endline': 388, 'name': '__init__', 'classname': 'XLMPreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 575, 'endline': 577, 'name': '_resize_token_embeddings', 'classname': 'XLMModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 780, 'endline': 786, 'name': '__init__', 'classname': 'XLMWithLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 788, 'endline': 791, 'name': 'tie_weights', 'classname': 'XLMWithLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 793, 'endline': 803, 'name': 'forward', 'classname': 'XLMWithLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 840, 'endline': 847, 'name': '__init__', 'classname': 'XLMForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 919, 'endline': 925, 'name': '__init__', 'classname': 'XLMForQuestionAnswering', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 927, 'endline': 941, 'name': 'forward', 'classname': 'XLMForQuestionAnswering', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_xlnet.py': [{'type': 'method', 'rank': 'F', 'complexity': 43, 'col_offset': 4, 'lineno': 840, 'endline': 982, 'name': 'forward', 'classname': 'XLNetModel', 'closures': []}, {'type': 'function', 'rank': 'C', 'complexity': 16, 'col_offset': 0, 'lineno': 119, 'endline': 176, 'name': 'load_tf_weights_in_xlnet', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 13, 'col_offset': 4, 'lineno': 441, 'endline': 532, 'name': 'forward', 'classname': 'XLNetRelativeAttention', 'closures': []}, {'type': 'function', 'rank': 'C', 'complexity': 11, 'col_offset': 0, 'lineno': 49, 'endline': 117, 'name': 'build_tf_xlnet_to_pytorch_map', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 9, 'col_offset': 0, 'lineno': 580, 'endline': 607, 'name': 'XLNetPreTrainedModel', 'methods': [{'type': 'method', 'rank': 'B', 'complexity': 8, 'col_offset': 4, 'lineno': 589, 'endline': 607, 'name': '_init_weights', 'classname': 'XLNetPreTrainedModel', 'closures': []}]}, {'type': 'class', 'rank': 'B', 'complexity': 9, 'col_offset': 0, 'lineno': 690, 'endline': 982, 'name': 'XLNetModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 717, 'endline': 736, 'name': '__init__', 'classname': 'XLNetModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 738, 'endline': 740, 'name': '_resize_token_embeddings', 'classname': 'XLNetModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 742, 'endline': 743, 'name': '_prune_heads', 'classname': 'XLNetModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 745, 'endline': 773, 'name': 'create_mask', 'classname': 'XLNetModel', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 775, 'endline': 788, 'name': 'cache_mem', 'classname': 'XLNetModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 791, 'endline': 799, 'name': 'positional_embedding', 'classname': 'XLNetModel', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 801, 'endline': 838, 'name': 'relative_positional_encoding', 'classname': 'XLNetModel', 'closures': []}, {'type': 'method', 'rank': 'F', 'complexity': 43, 'col_offset': 4, 'lineno': 840, 'endline': 982, 'name': 'forward', 'classname': 'XLNetModel', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 1218, 'endline': 1282, 'name': 'forward', 'classname': 'XLNetForQuestionAnswering', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 8, 'col_offset': 4, 'lineno': 589, 'endline': 607, 'name': '_init_weights', 'classname': 'XLNetPreTrainedModel', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 238, 'endline': 308, 'name': '__init__', 'classname': 'XLNetConfig', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 801, 'endline': 838, 'name': 'relative_positional_encoding', 'classname': 'XLNetModel', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 387, 'endline': 427, 'name': 'rel_attn_core', 'classname': 'XLNetRelativeAttention', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 775, 'endline': 788, 'name': 'cache_mem', 'classname': 'XLNetModel', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 1146, 'endline': 1282, 'name': 'XLNetForQuestionAnswering', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1206, 'endline': 1216, 'name': '__init__', 'classname': 'XLNetForQuestionAnswering', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 1218, 'endline': 1282, 'name': 'forward', 'classname': 'XLNetForQuestionAnswering', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 5, 'col_offset': 0, 'lineno': 342, 'endline': 532, 'name': 'XLNetRelativeAttention', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 343, 'endline': 369, 'name': '__init__', 'classname': 'XLNetRelativeAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 371, 'endline': 372, 'name': 'prune_heads', 'classname': 'XLNetRelativeAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 375, 'endline': 385, 'name': 'rel_shift', 'classname': 'XLNetRelativeAttention', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 387, 'endline': 427, 'name': 'rel_attn_core', 'classname': 'XLNetRelativeAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 429, 'endline': 439, 'name': 'post_attention', 'classname': 'XLNetRelativeAttention', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 13, 'col_offset': 4, 'lineno': 441, 'endline': 532, 'name': 'forward', 'classname': 'XLNetRelativeAttention', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 534, 'endline': 555, 'name': 'XLNetFeedForward', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 535, 'endline': 545, 'name': '__init__', 'classname': 'XLNetFeedForward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 547, 'endline': 555, 'name': 'forward', 'classname': 'XLNetFeedForward', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 535, 'endline': 545, 'name': '__init__', 'classname': 'XLNetFeedForward', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 195, 'endline': 333, 'name': 'XLNetConfig', 'methods': [{'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 238, 'endline': 308, 'name': '__init__', 'classname': 'XLNetConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 312, 'endline': 313, 'name': 'max_position_embeddings', 'classname': 'XLNetConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 316, 'endline': 317, 'name': 'vocab_size', 'classname': 'XLNetConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 320, 'endline': 321, 'name': 'vocab_size', 'classname': 'XLNetConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 324, 'endline': 325, 'name': 'hidden_size', 'classname': 'XLNetConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 328, 'endline': 329, 'name': 'num_attention_heads', 'classname': 'XLNetConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 332, 'endline': 333, 'name': 'num_hidden_layers', 'classname': 'XLNetConfig', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 557, 'endline': 577, 'name': 'XLNetLayer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 558, 'endline': 562, 'name': '__init__', 'classname': 'XLNetLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 564, 'endline': 577, 'name': 'forward', 'classname': 'XLNetLayer', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 1070, 'endline': 1140, 'name': 'XLNetForSequenceClassification', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1106, 'endline': 1114, 'name': '__init__', 'classname': 'XLNetForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 1116, 'endline': 1140, 'name': 'forward', 'classname': 'XLNetForSequenceClassification', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 1116, 'endline': 1140, 'name': 'forward', 'classname': 'XLNetForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 343, 'endline': 369, 'name': '__init__', 'classname': 'XLNetRelativeAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 429, 'endline': 439, 'name': 'post_attention', 'classname': 'XLNetRelativeAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 564, 'endline': 577, 'name': 'forward', 'classname': 'XLNetLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 717, 'endline': 736, 'name': '__init__', 'classname': 'XLNetModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 745, 'endline': 773, 'name': 'create_mask', 'classname': 'XLNetModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 791, 'endline': 799, 'name': 'positional_embedding', 'classname': 'XLNetModel', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 988, 'endline': 1064, 'name': 'XLNetLMHeadModel', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1029, 'endline': 1038, 'name': '__init__', 'classname': 'XLNetLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1040, 'endline': 1043, 'name': 'tie_weights', 'classname': 'XLNetLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 1045, 'endline': 1064, 'name': 'forward', 'classname': 'XLNetLMHeadModel', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 1045, 'endline': 1064, 'name': 'forward', 'classname': 'XLNetLMHeadModel', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 179, 'endline': 185, 'name': 'gelu', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 188, 'endline': 189, 'name': 'swish', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 312, 'endline': 313, 'name': 'max_position_embeddings', 'classname': 'XLNetConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 316, 'endline': 317, 'name': 'vocab_size', 'classname': 'XLNetConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 320, 'endline': 321, 'name': 'vocab_size', 'classname': 'XLNetConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 324, 'endline': 325, 'name': 'hidden_size', 'classname': 'XLNetConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 328, 'endline': 329, 'name': 'num_attention_heads', 'classname': 'XLNetConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 332, 'endline': 333, 'name': 'num_hidden_layers', 'classname': 'XLNetConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 371, 'endline': 372, 'name': 'prune_heads', 'classname': 'XLNetRelativeAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 375, 'endline': 385, 'name': 'rel_shift', 'classname': 'XLNetRelativeAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 547, 'endline': 555, 'name': 'forward', 'classname': 'XLNetFeedForward', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 558, 'endline': 562, 'name': '__init__', 'classname': 'XLNetLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 738, 'endline': 740, 'name': '_resize_token_embeddings', 'classname': 'XLNetModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 742, 'endline': 743, 'name': '_prune_heads', 'classname': 'XLNetModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1029, 'endline': 1038, 'name': '__init__', 'classname': 'XLNetLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1040, 'endline': 1043, 'name': 'tie_weights', 'classname': 'XLNetLMHeadModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1106, 'endline': 1114, 'name': '__init__', 'classname': 'XLNetForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 1206, 'endline': 1216, 'name': '__init__', 'classname': 'XLNetForQuestionAnswering', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\optimization.py': [{'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 130, 'endline': 189, 'name': 'step', 'classname': 'AdamW', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 8, 'col_offset': 0, 'lineno': 107, 'endline': 189, 'name': 'AdamW', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 117, 'endline': 128, 'name': '__init__', 'classname': 'AdamW', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 130, 'endline': 189, 'name': 'step', 'classname': 'AdamW', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 117, 'endline': 128, 'name': '__init__', 'classname': 'AdamW', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 33, 'endline': 45, 'name': 'WarmupConstantSchedule', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 38, 'endline': 40, 'name': '__init__', 'classname': 'WarmupConstantSchedule', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 42, 'endline': 45, 'name': 'lr_lambda', 'classname': 'WarmupConstantSchedule', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 48, 'endline': 61, 'name': 'WarmupLinearSchedule', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 53, 'endline': 56, 'name': '__init__', 'classname': 'WarmupLinearSchedule', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 58, 'endline': 61, 'name': 'lr_lambda', 'classname': 'WarmupLinearSchedule', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 64, 'endline': 81, 'name': 'WarmupCosineSchedule', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 70, 'endline': 74, 'name': '__init__', 'classname': 'WarmupCosineSchedule', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 76, 'endline': 81, 'name': 'lr_lambda', 'classname': 'WarmupCosineSchedule', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 84, 'endline': 103, 'name': 'WarmupCosineWithHardRestartsSchedule', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 90, 'endline': 94, 'name': '__init__', 'classname': 'WarmupCosineWithHardRestartsSchedule', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 96, 'endline': 103, 'name': 'lr_lambda', 'classname': 'WarmupCosineWithHardRestartsSchedule', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 96, 'endline': 103, 'name': 'lr_lambda', 'classname': 'WarmupCosineWithHardRestartsSchedule', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 26, 'endline': 30, 'name': 'ConstantLRSchedule', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 29, 'endline': 30, 'name': '__init__', 'classname': 'ConstantLRSchedule', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 42, 'endline': 45, 'name': 'lr_lambda', 'classname': 'WarmupConstantSchedule', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 58, 'endline': 61, 'name': 'lr_lambda', 'classname': 'WarmupLinearSchedule', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 76, 'endline': 81, 'name': 'lr_lambda', 'classname': 'WarmupCosineSchedule', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 29, 'endline': 30, 'name': '__init__', 'classname': 'ConstantLRSchedule', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 38, 'endline': 40, 'name': '__init__', 'classname': 'WarmupConstantSchedule', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 53, 'endline': 56, 'name': '__init__', 'classname': 'WarmupLinearSchedule', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 70, 'endline': 74, 'name': '__init__', 'classname': 'WarmupCosineSchedule', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 90, 'endline': 94, 'name': '__init__', 'classname': 'WarmupCosineWithHardRestartsSchedule', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_auto.py': [{'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 59, 'endline': 120, 'name': 'from_pretrained', 'classname': 'AutoTokenizer', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 32, 'endline': 120, 'name': 'AutoTokenizer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 54, 'endline': 55, 'name': '__init__', 'classname': 'AutoTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 59, 'endline': 120, 'name': 'from_pretrained', 'classname': 'AutoTokenizer', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 54, 'endline': 55, 'name': '__init__', 'classname': 'AutoTokenizer', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_bert.py': [{'type': 'method', 'rank': 'C', 'complexity': 17, 'col_offset': 4, 'lineno': 324, 'endline': 344, 'name': '_is_chinese_char', 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'function', 'rank': 'B', 'complexity': 10, 'col_offset': 0, 'lineno': 444, 'endline': 457, 'name': '_is_punctuation', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 368, 'endline': 417, 'name': 'tokenize', 'classname': 'WordpieceTokenizer', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 7, 'col_offset': 0, 'lineno': 224, 'endline': 357, 'name': 'BasicTokenizer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 227, 'endline': 245, 'name': '__init__', 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 247, 'endline': 276, 'name': 'tokenize', 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 278, 'endline': 287, 'name': '_run_strip_accents', 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 289, 'endline': 309, 'name': '_run_split_on_punc', 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 311, 'endline': 322, 'name': '_tokenize_chinese_chars', 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 17, 'col_offset': 4, 'lineno': 324, 'endline': 344, 'name': '_is_chinese_char', 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 346, 'endline': 357, 'name': '_clean_text', 'classname': 'BasicTokenizer', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 289, 'endline': 309, 'name': '_run_split_on_punc', 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'function', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 420, 'endline': 429, 'name': '_is_whitespace', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 247, 'endline': 276, 'name': 'tokenize', 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 346, 'endline': 357, 'name': '_clean_text', 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 6, 'col_offset': 0, 'lineno': 360, 'endline': 417, 'name': 'WordpieceTokenizer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 363, 'endline': 366, 'name': '__init__', 'classname': 'WordpieceTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 368, 'endline': 417, 'name': 'tokenize', 'classname': 'WordpieceTokenizer', 'closures': []}]}, {'type': 'function', 'rank': 'A', 'complexity': 5, 'col_offset': 0, 'lineno': 432, 'endline': 441, 'name': '_is_control', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 123, 'endline': 161, 'name': '__init__', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 167, 'endline': 175, 'name': '_tokenize', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 206, 'endline': 221, 'name': 'save_vocabulary', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 103, 'endline': 221, 'name': 'BertTokenizer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 123, 'endline': 161, 'name': '__init__', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 164, 'endline': 165, 'name': 'vocab_size', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 167, 'endline': 175, 'name': '_tokenize', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 177, 'endline': 179, 'name': '_convert_token_to_id', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 181, 'endline': 183, 'name': '_convert_id_to_token', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 185, 'endline': 188, 'name': 'convert_tokens_to_string', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 190, 'endline': 195, 'name': 'add_special_tokens_single_sentence', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 197, 'endline': 204, 'name': 'add_special_tokens_sentences_pair', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 206, 'endline': 221, 'name': 'save_vocabulary', 'classname': 'BertTokenizer', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 278, 'endline': 287, 'name': '_run_strip_accents', 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 311, 'endline': 322, 'name': '_tokenize_chinese_chars', 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 83, 'endline': 91, 'name': 'load_vocab', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 94, 'endline': 100, 'name': 'whitespace_tokenize', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 227, 'endline': 245, 'name': '__init__', 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 164, 'endline': 165, 'name': 'vocab_size', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 177, 'endline': 179, 'name': '_convert_token_to_id', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 181, 'endline': 183, 'name': '_convert_id_to_token', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 185, 'endline': 188, 'name': 'convert_tokens_to_string', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 190, 'endline': 195, 'name': 'add_special_tokens_single_sentence', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 197, 'endline': 204, 'name': 'add_special_tokens_sentences_pair', 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 363, 'endline': 366, 'name': '__init__', 'classname': 'WordpieceTokenizer', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_distilbert.py': [{'type': 'class', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 45, 'endline': 62, 'name': 'DistilBertTokenizer', 'methods': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_gpt2.py': [{'type': 'method', 'rank': 'C', 'complexity': 11, 'col_offset': 4, 'lineno': 135, 'endline': 174, 'name': 'bpe', 'classname': 'GPT2Tokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 176, 'endline': 186, 'name': '_tokenize', 'classname': 'GPT2Tokenizer', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 5, 'col_offset': 0, 'lineno': 65, 'endline': 86, 'name': 'bytes_to_unicode', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 100, 'endline': 224, 'name': 'GPT2Tokenizer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 112, 'endline': 129, 'name': '__init__', 'classname': 'GPT2Tokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 132, 'endline': 133, 'name': 'vocab_size', 'classname': 'GPT2Tokenizer', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 11, 'col_offset': 4, 'lineno': 135, 'endline': 174, 'name': 'bpe', 'classname': 'GPT2Tokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 176, 'endline': 186, 'name': '_tokenize', 'classname': 'GPT2Tokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 188, 'endline': 190, 'name': '_convert_token_to_id', 'classname': 'GPT2Tokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 192, 'endline': 194, 'name': '_convert_id_to_token', 'classname': 'GPT2Tokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 196, 'endline': 200, 'name': 'convert_tokens_to_string', 'classname': 'GPT2Tokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 202, 'endline': 224, 'name': 'save_vocabulary', 'classname': 'GPT2Tokenizer', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 112, 'endline': 129, 'name': '__init__', 'classname': 'GPT2Tokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 202, 'endline': 224, 'name': 'save_vocabulary', 'classname': 'GPT2Tokenizer', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 88, 'endline': 98, 'name': 'get_pairs', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 196, 'endline': 200, 'name': 'convert_tokens_to_string', 'classname': 'GPT2Tokenizer', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 31, 'endline': 32, 'name': 'lru_cache', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 132, 'endline': 133, 'name': 'vocab_size', 'classname': 'GPT2Tokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 188, 'endline': 190, 'name': '_convert_token_to_id', 'classname': 'GPT2Tokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 192, 'endline': 194, 'name': '_convert_id_to_token', 'classname': 'GPT2Tokenizer', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_openai.py': [{'type': 'method', 'rank': 'C', 'complexity': 12, 'col_offset': 4, 'lineno': 115, 'endline': 156, 'name': 'bpe', 'classname': 'OpenAIGPTTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 158, 'endline': 171, 'name': '_tokenize', 'classname': 'OpenAIGPTTokenizer', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 77, 'endline': 208, 'name': 'OpenAIGPTTokenizer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 87, 'endline': 109, 'name': '__init__', 'classname': 'OpenAIGPTTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 112, 'endline': 113, 'name': 'vocab_size', 'classname': 'OpenAIGPTTokenizer', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 12, 'col_offset': 4, 'lineno': 115, 'endline': 156, 'name': 'bpe', 'classname': 'OpenAIGPTTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 158, 'endline': 171, 'name': '_tokenize', 'classname': 'OpenAIGPTTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 173, 'endline': 175, 'name': '_convert_token_to_id', 'classname': 'OpenAIGPTTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 177, 'endline': 179, 'name': '_convert_id_to_token', 'classname': 'OpenAIGPTTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 181, 'endline': 184, 'name': 'convert_tokens_to_string', 'classname': 'OpenAIGPTTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 186, 'endline': 208, 'name': 'save_vocabulary', 'classname': 'OpenAIGPTTokenizer', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 87, 'endline': 109, 'name': '__init__', 'classname': 'OpenAIGPTTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 186, 'endline': 208, 'name': 'save_vocabulary', 'classname': 'OpenAIGPTTokenizer', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 50, 'endline': 60, 'name': 'get_pairs', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 62, 'endline': 75, 'name': 'text_standardize', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 112, 'endline': 113, 'name': 'vocab_size', 'classname': 'OpenAIGPTTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 173, 'endline': 175, 'name': '_convert_token_to_id', 'classname': 'OpenAIGPTTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 177, 'endline': 179, 'name': '_convert_id_to_token', 'classname': 'OpenAIGPTTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 181, 'endline': 184, 'name': 'convert_tokens_to_string', 'classname': 'OpenAIGPTTokenizer', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_roberta.py': [{'type': 'class', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 65, 'endline': 98, 'name': 'RobertaTokenizer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 77, 'endline': 82, 'name': '__init__', 'classname': 'RobertaTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 84, 'endline': 89, 'name': 'add_special_tokens_single_sentence', 'classname': 'RobertaTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 91, 'endline': 98, 'name': 'add_special_tokens_sentences_pair', 'classname': 'RobertaTokenizer', 'closures': []}]}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 33, 'endline': 34, 'name': 'lru_cache', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 77, 'endline': 82, 'name': '__init__', 'classname': 'RobertaTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 84, 'endline': 89, 'name': 'add_special_tokens_single_sentence', 'classname': 'RobertaTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 91, 'endline': 98, 'name': 'add_special_tokens_sentences_pair', 'classname': 'RobertaTokenizer', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_transfo_xl.py': [{'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 349, 'endline': 396, 'name': 'stream_iterator', 'classname': 'LMShuffledIterator', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 8, 'col_offset': 4, 'lineno': 172, 'endline': 188, 'name': 'encode_file', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 8, 'col_offset': 4, 'lineno': 441, 'endline': 481, 'name': 'from_pretrained', 'classname': 'TransfoXLCorpus', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 8, 'col_offset': 4, 'lineno': 529, 'endline': 543, 'name': 'get_iterator', 'classname': 'TransfoXLCorpus', 'closures': []}, {'type': 'function', 'rank': 'B', 'complexity': 7, 'col_offset': 0, 'lineno': 546, 'endline': 575, 'name': 'get_lm_corpus', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 69, 'endline': 102, 'name': '__init__', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 104, 'endline': 117, 'name': 'count_file', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 190, 'endline': 201, 'name': 'encode_sents', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'class', 'rank': 'B', 'complexity': 7, 'col_offset': 0, 'lineno': 439, 'endline': 543, 'name': 'TransfoXLCorpus', 'methods': [{'type': 'method', 'rank': 'B', 'complexity': 8, 'col_offset': 4, 'lineno': 441, 'endline': 481, 'name': 'from_pretrained', 'classname': 'TransfoXLCorpus', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 483, 'endline': 488, 'name': '__init__', 'classname': 'TransfoXLCorpus', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 490, 'endline': 527, 'name': 'build_corpus', 'classname': 'TransfoXLCorpus', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 8, 'col_offset': 4, 'lineno': 529, 'endline': 543, 'name': 'get_iterator', 'classname': 'TransfoXLCorpus', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 490, 'endline': 527, 'name': 'build_corpus', 'classname': 'TransfoXLCorpus', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 119, 'endline': 127, 'name': 'count_sents', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 5, 'col_offset': 0, 'lineno': 61, 'endline': 265, 'name': 'TransfoXLTokenizer', 'methods': [{'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 69, 'endline': 102, 'name': '__init__', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 104, 'endline': 117, 'name': 'count_file', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 119, 'endline': 127, 'name': 'count_sents', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 129, 'endline': 142, 'name': '_build_from_file', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 144, 'endline': 149, 'name': 'save_vocabulary', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 151, 'endline': 170, 'name': 'build_vocab', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 8, 'col_offset': 4, 'lineno': 172, 'endline': 188, 'name': 'encode_file', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 190, 'endline': 201, 'name': 'encode_sents', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 203, 'endline': 207, 'name': 'add_special', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 209, 'endline': 212, 'name': 'add_symbol', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 214, 'endline': 217, 'name': '_convert_id_to_token', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 219, 'endline': 234, 'name': '_convert_token_to_id', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 236, 'endline': 239, 'name': 'convert_tokens_to_string', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 241, 'endline': 242, 'name': 'convert_to_tensor', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 245, 'endline': 246, 'name': 'vocab_size', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 248, 'endline': 265, 'name': '_tokenize', 'classname': 'TransfoXLTokenizer', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 151, 'endline': 170, 'name': 'build_vocab', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 219, 'endline': 234, 'name': '_convert_token_to_id', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 5, 'col_offset': 4, 'lineno': 248, 'endline': 265, 'name': '_tokenize', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 5, 'col_offset': 0, 'lineno': 326, 'endline': 403, 'name': 'LMShuffledIterator', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 327, 'endline': 338, 'name': '__init__', 'classname': 'LMShuffledIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 340, 'endline': 347, 'name': 'get_sent_stream', 'classname': 'LMShuffledIterator', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 9, 'col_offset': 4, 'lineno': 349, 'endline': 396, 'name': 'stream_iterator', 'classname': 'LMShuffledIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 398, 'endline': 403, 'name': '__iter__', 'classname': 'LMShuffledIterator', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 129, 'endline': 142, 'name': '_build_from_file', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 310, 'endline': 320, 'name': 'get_varlen_iter', 'classname': 'LMOrderedIterator', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 406, 'endline': 436, 'name': 'LMMultiFileIterator', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 407, 'endline': 418, 'name': '__init__', 'classname': 'LMMultiFileIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 420, 'endline': 426, 'name': 'get_sent_stream', 'classname': 'LMMultiFileIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 428, 'endline': 436, 'name': '__iter__', 'classname': 'LMMultiFileIterator', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 428, 'endline': 436, 'name': '__iter__', 'classname': 'LMMultiFileIterator', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 268, 'endline': 323, 'name': 'LMOrderedIterator', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 269, 'endline': 289, 'name': '__init__', 'classname': 'LMOrderedIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 291, 'endline': 304, 'name': 'get_batch', 'classname': 'LMOrderedIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 306, 'endline': 308, 'name': 'get_fixlen_iter', 'classname': 'LMOrderedIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 310, 'endline': 320, 'name': 'get_varlen_iter', 'classname': 'LMOrderedIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 322, 'endline': 323, 'name': '__iter__', 'classname': 'LMOrderedIterator', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 340, 'endline': 347, 'name': 'get_sent_stream', 'classname': 'LMShuffledIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 144, 'endline': 149, 'name': 'save_vocabulary', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 203, 'endline': 207, 'name': 'add_special', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 209, 'endline': 212, 'name': 'add_symbol', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 214, 'endline': 217, 'name': '_convert_id_to_token', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 269, 'endline': 289, 'name': '__init__', 'classname': 'LMOrderedIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 291, 'endline': 304, 'name': 'get_batch', 'classname': 'LMOrderedIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 306, 'endline': 308, 'name': 'get_fixlen_iter', 'classname': 'LMOrderedIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 327, 'endline': 338, 'name': '__init__', 'classname': 'LMShuffledIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 398, 'endline': 403, 'name': '__iter__', 'classname': 'LMShuffledIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 407, 'endline': 418, 'name': '__init__', 'classname': 'LMMultiFileIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 420, 'endline': 426, 'name': 'get_sent_stream', 'classname': 'LMMultiFileIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 236, 'endline': 239, 'name': 'convert_tokens_to_string', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 241, 'endline': 242, 'name': 'convert_to_tensor', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 245, 'endline': 246, 'name': 'vocab_size', 'classname': 'TransfoXLTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 322, 'endline': 323, 'name': '__iter__', 'classname': 'LMOrderedIterator', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 483, 'endline': 488, 'name': '__init__', 'classname': 'TransfoXLCorpus', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_utils.py': [{'type': 'method', 'rank': 'E', 'complexity': 32, 'col_offset': 4, 'lineno': 297, 'endline': 434, 'name': '_from_pretrained', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 12, 'col_offset': 4, 'lineno': 743, 'endline': 783, 'name': 'decode', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 8, 'col_offset': 4, 'lineno': 498, 'endline': 535, 'name': 'add_tokens', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 218, 'endline': 244, 'name': '__init__', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 538, 'endline': 590, 'name': 'add_special_tokens', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 711, 'endline': 731, 'name': 'convert_ids_to_tokens', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 652, 'endline': 666, 'name': 'convert_tokens_to_ids', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 676, 'endline': 701, 'name': 'encode', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 34, 'endline': 825, 'name': 'PreTrainedTokenizer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 75, 'endline': 79, 'name': 'bos_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 82, 'endline': 86, 'name': 'eos_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 89, 'endline': 93, 'name': 'unk_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 96, 'endline': 100, 'name': 'sep_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 103, 'endline': 107, 'name': 'pad_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 110, 'endline': 114, 'name': 'cls_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 117, 'endline': 121, 'name': 'mask_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 124, 'endline': 128, 'name': 'additional_special_tokens', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 131, 'endline': 132, 'name': 'bos_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 135, 'endline': 136, 'name': 'eos_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 139, 'endline': 140, 'name': 'unk_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 143, 'endline': 144, 'name': 'sep_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 147, 'endline': 148, 'name': 'pad_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 151, 'endline': 152, 'name': 'cls_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 155, 'endline': 156, 'name': 'mask_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 159, 'endline': 160, 'name': 'additional_special_tokens', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 163, 'endline': 167, 'name': 'bos_token_id', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 170, 'endline': 174, 'name': 'eos_token_id', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 177, 'endline': 181, 'name': 'unk_token_is', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 184, 'endline': 188, 'name': 'sep_token_id', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 191, 'endline': 195, 'name': 'pad_token_id', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 198, 'endline': 202, 'name': 'cls_token_id', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 205, 'endline': 209, 'name': 'mask_token_id', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 212, 'endline': 216, 'name': 'additional_special_tokens_ids', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 218, 'endline': 244, 'name': '__init__', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 248, 'endline': 293, 'name': 'from_pretrained', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'E', 'complexity': 32, 'col_offset': 4, 'lineno': 297, 'endline': 434, 'name': '_from_pretrained', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 437, 'endline': 476, 'name': 'save_pretrained', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 479, 'endline': 485, 'name': 'save_vocabulary', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 488, 'endline': 490, 'name': 'vocab_size', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 493, 'endline': 495, 'name': '__len__', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 8, 'col_offset': 4, 'lineno': 498, 'endline': 535, 'name': 'add_tokens', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 538, 'endline': 590, 'name': 'add_special_tokens', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 592, 'endline': 641, 'name': 'tokenize', 'classname': 'PreTrainedTokenizer', 'closures': [{'type': 'function', 'rank': 'B', 'complexity': 7, 'col_offset': 8, 'lineno': 599, 'endline': 615, 'name': 'split_on_token', 'closures': []}, {'type': 'function', 'rank': 'B', 'complexity': 10, 'col_offset': 8, 'lineno': 617, 'endline': 637, 'name': 'split_on_tokens', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 643, 'endline': 650, 'name': '_tokenize', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 652, 'endline': 666, 'name': 'convert_tokens_to_ids', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 668, 'endline': 671, 'name': '_convert_token_to_id_with_added_voc', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 673, 'endline': 674, 'name': '_convert_token_to_id', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 676, 'endline': 701, 'name': 'encode', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 703, 'endline': 705, 'name': 'add_special_tokens_single_sentence', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 707, 'endline': 709, 'name': 'add_special_tokens_sentences_pair', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 7, 'col_offset': 4, 'lineno': 711, 'endline': 731, 'name': 'convert_ids_to_tokens', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 733, 'endline': 734, 'name': '_convert_id_to_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 736, 'endline': 741, 'name': 'convert_tokens_to_string', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 12, 'col_offset': 4, 'lineno': 743, 'endline': 783, 'name': 'decode', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 786, 'endline': 795, 'name': 'special_tokens_map', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 798, 'endline': 807, 'name': 'all_special_tokens', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 810, 'endline': 816, 'name': 'all_special_ids', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 819, 'endline': 825, 'name': 'clean_up_tokenization', 'classname': 'PreTrainedTokenizer', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 437, 'endline': 476, 'name': 'save_pretrained', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 786, 'endline': 795, 'name': 'special_tokens_map', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 798, 'endline': 807, 'name': 'all_special_tokens', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 75, 'endline': 79, 'name': 'bos_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 82, 'endline': 86, 'name': 'eos_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 89, 'endline': 93, 'name': 'unk_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 96, 'endline': 100, 'name': 'sep_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 103, 'endline': 107, 'name': 'pad_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 110, 'endline': 114, 'name': 'cls_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 117, 'endline': 121, 'name': 'mask_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 124, 'endline': 128, 'name': 'additional_special_tokens', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 163, 'endline': 167, 'name': 'bos_token_id', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 170, 'endline': 174, 'name': 'eos_token_id', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 177, 'endline': 181, 'name': 'unk_token_is', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 184, 'endline': 188, 'name': 'sep_token_id', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 191, 'endline': 195, 'name': 'pad_token_id', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 198, 'endline': 202, 'name': 'cls_token_id', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 205, 'endline': 209, 'name': 'mask_token_id', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 212, 'endline': 216, 'name': 'additional_special_tokens_ids', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 668, 'endline': 671, 'name': '_convert_token_to_id_with_added_voc', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 810, 'endline': 816, 'name': 'all_special_ids', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 131, 'endline': 132, 'name': 'bos_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 135, 'endline': 136, 'name': 'eos_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 139, 'endline': 140, 'name': 'unk_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 143, 'endline': 144, 'name': 'sep_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 147, 'endline': 148, 'name': 'pad_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 151, 'endline': 152, 'name': 'cls_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 155, 'endline': 156, 'name': 'mask_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 159, 'endline': 160, 'name': 'additional_special_tokens', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 248, 'endline': 293, 'name': 'from_pretrained', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 479, 'endline': 485, 'name': 'save_vocabulary', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 488, 'endline': 490, 'name': 'vocab_size', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 493, 'endline': 495, 'name': '__len__', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 592, 'endline': 641, 'name': 'tokenize', 'classname': 'PreTrainedTokenizer', 'closures': [{'type': 'function', 'rank': 'B', 'complexity': 7, 'col_offset': 8, 'lineno': 599, 'endline': 615, 'name': 'split_on_token', 'closures': []}, {'type': 'function', 'rank': 'B', 'complexity': 10, 'col_offset': 8, 'lineno': 617, 'endline': 637, 'name': 'split_on_tokens', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 643, 'endline': 650, 'name': '_tokenize', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 673, 'endline': 674, 'name': '_convert_token_to_id', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 703, 'endline': 705, 'name': 'add_special_tokens_single_sentence', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 707, 'endline': 709, 'name': 'add_special_tokens_sentences_pair', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 733, 'endline': 734, 'name': '_convert_id_to_token', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 736, 'endline': 741, 'name': 'convert_tokens_to_string', 'classname': 'PreTrainedTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 819, 'endline': 825, 'name': 'clean_up_tokenization', 'classname': 'PreTrainedTokenizer', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_xlm.py': [{'type': 'method', 'rank': 'C', 'complexity': 19, 'col_offset': 4, 'lineno': 658, 'endline': 742, 'name': '_tokenize', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 12, 'col_offset': 4, 'lineno': 615, 'endline': 656, 'name': 'bpe', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 539, 'endline': 572, 'name': '__init__', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 5, 'col_offset': 0, 'lineno': 515, 'endline': 794, 'name': 'XLMTokenizer', 'methods': [{'type': 'method', 'rank': 'B', 'complexity': 6, 'col_offset': 4, 'lineno': 539, 'endline': 572, 'name': '__init__', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 574, 'endline': 580, 'name': 'moses_punct_norm', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 582, 'endline': 588, 'name': 'moses_tokenize', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 590, 'endline': 594, 'name': 'moses_pipeline', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 596, 'endline': 609, 'name': 'ja_tokenize', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 612, 'endline': 613, 'name': 'vocab_size', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 12, 'col_offset': 4, 'lineno': 615, 'endline': 656, 'name': 'bpe', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 19, 'col_offset': 4, 'lineno': 658, 'endline': 742, 'name': '_tokenize', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 744, 'endline': 746, 'name': '_convert_token_to_id', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 748, 'endline': 750, 'name': '_convert_id_to_token', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 752, 'endline': 755, 'name': 'convert_tokens_to_string', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 757, 'endline': 762, 'name': 'add_special_tokens_single_sentence', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 764, 'endline': 771, 'name': 'add_special_tokens_sentences_pair', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 773, 'endline': 794, 'name': 'save_vocabulary', 'classname': 'XLMTokenizer', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 773, 'endline': 794, 'name': 'save_vocabulary', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 428, 'endline': 442, 'name': 'lowercase_and_remove_accent', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 3, 'col_offset': 0, 'lineno': 488, 'endline': 498, 'name': 'remove_non_printing_char', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 596, 'endline': 609, 'name': 'ja_tokenize', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 2, 'col_offset': 0, 'lineno': 415, 'endline': 425, 'name': 'get_pairs', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 574, 'endline': 580, 'name': 'moses_punct_norm', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 582, 'endline': 588, 'name': 'moses_tokenize', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 445, 'endline': 485, 'name': 'replace_unicode_punct', 'closures': []}, {'type': 'function', 'rank': 'A', 'complexity': 1, 'col_offset': 0, 'lineno': 501, 'endline': 512, 'name': 'romanian_preprocessing', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 590, 'endline': 594, 'name': 'moses_pipeline', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 612, 'endline': 613, 'name': 'vocab_size', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 744, 'endline': 746, 'name': '_convert_token_to_id', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 748, 'endline': 750, 'name': '_convert_id_to_token', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 752, 'endline': 755, 'name': 'convert_tokens_to_string', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 757, 'endline': 762, 'name': 'add_special_tokens_single_sentence', 'classname': 'XLMTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 764, 'endline': 771, 'name': 'add_special_tokens_sentences_pair', 'classname': 'XLMTokenizer', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_xlnet.py': [{'type': 'method', 'rank': 'C', 'complexity': 15, 'col_offset': 4, 'lineno': 129, 'endline': 166, 'name': '_tokenize', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 8, 'col_offset': 4, 'lineno': 111, 'endline': 127, 'name': 'preprocess_text', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'class', 'rank': 'A', 'complexity': 4, 'col_offset': 0, 'lineno': 54, 'endline': 214, 'name': 'XLNetTokenizer', 'methods': [{'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 64, 'endline': 90, 'name': '__init__', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 93, 'endline': 94, 'name': 'vocab_size', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 96, 'endline': 99, 'name': '__getstate__', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 101, 'endline': 109, 'name': '__setstate__', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'complexity': 8, 'col_offset': 4, 'lineno': 111, 'endline': 127, 'name': 'preprocess_text', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'C', 'complexity': 15, 'col_offset': 4, 'lineno': 129, 'endline': 166, 'name': '_tokenize', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 168, 'endline': 170, 'name': '_convert_token_to_id', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 172, 'endline': 177, 'name': '_convert_id_to_token', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 179, 'endline': 182, 'name': 'convert_tokens_to_string', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 184, 'endline': 191, 'name': 'add_special_tokens_single_sentence', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 193, 'endline': 200, 'name': 'add_special_tokens_sentences_pair', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 202, 'endline': 214, 'name': 'save_vocabulary', 'classname': 'XLNetTokenizer', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'complexity': 4, 'col_offset': 4, 'lineno': 172, 'endline': 177, 'name': '_convert_id_to_token', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 3, 'col_offset': 4, 'lineno': 202, 'endline': 214, 'name': 'save_vocabulary', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 64, 'endline': 90, 'name': '__init__', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 2, 'col_offset': 4, 'lineno': 101, 'endline': 109, 'name': '__setstate__', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 93, 'endline': 94, 'name': 'vocab_size', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 96, 'endline': 99, 'name': '__getstate__', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 168, 'endline': 170, 'name': '_convert_token_to_id', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 179, 'endline': 182, 'name': 'convert_tokens_to_string', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 184, 'endline': 191, 'name': 'add_special_tokens_single_sentence', 'classname': 'XLNetTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'complexity': 1, 'col_offset': 4, 'lineno': 193, 'endline': 200, 'name': 'add_special_tokens_sentences_pair', 'classname': 'XLNetTokenizer', 'closures': []}], 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\__main__.py': [{'type': 'function', 'rank': 'D', 'complexity': 29, 'col_offset': 0, 'lineno': 2, 'endline': 125, 'name': 'main', 'closures': []}]}","{'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\setup.py': {'loc': 73, 'lloc': 5, 'sloc': 37, 'comments': 1, 'multi': 22, 'blank': 14, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_gpt2_checkpoint_to_pytorch.py': {'loc': 75, 'lloc': 29, 'sloc': 45, 'comments': 18, 'multi': 0, 'blank': 11, 'single_comments': 19}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_openai_checkpoint_to_pytorch.py': {'loc': 75, 'lloc': 29, 'sloc': 45, 'comments': 18, 'multi': 0, 'blank': 11, 'single_comments': 19}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_pytorch_checkpoint_to_tf.py': {'loc': 130, 'lloc': 48, 'sloc': 81, 'comments': 14, 'multi': 14, 'blank': 20, 'single_comments': 15}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_roberta_checkpoint_to_pytorch.py': {'loc': 180, 'lloc': 103, 'sloc': 129, 'comments': 31, 'multi': 3, 'blank': 21, 'single_comments': 27}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_tf_checkpoint_to_pytorch.py': {'loc': 65, 'lloc': 23, 'sloc': 37, 'comments': 18, 'multi': 0, 'blank': 9, 'single_comments': 19}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_transfo_xl_checkpoint_to_pytorch.py': {'loc': 117, 'lloc': 60, 'sloc': 80, 'comments': 21, 'multi': 0, 'blank': 15, 'single_comments': 22}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_xlm_checkpoint_to_pytorch.py': {'loc': 75, 'lloc': 35, 'sloc': 42, 'comments': 17, 'multi': 0, 'blank': 15, 'single_comments': 18}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_xlnet_checkpoint_to_pytorch.py': {'loc': 104, 'lloc': 42, 'sloc': 73, 'comments': 18, 'multi': 0, 'blank': 12, 'single_comments': 19}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\file_utils.py': {'loc': 266, 'lloc': 178, 'sloc': 171, 'comments': 18, 'multi': 31, 'blank': 47, 'single_comments': 17}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_auto.py': {'loc': 600, 'lloc': 119, 'sloc': 121, 'comments': 14, 'multi': 340, 'blank': 124, 'single_comments': 15}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_bert.py': {'loc': 1235, 'lloc': 574, 'sloc': 666, 'comments': 77, 'multi': 293, 'blank': 219, 'single_comments': 57}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_distilbert.py': {'loc': 756, 'lloc': 374, 'sloc': 428, 'comments': 82, 'multi': 171, 'blank': 124, 'single_comments': 33}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_gpt2.py': {'loc': 751, 'lloc': 377, 'sloc': 432, 'comments': 49, 'multi': 178, 'blank': 109, 'single_comments': 32}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_openai.py': {'loc': 713, 'lloc': 377, 'sloc': 423, 'comments': 50, 'multi': 144, 'blank': 107, 'single_comments': 39}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_roberta.py': {'loc': 354, 'lloc': 125, 'sloc': 177, 'comments': 23, 'multi': 82, 'blank': 73, 'single_comments': 22}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_transfo_xl.py': {'loc': 1368, 'lloc': 836, 'sloc': 945, 'comments': 112, 'multi': 105, 'blank': 234, 'single_comments': 84}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_transfo_xl_utilities.py': {'loc': 332, 'lloc': 208, 'sloc': 198, 'comments': 26, 'multi': 51, 'blank': 58, 'single_comments': 25}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_utils.py': {'loc': 978, 'lloc': 501, 'sloc': 495, 'comments': 78, 'multi': 244, 'blank': 174, 'single_comments': 65}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_xlm.py': {'loc': 941, 'lloc': 436, 'sloc': 549, 'comments': 105, 'multi': 177, 'blank': 137, 'single_comments': 78}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_xlnet.py': {'loc': 1282, 'lloc': 639, 'sloc': 762, 'comments': 108, 'multi': 217, 'blank': 207, 'single_comments': 96}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\optimization.py': {'loc': 189, 'lloc': 102, 'sloc': 94, 'comments': 30, 'multi': 33, 'blank': 32, 'single_comments': 30}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_auto.py': {'loc': 120, 'lloc': 36, 'sloc': 36, 'comments': 14, 'multi': 48, 'blank': 21, 'single_comments': 15}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_bert.py': {'loc': 457, 'lloc': 244, 'sloc': 278, 'comments': 45, 'multi': 68, 'blank': 58, 'single_comments': 53}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_distilbert.py': {'loc': 62, 'lloc': 20, 'sloc': 24, 'comments': 14, 'multi': 12, 'blank': 11, 'single_comments': 15}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_gpt2.py': {'loc': 224, 'lloc': 151, 'sloc': 154, 'comments': 23, 'multi': 19, 'blank': 28, 'single_comments': 23}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_openai.py': {'loc': 208, 'lloc': 149, 'sloc': 147, 'comments': 18, 'multi': 13, 'blank': 26, 'single_comments': 22}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_roberta.py': {'loc': 98, 'lloc': 37, 'sloc': 54, 'comments': 16, 'multi': 15, 'blank': 12, 'single_comments': 17}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_transfo_xl.py': {'loc': 575, 'lloc': 402, 'sloc': 416, 'comments': 41, 'multi': 18, 'blank': 99, 'single_comments': 42}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_utils.py': {'loc': 825, 'lloc': 478, 'sloc': 467, 'comments': 37, 'multi': 148, 'blank': 154, 'single_comments': 56}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_xlm.py': {'loc': 794, 'lloc': 289, 'sloc': 649, 'comments': 22, 'multi': 63, 'blank': 56, 'single_comments': 26}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_xlnet.py': {'loc': 214, 'lloc': 134, 'sloc': 140, 'comments': 19, 'multi': 18, 'blank': 35, 'single_comments': 21}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\__init__.py': {'loc': 54, 'lloc': 23, 'sloc': 49, 'comments': 0, 'multi': 0, 'blank': 5, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\__main__.py': {'loc': 128, 'lloc': 94, 'sloc': 114, 'comments': 7, 'multi': 0, 'blank': 7, 'single_comments': 7}}","{'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\setup.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_gpt2_checkpoint_to_pytorch.py': {'total': [2, 10, 6, 12, 12, 18, 35.219280948873624, 64.52932501298082, 1.2, 77.43519001557698, 4.301955000865387, 0.021509775004326003], 'functions': [['convert_gpt2_checkpoint_to_pytorch', [2, 8, 5, 10, 10, 15, 26.0, 49.82892142331044, 1.25, 62.28615177913805, 3.460341765507669, 0.016609640474436003]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_openai_checkpoint_to_pytorch.py': {'total': [2, 10, 6, 12, 12, 18, 35.219280948873624, 64.52932501298082, 1.2, 77.43519001557698, 4.301955000865387, 0.021509775004326003], 'functions': [['convert_openai_checkpoint_to_pytorch', [2, 8, 5, 10, 10, 15, 26.0, 49.82892142331044, 1.25, 62.28615177913805, 3.460341765507669, 0.016609640474436003]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_pytorch_checkpoint_to_tf.py': {'total': [4, 7, 4, 7, 11, 11, 27.651484454403228, 38.053747805010275, 2.0, 76.10749561002055, 4.228194200556697, 0.012684582601670002], 'functions': [['convert_pytorch_checkpoint_to_tf', [3, 5, 3, 5, 8, 8, 16.36452797660028, 24.0, 1.5, 36.0, 2.0, 0.008]], ['main', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_roberta_checkpoint_to_pytorch.py': {'total': [4, 10, 12, 23, 14, 35, 41.219280948873624, 133.25742227201613, 4.6, 612.9841424512741, 34.05467458062634, 0.044419140757338], 'functions': [['convert_roberta_checkpoint_to_pytorch', [4, 8, 11, 21, 12, 32, 32.0, 114.71880002307701, 5.25, 602.2737001211543, 33.4596500067308, 0.038239600007692005]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_tf_checkpoint_to_pytorch.py': {'total': [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001], 'functions': [['convert_tf_checkpoint_to_pytorch', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_transfo_xl_checkpoint_to_pytorch.py': {'total': [2, 12, 7, 14, 14, 21, 45.01955000865388, 79.95445336320968, 1.166666666666666, 93.2801955904113, 5.182233088356183, 0.026651484454403], 'functions': [['convert_transfo_xl_checkpoint_to_pytorch', [2, 8, 5, 10, 10, 15, 26.0, 49.82892142331044, 1.25, 62.28615177913805, 3.460341765507669, 0.016609640474436003]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_xlm_checkpoint_to_pytorch.py': {'total': [6, 23, 15, 28, 29, 43, 119.55169999363824, 208.89318279048564, 3.652173913043478, 762.9142328000345, 42.38412404444636, 0.06963106093016101], 'functions': [['convert_xlm_checkpoint_to_pytorch', [6, 21, 14, 26, 27, 40, 107.74844088268091, 190.19550008653877, 3.714285714285714, 706.4404288928583, 39.246690494047684, 0.063398500028846]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\convert_xlnet_checkpoint_to_pytorch.py': {'total': [3, 6, 4, 8, 9, 12, 20.264662506490406, 38.03910001730775, 2.0, 76.0782000346155, 4.226566668589751, 0.012679700005769], 'functions': [['convert_xlnet_checkpoint_to_pytorch', [2, 4, 3, 6, 6, 9, 10.0, 23.264662506490403, 1.5, 34.89699375973561, 1.938721875540867, 0.007754887502163001]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\file_utils.py': {'total': [10, 67, 42, 74, 77, 116, 439.64725670954437, 726.9472387206087, 5.522388059701493, 4014.48475114366, 223.02693061909224, 0.24231574624020202], 'functions': [['url_to_filename', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['filename_to_url', [5, 10, 6, 10, 15, 16, 44.82892142331043, 62.5102495297363, 2.5, 156.27562382434076, 8.681979101352264, 0.020836749843245003]], ['cached_path', [4, 12, 7, 14, 16, 21, 51.01955000865388, 84.0, 2.333333333333333, 196.0, 10.88888888888889, 0.028]], ['split_s3_path', [2, 4, 3, 4, 6, 7, 10.0, 18.094737505048094, 1.0, 18.094737505048094, 1.005263194724894, 0.006031579168349]], ['s3_request', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['s3_etag', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['s3_get', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['http_get', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_from_cache', [9, 33, 22, 38, 42, 60, 194.9943309518098, 323.53904536672565, 5.181818181818182, 1676.5205078093966, 93.14002821163314, 0.107846348455575]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_auto.py': {'total': [1, 9, 33, 66, 10, 99, 28.529325012980813, 328.8708813938489, 3.666666666666666, 1205.8598984441126, 66.99221658022847, 0.10962362713128201], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 9, 8, 16, 10, 24, 28.529325012980813, 79.72627427729671, 0.8888888888888881, 70.86779935759708, 3.9370999643109483, 0.026575424759098003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 9, 8, 16, 10, 24, 28.529325012980813, 79.72627427729671, 0.8888888888888881, 70.86779935759708, 3.9370999643109483, 0.026575424759098003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 9, 8, 16, 10, 24, 28.529325012980813, 79.72627427729671, 0.8888888888888881, 70.86779935759708, 3.9370999643109483, 0.026575424759098003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 6, 5, 10, 7, 15, 15.509775004326936, 42.11032383086406, 0.833333333333333, 35.09193652572005, 1.949552029206669, 0.014036774610288]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 5, 4, 8, 6, 12, 11.60964047443681, 31.019550008653873, 0.8, 24.8156400069231, 1.378646667051283, 0.010339850002884001]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_bert.py': {'total': [16, 158, 156, 262, 174, 418, 1217.9973582119824, 3111.150381264769, 13.265822784810126, 41271.96961475288, 2292.8872008196045, 1.037050127088256], 'functions': [['load_tf_weights_in_bert', [6, 27, 15, 29, 33, 44, 143.89173756274062, 221.95334125177195, 3.222222222222222, 715.1829884779319, 39.732388248773994, 0.073984447083923]], ['gelu', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['swish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 7, 4, 8, 9, 12, 21.651484454403228, 38.03910001730775, 1.142857142857142, 43.47325716263743, 2.415180953479857, 0.012679700005769]], ['__init__', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['transpose_for_scores', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['forward', [5, 10, 9, 14, 15, 23, 44.82892142331043, 89.85848369899593, 3.5, 314.50469294648576, 17.47248294147143, 0.029952827899665004]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prune_heads', [5, 11, 7, 13, 16, 20, 49.663388279447084, 80.0, 2.954545454545454, 236.36363636363637, 13.131313131313131, 0.026666666666666002]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 8, 5, 10, 9, 15, 24.0, 47.548875021634686, 0.625, 29.718046888521677, 1.651002604917871, 0.015849625007211002]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [7, 16, 18, 27, 23, 45, 83.65148445440323, 203.5602880225656, 5.90625, 1202.277951133278, 66.79321950740433, 0.067853429340855]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tie_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 12, 11, 17, 16, 28, 51.01955000865388, 112.0, 2.833333333333333, 317.33333333333337, 17.629629629629633, 0.037333333333333]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tie_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 7, 6, 9, 10, 15, 24.406371956566698, 49.82892142331044, 1.928571428571428, 96.09863417352727, 5.338813009640404, 0.016609640474436003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 7, 6, 9, 10, 15, 24.406371956566698, 49.82892142331044, 1.928571428571428, 96.09863417352727, 5.338813009640404, 0.016609640474436003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 8, 12, 12, 20, 32.0, 71.69925001442313, 3.0, 215.0977500432694, 11.949875002403855, 0.023899750004807003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 10, 15, 21, 13, 36, 37.974168451037094, 133.21582985307933, 3.15, 419.62986403719987, 23.312770224288883, 0.044405276617693]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 9, 10, 15, 13, 25, 36.52932501298081, 92.5109929535273, 3.333333333333333, 308.3699765117577, 17.13166536176432, 0.030836997651175]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 16, 14, 23, 22, 37, 79.50977500432694, 164.99896988958, 4.3125, 711.5580576488137, 39.53100320271187, 0.05499965662986]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_distilbert.py': {'total': [16, 112, 97, 166, 128, 263, 826.4237512704516, 1841.0, 11.857142857142858, 21829.0, 1212.7222222222222, 0.613666666666666], 'functions': [['__init__', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['hidden_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_attention_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_hidden_layers', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['gelu', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['create_sinusoidal_embeddings', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['prune_heads', [6, 12, 8, 15, 18, 23, 58.52932501298082, 95.90827503317318, 3.75, 359.65603137439945, 19.98089063191108, 0.031969425011057005]], ['forward', [7, 19, 13, 21, 26, 34, 100.36210720983135, 159.81495041679716, 3.868421052631578, 618.23151871761, 34.346195484311664, 0.053271650138932]], ['__init__', [2, 3, 2, 4, 5, 6, 6.754887502163469, 13.931568569324174, 1.333333333333333, 18.575424759098897, 1.03196804217216, 0.004643856189774]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['forward', [2, 7, 4, 8, 9, 12, 21.651484454403228, 38.03910001730775, 1.142857142857142, 43.47325716263743, 2.415180953479857, 0.012679700005769]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 12, 8, 15, 15, 23, 47.77443751081735, 89.85848369899593, 1.875, 168.48465693561735, 9.360258718645408, 0.029952827899665004]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 11, 14, 20, 17, 34, 53.563522809337215, 138.97373660251156, 5.454545454545454, 758.0385632864267, 42.11325351591259, 0.046324578867503005]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['tie_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 7, 6, 9, 10, 15, 24.406371956566698, 49.82892142331044, 1.928571428571428, 96.09863417352727, 5.338813009640404, 0.016609640474436003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 8, 12, 12, 20, 32.0, 71.69925001442313, 3.0, 215.0977500432694, 11.949875002403855, 0.023899750004807003]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [6, 16, 14, 23, 22, 37, 79.50977500432694, 164.99896988958, 4.3125, 711.5580576488137, 39.53100320271187, 0.05499965662986]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_gpt2.py': {'total': [14, 141, 132, 214, 155, 346, 1059.9797095970364, 2517.5390442248863, 10.624113475177305, 26746.620484034607, 1485.9233602241447, 0.839179681408295], 'functions': [['load_tf_weights_in_gpt2', [4, 19, 10, 20, 23, 30, 88.71062275542812, 135.7068586817104, 2.105263157894736, 285.6986498562324, 15.872147214235135, 0.045235619560570005]], ['gelu', [3, 13, 7, 14, 16, 21, 52.860603837997665, 84.0, 1.615384615384615, 135.6923076923077, 7.538461538461539, 0.028]], ['__init__', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['max_position_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['hidden_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_attention_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_hidden_layers', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['prune_heads', [7, 17, 13, 25, 24, 38, 89.13835275565901, 174.22857502740396, 5.147058823529412, 896.7647244057557, 49.82026246698643, 0.058076191675801005]], ['_attn', [5, 13, 12, 20, 18, 32, 59.715356810271004, 133.437600046154, 3.846153846153846, 513.2215386390538, 28.512307702169657, 0.044479200015384]], ['merge_heads', [3, 6, 5, 7, 9, 12, 20.264662506490406, 38.03910001730775, 1.75, 66.56842503028857, 3.698245835016031, 0.012679700005769]], ['split_heads', [3, 5, 4, 6, 8, 10, 16.36452797660028, 30.0, 1.8, 54.0, 3.0, 0.01]], ['forward', [3, 6, 8, 10, 9, 18, 20.264662506490406, 57.058650025961626, 2.5, 142.64662506490407, 7.924812503605782, 0.019019550008653]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [1, 5, 3, 6, 6, 9, 11.60964047443681, 23.264662506490403, 0.6000000000000001, 13.95879750389424, 0.7754887502163461, 0.007754887502163001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 33, 39, 58, 39, 97, 181.9747809431559, 512.6840152296381, 5.272727272727272, 2703.2429893926374, 150.18016607736874, 0.17089467174321202]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tie_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 7, 8, 11, 10, 19, 24.406371956566698, 63.11663380285989, 2.357142857142857, 148.77492253531258, 8.265273474184033, 0.021038877934286]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tie_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 9, 14, 19, 12, 33, 33.28421251514428, 118.30376252379817, 3.166666666666666, 374.62858132536087, 20.81269896252005, 0.039434587507932]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_openai.py': {'total': [15, 136, 127, 210, 151, 337, 1022.498305344174, 2439.3423971525517, 11.580882352941176, 28249.73731996521, 1569.4298511091783, 0.8131141323841841], 'functions': [['load_tf_weights_in_openai_gpt', [5, 22, 20, 37, 27, 57, 109.71713608445735, 271.0285876233177, 4.204545454545454, 1139.552016143495, 63.30844534130527, 0.090342862541105]], ['gelu', [3, 13, 7, 14, 16, 21, 52.860603837997665, 84.0, 1.615384615384615, 135.6923076923077, 7.538461538461539, 0.028]], ['swish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['max_position_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['hidden_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_attention_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_hidden_layers', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['prune_heads', [7, 17, 13, 25, 24, 38, 89.13835275565901, 174.22857502740396, 5.147058823529412, 896.7647244057557, 49.82026246698643, 0.058076191675801005]], ['_attn', [6, 12, 12, 19, 18, 31, 58.52932501298082, 129.26767504471167, 4.75, 614.0214564623805, 34.112303136798914, 0.043089225014903004]], ['merge_heads', [3, 6, 5, 7, 9, 12, 20.264662506490406, 38.03910001730775, 1.75, 66.56842503028857, 3.698245835016031, 0.012679700005769]], ['split_heads', [3, 5, 4, 6, 8, 10, 16.36452797660028, 30.0, 1.8, 54.0, 3.0, 0.01]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [1, 6, 3, 6, 7, 9, 15.509775004326936, 25.26619429851844, 0.5, 12.63309714925922, 0.701838730514401, 0.008422064766172]], ['_init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 24, 30, 44, 30, 74, 125.5488750216347, 363.1099040750304, 5.5, 1997.104472412667, 110.95024846737039, 0.12103663469167601]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tie_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 7, 8, 11, 10, 19, 24.406371956566698, 63.11663380285989, 2.357142857142857, 148.77492253531258, 8.265273474184033, 0.021038877934286]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tie_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 9, 14, 19, 12, 33, 33.28421251514428, 118.30376252379817, 3.166666666666666, 374.62858132536087, 20.81269896252005, 0.039434587507932]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_roberta.py': {'total': [6, 20, 20, 33, 26, 53, 101.94833690207419, 249.1233050614779, 4.95, 1233.1603600543158, 68.50890889190643, 0.083041101687159], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 6, 4, 8, 8, 12, 17.509775004326936, 36.0, 1.333333333333333, 48.0, 2.666666666666666, 0.012]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tie_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 7, 6, 9, 10, 15, 24.406371956566698, 49.82892142331044, 1.928571428571428, 96.09863417352727, 5.338813009640404, 0.016609640474436003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 8, 12, 12, 20, 32.0, 71.69925001442313, 3.0, 215.0977500432694, 11.949875002403855, 0.023899750004807003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_transfo_xl.py': {'total': [20, 281, 290, 515, 301, 805, 2372.2123578798273, 6628.06383979156, 18.327402135231317, 121475.19136984531, 6748.6217427691845, 2.209354613263853], 'functions': [['build_tf_to_pytorch_map', [3, 21, 21, 41, 24, 62, 96.99355338051744, 284.2676750447117, 2.928571428571428, 832.49819120237, 46.24989951124277, 0.09475589168157]], ['load_tf_weights_in_transfo_xl', [6, 22, 16, 32, 28, 48, 113.61727061434748, 230.75303625876498, 4.363636363636363, 1006.9223400382471, 55.94013000212484, 0.076917678752921]], ['__init__', [5, 14, 7, 14, 19, 21, 64.91260938324326, 89.20647778231529, 2.5, 223.01619445578822, 12.389788580877124, 0.029735492594105004]], ['max_position_embeddings', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['hidden_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_attention_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_hidden_layers', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [2, 6, 3, 6, 8, 9, 17.509775004326936, 27.0, 1.0, 27.0, 1.5, 0.009000000000000001]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 2, 4, 3, 6, 2.0, 9.509775004326938, 1.0, 9.509775004326938, 0.5283208335737181, 0.0031699250014420003]], ['__init__', [5, 12, 9, 18, 17, 27, 54.62919048309069, 110.36149671375918, 3.75, 413.85561267659693, 22.99197848203316, 0.036787165571253]], ['forward', [6, 18, 13, 23, 24, 36, 90.56842503028855, 165.05865002596164, 3.833333333333333, 632.7248250995196, 35.15137917219553, 0.055019550008653]], ['__init__', [5, 12, 8, 16, 17, 24, 54.62919048309069, 98.09910819000817, 3.333333333333333, 326.99702730002724, 18.16650151666818, 0.032699702730002]], ['_parallelogram_mask', [1, 1, 4, 4, 2, 8, 0.0, 8.0, 2.0, 16.0, 0.8888888888888881, 0.002666666666666]], ['_shift', [3, 2, 8, 10, 5, 18, 6.754887502163469, 41.79470570797252, 7.5, 313.4602928097939, 17.414460711655217, 0.013931568569324001]], ['_rel_shift', [3, 10, 5, 10, 13, 15, 37.974168451037094, 55.506595772116384, 1.5, 83.25989365817458, 4.625549647676365, 0.018502198590705]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [6, 23, 18, 31, 29, 49, 119.55169999363824, 238.04106876125107, 4.043478260869565, 962.5138867302761, 53.47299370723756, 0.07934702292041701]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [8, 29, 26, 42, 37, 68, 164.8814488586996, 354.2428288627686, 5.793103448275862, 2052.165353411901, 114.00918630066116, 0.11808094295425602]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [7, 14, 10, 20, 21, 30, 72.95445336320968, 131.76952268336282, 5.0, 658.847613416814, 36.602645189823, 0.04392317422778701]], ['forward', [8, 15, 10, 19, 23, 29, 82.60335893412778, 131.18329672565338, 5.066666666666666, 664.6620367433104, 36.92566870796169, 0.043727765575217]], ['_init_weight', [2, 4, 3, 5, 6, 8, 10.0, 20.67970000576925, 1.25, 25.84962500721156, 1.43609027817842, 0.006893233335256]], ['_init_bias', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_init_weights', [4, 28, 22, 39, 32, 61, 142.6059378176129, 305.0, 2.785714285714285, 849.6428571428571, 47.20238095238095, 0.101666666666666]], ['set_num_special_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [4, 11, 10, 19, 15, 29, 46.053747805010275, 113.29982727264704, 3.454545454545454, 391.399403305508, 21.744411294750442, 0.037766609090882]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['backward_compatible', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['reset_length', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['init_mems', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_update_mems', [4, 12, 6, 12, 16, 18, 51.01955000865388, 72.0, 2.0, 144.0, 8.0, 0.024]], ['_forward', [10, 34, 56, 93, 44, 149, 206.1930175513852, 813.4553111769573, 13.676470588235293, 11125.197638155445, 618.0665354530803, 0.271151770392319]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['tie_weights', [4, 10, 6, 13, 14, 19, 41.219280948873624, 72.33974351909447, 2.6, 188.08333314964563, 10.449074063869201, 0.024113247839698003]], ['reset_length', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['init_mems', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 13, 13, 20, 19, 33, 63.61549134016113, 140.1816079436383, 4.615384615384615, 646.992036662946, 35.944002036830334, 0.046727202647879]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_transfo_xl_utilities.py': {'total': [17, 85, 82, 143, 102, 225, 614.2850978729605, 1501.2957019435864, 14.3, 21468.52853779329, 1192.696029877405, 0.500431900647862], 'functions': [['__init__', [7, 15, 11, 22, 22, 33, 78.25484338853101, 147.1612434150308, 5.133333333333334, 755.4277161971582, 41.96820645539768, 0.049053747805010005]], ['_compute_logit', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [12, 32, 35, 64, 44, 99, 203.01955000865388, 540.4837302450925, 12.0, 6485.80476294111, 360.3224868300617, 0.18016124341503]], ['log_prob', [4, 10, 11, 20, 14, 31, 41.219280948873624, 118.02800258378572, 4.0, 472.1120103351429, 26.22844501861905, 0.039342667527928005]], ['__init__', [5, 12, 9, 14, 17, 23, 54.62919048309069, 94.01164534875782, 2.916666666666666, 274.2006322672103, 15.233368459289462, 0.031337215116252]], ['sample', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['sample_logits', [4, 13, 14, 19, 17, 33, 56.105716335834195, 134.8862737612612, 2.923076923076923, 394.28295407137887, 21.904608559521048, 0.044962091253753]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_utils.py': {'total': [14, 144, 155, 258, 158, 413, 1085.7721691164995, 3016.4614489971436, 12.541666666666666, 37831.454006172506, 2101.7474447873615, 1.005487149665714], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['add_start_docstrings', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['add_end_docstrings', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['add_start_docstrings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['add_end_docstrings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_pretrained', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [2, 4, 3, 6, 6, 9, 10.0, 23.264662506490403, 1.5, 34.89699375973561, 1.938721875540867, 0.007754887502163001]], ['from_dict', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['from_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__eq__', [1, 1, 1, 2, 2, 3, 0.0, 3.0, 1.0, 3.0, 0.16666666666666602, 0.001]], ['__repr__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_json_string', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['to_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['_get_resized_embeddings', [2, 3, 2, 4, 5, 6, 6.754887502163469, 13.931568569324174, 1.333333333333333, 18.575424759098897, 1.03196804217216, 0.004643856189774]], ['_tie_or_clone_weights', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['resize_token_embeddings', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['init_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prune_heads', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['save_pretrained', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [9, 37, 26, 47, 46, 73, 221.27909954125198, 403.22002279216196, 5.716216216216216, 2304.8928329876285, 128.04960183264603, 0.134406674264053]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 6, 11, 12, 17, 32.0, 60.94436251225966, 2.75, 167.59699690871406, 9.310944272706337, 0.020314787504086003]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [5, 13, 17, 26, 18, 43, 59.715356810271004, 179.30677506201943, 5.0, 896.5338753100971, 49.80743751722761, 0.059768925020673005]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [3, 8, 17, 22, 11, 39, 28.75488750216347, 134.91783312685462, 4.125, 556.5360616482753, 30.918670091570853, 0.044972611042284005]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [7, 28, 31, 49, 35, 80, 154.25742227201613, 410.3426413555973, 6.125, 2513.3486783030335, 139.6304821279463, 0.136780880451865]], ['__init__', [3, 19, 10, 21, 22, 31, 85.46551025759159, 138.24238017775622, 1.657894736842105, 229.1913145052274, 12.732850805845967, 0.046080793392585]], ['forward', [6, 15, 18, 28, 21, 46, 74.11313393845472, 202.04660144782298, 5.6, 1131.4609681078086, 62.858942672656035, 0.067348867149274]], ['prune_linear_layer', [2, 4, 4, 8, 6, 12, 10.0, 31.019550008653873, 2.0, 62.039100017307746, 3.446616667628208, 0.010339850002884001]], ['prune_conv1d_layer', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['prune_layer', [1, 2, 2, 4, 3, 6, 2.0, 9.509775004326938, 1.0, 9.509775004326938, 0.5283208335737181, 0.0031699250014420003]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_xlm.py': {'total': [19, 150, 132, 238, 169, 370, 1165.0334263298103, 2738.3253914244083, 15.073333333333334, 41275.69140007058, 2293.0939666705876, 0.9127751304748021], 'functions': [['__init__', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['hidden_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_attention_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_hidden_layers', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['create_sinusoidal_embeddings', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['gelu', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['get_masks', [6, 16, 8, 16, 22, 24, 79.50977500432694, 107.02635884729514, 3.0, 321.07907654188546, 17.837726474549193, 0.035675452949098005]], ['__init__', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['prune_heads', [6, 12, 8, 15, 18, 23, 58.52932501298082, 95.90827503317318, 3.75, 359.65603137439945, 19.98089063191108, 0.031969425011057005]], ['forward', [11, 26, 22, 40, 37, 62, 160.26518047667867, 322.9861086689949, 8.461538461538462, 2732.9593810453416, 151.8310767247412, 0.10766203622299801]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_init_weights', [2, 11, 8, 16, 13, 24, 40.053747805010275, 88.81055323538621, 1.4545454545454541, 129.17898652419814, 7.176610362455452, 0.029603517745128004]], ['__init__', [6, 10, 7, 13, 16, 20, 48.72905595320056, 80.0, 3.9, 312.0, 17.333333333333332, 0.026666666666666002]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [10, 45, 47, 79, 55, 126, 280.35267028370896, 728.4513239041072, 8.777777777777779, 6394.183843158275, 355.23243573101524, 0.24281710796803502]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [4, 10, 8, 15, 14, 23, 41.219280948873624, 87.56916320732489, 3.0, 262.7074896219747, 14.594860534554151, 0.029189721069108002]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tie_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 8, 12, 12, 20, 32.0, 71.69925001442313, 3.0, 215.0977500432694, 11.949875002403855, 0.023899750004807003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\modeling_xlnet.py': {'total': [17, 237, 225, 408, 254, 633, 1939.1190182901435, 5056.837406726781, 14.632911392405063, 73996.2536984324, 4110.902983246244, 1.6856124689089271], 'functions': [['build_tf_xlnet_to_pytorch_map', [5, 26, 19, 39, 31, 58, 133.82107314610522, 287.3433860024388, 3.75, 1077.5376975091456, 59.863205417174754, 0.09578112866747901]], ['load_tf_weights_in_xlnet', [6, 19, 14, 29, 25, 43, 96.22039775975506, 199.68581616031315, 4.578947368421052, 914.3508424182759, 50.79726902323755, 0.066561938720104]], ['gelu', [3, 13, 7, 14, 16, 21, 52.860603837997665, 84.0, 1.615384615384615, 135.6923076923077, 7.538461538461539, 0.028]], ['swish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [5, 10, 6, 12, 15, 18, 44.82892142331043, 70.32403072095333, 3.0, 210.97209216286, 11.720671786825555, 0.023441343573651]], ['max_position_embeddings', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['hidden_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_attention_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_hidden_layers', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [4, 10, 5, 10, 14, 15, 41.219280948873624, 57.110323830864054, 2.0, 114.22064766172811, 6.345591536762672, 0.019036774610288]], ['prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['rel_shift', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['rel_attn_core', [6, 22, 15, 30, 28, 45, 113.61727061434748, 216.33097149259217, 4.090909090909091, 884.9903379242406, 49.16612988468003, 0.072110323830864]], ['post_attention', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [4, 13, 9, 18, 17, 27, 56.105716335834195, 110.36149671375918, 2.769230769230769, 305.6164524381023, 16.978691802116796, 0.036787165571253]], ['__init__', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['create_mask', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['cache_mem', [7, 9, 9, 16, 16, 25, 48.18080946738404, 100.0, 6.222222222222222, 622.2222222222223, 34.567901234567906, 0.033333333333333]], ['positional_embedding', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['relative_positional_encoding', [6, 15, 18, 27, 21, 45, 74.11313393845472, 197.65428402504423, 5.4, 1067.333133735239, 59.29628520751328, 0.065884761341681]], ['forward', [11, 50, 59, 111, 61, 170, 320.2465572937465, 1008.2253473856907, 12.21, 12310.431491579284, 683.9128606432936, 0.33607511579523003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tie_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 7, 7, 10, 10, 17, 24.406371956566698, 56.472777613085164, 2.1428571428571432, 121.0130948851825, 6.722949715843472, 0.018824259204361]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 8, 12, 12, 20, 32.0, 71.69925001442313, 3.0, 215.0977500432694, 11.949875002403855, 0.023899750004807003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [7, 28, 31, 49, 35, 80, 154.25742227201613, 410.3426413555973, 6.125, 2513.3486783030335, 139.6304821279463, 0.136780880451865]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\optimization.py': {'total': [15, 62, 53, 99, 77, 152, 427.76353017811414, 952.551554185625, 11.975806451612904, 11407.573048110107, 633.7540582283393, 0.317517184728541], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['lr_lambda', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['lr_lambda', [3, 7, 5, 10, 10, 15, 24.406371956566698, 49.82892142331044, 2.1428571428571432, 106.77626019280808, 5.932014455156004, 0.016609640474436003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['lr_lambda', [5, 17, 10, 20, 22, 30, 81.0965087756926, 133.78294855911892, 2.941176470588235, 393.4792604679969, 21.859958914888715, 0.044594316186372]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['lr_lambda', [7, 16, 11, 22, 23, 33, 83.65148445440323, 149.27754454988144, 4.8125, 718.3981831463044, 39.91101017479469, 0.049759181516627005]], ['__init__', [3, 9, 9, 13, 12, 22, 33.28421251514428, 78.86917501586544, 2.166666666666666, 170.8832125343751, 9.493511807465284, 0.026289725005288003]], ['step', [10, 21, 16, 30, 31, 46, 125.4579468272276, 227.8930302777963, 7.142857142857143, 1627.8073591271166, 90.4337421737287, 0.075964343425932]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_auto.py': {'total': [1, 9, 8, 16, 10, 24, 28.529325012980813, 79.72627427729671, 0.8888888888888881, 70.86779935759708, 3.9370999643109483, 0.026575424759098003], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 9, 8, 16, 10, 24, 28.529325012980813, 79.72627427729671, 0.8888888888888881, 70.86779935759708, 3.9370999643109483, 0.026575424759098003]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_bert.py': {'total': [16, 136, 84, 177, 152, 261, 1027.8949464100463, 1891.709081008776, 10.411764705882353, 19696.029843444314, 1094.2238801913509, 0.630569693669591], 'functions': [['load_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['whitespace_tokenize', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [2, 4, 3, 5, 6, 8, 10.0, 20.67970000576925, 1.25, 25.84962500721156, 1.43609027817842, 0.006893233335256]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_token_to_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_id_to_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['add_special_tokens_single_sentence', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['add_special_tokens_sentences_pair', [1, 7, 4, 8, 8, 12, 19.651484454403228, 36.0, 0.5714285714285711, 20.57142857142857, 1.142857142857142, 0.012]], ['save_vocabulary', [2, 5, 3, 6, 7, 9, 13.60964047443681, 25.26619429851844, 1.2, 30.319433158222125, 1.684412953234562, 0.008422064766172]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['tokenize', [4, 6, 4, 8, 10, 12, 23.509775004326936, 39.863137138648355, 2.666666666666666, 106.3016990363956, 5.905649946466422, 0.013287712379549002]], ['_run_strip_accents', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_run_split_on_punc', [6, 8, 6, 11, 14, 17, 39.50977500432694, 64.72503367497926, 4.125, 266.99076390928946, 14.832820217182748, 0.021575011224993]], ['_tokenize_chinese_chars', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_is_chinese_char', [4, 41, 25, 56, 45, 81, 227.65963218934144, 444.84010080270366, 2.731707317073171, 1215.1729582903126, 67.50960879390625, 0.148280033600901]], ['_clean_text', [2, 6, 3, 7, 8, 10, 17.509775004326936, 30.0, 1.166666666666666, 35.0, 1.9444444444444442, 0.01]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [6, 12, 8, 16, 18, 24, 58.52932501298082, 100.07820003461549, 4.0, 400.31280013846197, 22.23960000769233, 0.033359400011538004]], ['_is_whitespace', [2, 11, 6, 14, 13, 20, 40.053747805010275, 74.00879436282185, 1.272727272727272, 94.1930110072278, 5.232945055957099, 0.024669598120940002]], ['_is_control', [2, 7, 4, 9, 9, 13, 21.651484454403228, 41.20902501875006, 1.2857142857142851, 52.98303216696437, 2.943501787053576, 0.013736341672916002]], ['_is_punctuation', [4, 21, 13, 28, 25, 41, 100.23866587835397, 190.3981037807637, 2.666666666666666, 507.7282767487032, 28.207126486039066, 0.063466034593587]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_distilbert.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_gpt2.py': {'total': [11, 45, 32, 62, 56, 94, 285.1871371398456, 545.8913626734148, 7.5777777777777775, 4136.643437147432, 229.81352428596847, 0.181963787557804], 'functions': [['lru_cache', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['bytes_to_unicode', [4, 15, 11, 22, 19, 33, 66.60335893412778, 140.1816079436383, 2.933333333333333, 411.199383301339, 22.844410183407724, 0.046727202647879]], ['get_pairs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['bpe', [8, 19, 14, 28, 27, 42, 104.71062275542812, 199.7052750908657, 5.894736842105263, 1177.2100426408927, 65.40055792449404, 0.06656842503028801]], ['_tokenize', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_convert_token_to_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_id_to_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_vocabulary', [3, 6, 4, 7, 9, 11, 20.264662506490406, 34.86917501586544, 1.75, 61.021056277764515, 3.390058682098028, 0.011623058338621001]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_openai.py': {'total': [11, 34, 26, 48, 45, 74, 211.02748440752185, 406.39712912839593, 7.764705882352941, 3155.554179114604, 175.30856550636688, 0.135465709709465], 'functions': [['get_pairs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['text_standardize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['bpe', [9, 25, 20, 38, 34, 58, 144.62572975734892, 295.07284479251973, 6.84, 2018.298258380835, 112.1276810211575, 0.09835761493083901]], ['_tokenize', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_convert_token_to_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_id_to_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_vocabulary', [3, 6, 4, 7, 9, 11, 20.264662506490406, 34.86917501586544, 1.75, 61.021056277764515, 3.390058682098028, 0.011623058338621001]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_roberta.py': {'total': [1, 12, 7, 14, 13, 21, 43.01955000865388, 77.70923408096293, 0.583333333333333, 45.33038654722838, 2.518354808179354, 0.025903078026987002], 'functions': [['lru_cache', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['add_special_tokens_single_sentence', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['add_special_tokens_sentences_pair', [1, 8, 5, 10, 9, 15, 24.0, 47.548875021634686, 0.625, 29.718046888521677, 1.651002604917871, 0.015849625007211002]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_transfo_xl.py': {'total': [19, 137, 104, 206, 156, 310, 1053.1410181210204, 2258.474687847297, 14.284671532846716, 32261.569081147154, 1792.309393397064, 0.7528248959490991], 'functions': [['__init__', [3, 7, 5, 10, 10, 15, 24.406371956566698, 49.82892142331044, 2.1428571428571432, 106.77626019280808, 5.932014455156004, 0.016609640474436003]], ['count_file', [4, 7, 4, 9, 11, 13, 27.651484454403228, 44.97261104228487, 2.571428571428571, 115.64385696587539, 6.42465872032641, 0.014990870347428001]], ['count_sents', [4, 7, 4, 9, 11, 13, 27.651484454403228, 44.97261104228487, 2.571428571428571, 115.64385696587539, 6.42465872032641, 0.014990870347428001]], ['_build_from_file', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]], ['save_vocabulary', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build_vocab', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['encode_file', [4, 7, 4, 9, 11, 13, 27.651484454403228, 44.97261104228487, 2.571428571428571, 115.64385696587539, 6.42465872032641, 0.014990870347428001]], ['encode_sents', [4, 7, 4, 9, 11, 13, 27.651484454403228, 44.97261104228487, 2.571428571428571, 115.64385696587539, 6.42465872032641, 0.014990870347428001]], ['add_special', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['add_symbol', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_convert_id_to_token', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['_convert_token_to_id', [1, 4, 3, 6, 5, 9, 8.0, 20.89735285398626, 0.75, 15.673014640489694, 0.8707230355827601, 0.006965784284662001]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_to_tensor', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_tokenize', [2, 7, 4, 8, 9, 12, 21.651484454403228, 38.03910001730775, 1.142857142857142, 43.47325716263743, 2.415180953479857, 0.012679700005769]], ['__init__', [6, 9, 7, 13, 15, 20, 44.039100017307746, 78.13781191217038, 4.333333333333333, 338.5971849527383, 18.810954719596573, 0.026045937304056]], ['get_batch', [3, 9, 8, 16, 12, 24, 33.28421251514428, 86.03910001730776, 2.666666666666666, 229.43760004615402, 12.746533335897446, 0.028679700005769002]], ['get_fixlen_iter', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_varlen_iter', [6, 11, 7, 14, 17, 21, 53.563522809337215, 85.83671966625714, 3.818181818181818, 327.74020236207275, 18.207789020115154, 0.028612239888752004]], ['__iter__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_sent_stream', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['stream_iterator', [10, 16, 19, 34, 26, 53, 97.21928094887363, 249.1233050614779, 10.625, 2646.9351162782027, 147.0519509043446, 0.083041101687159]], ['__iter__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_sent_stream', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__iter__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [3, 8, 5, 10, 11, 15, 28.75488750216347, 51.89147427955947, 1.875, 97.296514274174, 5.405361904120777, 0.017297158093186]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build_corpus', [2, 6, 6, 12, 8, 18, 17.509775004326936, 54.0, 2.0, 108.0, 6.0, 0.018000000000000002]], ['get_iterator', [2, 8, 7, 14, 10, 21, 26.0, 69.76048999263462, 1.75, 122.08085748711058, 6.782269860395032, 0.023253496664211]], ['get_lm_corpus', [2, 5, 4, 8, 7, 12, 13.60964047443681, 33.68825906469125, 1.6, 53.901214503506004, 2.994511916861444, 0.011229419688230002]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_utils.py': {'total': [12, 167, 104, 198, 179, 302, 1276.0981668518207, 2260.1123647338054, 7.11377245508982, 16077.92508565126, 893.218060313959, 0.753370788244601], 'functions': [['bos_token', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['eos_token', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['unk_token', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['sep_token', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['pad_token', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['cls_token', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['mask_token', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['additional_special_tokens', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['bos_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['eos_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['unk_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['sep_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['pad_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['cls_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['mask_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['additional_special_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['bos_token_id', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['eos_token_id', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['unk_token_is', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['sep_token_id', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['pad_token_id', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['cls_token_id', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['mask_token_id', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['additional_special_tokens_ids', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [5, 14, 8, 16, 19, 24, 64.91260938324326, 101.95026032264605, 2.857142857142857, 291.28645806470297, 16.18258100359461, 0.033983420107548006]], ['from_pretrained', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_from_pretrained', [7, 24, 20, 36, 31, 56, 129.690584471711, 277.43499338166504, 5.25, 1456.5337152537415, 80.91853973631898, 0.09247833112722101]], ['save_pretrained', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['save_vocabulary', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__len__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['add_tokens', [6, 13, 7, 13, 19, 20, 63.61549134016113, 84.9585502688717, 3.0, 254.8756508066151, 14.159758378145284, 0.028319516756290002]], ['add_special_tokens', [6, 16, 10, 19, 22, 29, 79.50977500432694, 129.32351694048162, 3.5625, 460.7150291004658, 25.595279394470325, 0.043107838980160004]], ['tokenize', [6, 28, 20, 37, 34, 57, 150.11571282193984, 289.9853819512694, 3.964285714285714, 1149.5849070211038, 63.865828167839105, 0.096661793983756]], ['_tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_ids', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['_convert_token_to_id_with_added_voc', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_convert_token_to_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['encode', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['add_special_tokens_single_sentence', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['add_special_tokens_sentences_pair', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['convert_ids_to_tokens', [2, 6, 4, 8, 8, 12, 17.509775004326936, 36.0, 1.333333333333333, 48.0, 2.666666666666666, 0.012]], ['_convert_id_to_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['decode', [5, 13, 8, 16, 18, 24, 59.715356810271004, 100.07820003461549, 3.076923076923077, 307.9329231834323, 17.107384621301794, 0.033359400011538004]], ['special_tokens_map', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['all_special_tokens', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['all_special_ids', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['clean_up_tokenization', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_xlm.py': {'total': [13, 74, 51, 98, 87, 149, 507.60526539237657, 959.9985808814606, 8.608108108108109, 8263.771567857979, 459.09842043655436, 0.319999526960486], 'functions': [['get_pairs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['lowercase_and_remove_accent', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['replace_unicode_punct', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['remove_non_printing_char', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['romanian_preprocessing', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [4, 8, 5, 9, 12, 14, 32.0, 50.18947501009619, 2.25, 112.92631877271643, 6.273684376262024, 0.016729825003365003]], ['moses_punct_norm', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['moses_tokenize', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['moses_pipeline', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['ja_tokenize', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['bpe', [9, 25, 20, 38, 34, 58, 144.62572975734892, 295.07284479251973, 6.84, 2018.298258380835, 112.1276810211575, 0.09835761493083901]], ['_tokenize', [4, 14, 11, 22, 18, 33, 61.30296890880645, 137.6075250475963, 3.1428571428571432, 432.48079300673123, 24.026710722596178, 0.045869175015865]], ['_convert_token_to_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_id_to_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['add_special_tokens_single_sentence', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['add_special_tokens_sentences_pair', [1, 7, 4, 8, 8, 12, 19.651484454403228, 36.0, 0.5714285714285711, 20.57142857142857, 1.142857142857142, 0.012]], ['save_vocabulary', [3, 6, 4, 7, 9, 11, 20.264662506490406, 34.86917501586544, 1.75, 61.021056277764515, 3.390058682098028, 0.011623058338621001]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\tokenization_xlnet.py': {'total': [8, 42, 28, 50, 50, 78, 250.47733175670794, 440.2207828024285, 4.761904761904762, 2096.2894419163263, 116.46052455090701, 0.14674026093414202], 'functions': [['__init__', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__getstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__setstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['preprocess_text', [2, 4, 3, 4, 6, 7, 10.0, 18.094737505048094, 1.0, 18.094737505048094, 1.005263194724894, 0.006031579168349]], ['_tokenize', [6, 18, 14, 24, 24, 38, 90.56842503028855, 174.22857502740396, 4.0, 696.9143001096159, 38.717461117200884, 0.058076191675801005]], ['_convert_token_to_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_id_to_token', [1, 3, 1, 3, 4, 4, 4.754887502163469, 8.0, 0.5, 4.0, 0.22222222222222202, 0.002666666666666]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['add_special_tokens_single_sentence', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['add_special_tokens_sentences_pair', [1, 7, 4, 8, 8, 12, 19.651484454403228, 36.0, 0.5714285714285711, 20.57142857142857, 1.142857142857142, 0.012]], ['save_vocabulary', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]]]}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\__init__.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_transformers-1.2.0\\pytorch_transformers\\__main__.py': {'total': [7, 49, 31, 62, 56, 93, 294.7722668160484, 540.0840077513573, 4.428571428571429, 2391.800605756011, 132.8778114308895, 0.180028002583785], 'functions': [['main', [7, 47, 30, 60, 54, 90, 280.71716048325214, 517.9398751947123, 4.468085106382978, 2314.1994423593524, 128.5666356866307, 0.17264662506490402]]]}}"
transformers,"{'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\activations.py': [{'type': 'function', 'rank': 'A', 'name': 'get_activation', 'complexity': 2, 'lineno': 52, 'endline': 56, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'swish', 'complexity': 1, 'lineno': 11, 'endline': 12, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': '_gelu_python', 'complexity': 1, 'lineno': 15, 'endline': 22, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'gelu_new', 'complexity': 1, 'lineno': 25, 'endline': 29, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'gelu_fast', 'complexity': 1, 'lineno': 38, 'endline': 39, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_albert.py': [{'type': 'class', 'rank': 'A', 'name': 'AlbertConfig', 'complexity': 2, 'lineno': 33, 'endline': 144, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 104, 'classname': 'AlbertConfig', 'endline': 144, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 104, 'classname': 'AlbertConfig', 'endline': 144, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_auto.py': [{'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 4, 'lineno': 133, 'classname': 'AutoConfig', 'endline': 217, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AutoConfig', 'complexity': 3, 'lineno': 104, 'endline': 217, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 115, 'classname': 'AutoConfig', 'endline': 117, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'for_model', 'complexity': 2, 'lineno': 122, 'classname': 'AutoConfig', 'endline': 128, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 4, 'lineno': 133, 'classname': 'AutoConfig', 'endline': 217, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'for_model', 'complexity': 2, 'lineno': 122, 'classname': 'AutoConfig', 'endline': 128, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 115, 'classname': 'AutoConfig', 'endline': 117, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_bart.py': [{'type': 'method', 'rank': 'B', 'name': 'is_valid_mbart', 'complexity': 7, 'lineno': 138, 'classname': 'BartConfig', 'endline': 144, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BartConfig', 'complexity': 4, 'lineno': 36, 'endline': 144, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 42, 'classname': 'BartConfig', 'endline': 128, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 131, 'classname': 'BartConfig', 'endline': 132, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 135, 'classname': 'BartConfig', 'endline': 136, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'is_valid_mbart', 'complexity': 7, 'lineno': 138, 'classname': 'BartConfig', 'endline': 144, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 42, 'classname': 'BartConfig', 'endline': 128, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 131, 'classname': 'BartConfig', 'endline': 132, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 135, 'classname': 'BartConfig', 'endline': 136, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'MBartConfig', 'complexity': 1, 'lineno': 147, 'endline': 148, 'col_offset': 0, 'methods': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_bert.py': [{'type': 'class', 'rank': 'A', 'name': 'BertConfig', 'complexity': 2, 'lineno': 53, 'endline': 143, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 111, 'classname': 'BertConfig', 'endline': 143, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 111, 'classname': 'BertConfig', 'endline': 143, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_camembert.py': [{'type': 'class', 'rank': 'A', 'name': 'CamembertConfig', 'complexity': 1, 'lineno': 33, 'endline': 39, 'col_offset': 0, 'methods': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_ctrl.py': [{'type': 'class', 'rank': 'A', 'name': 'CTRLConfig', 'complexity': 2, 'lineno': 28, 'endline': 138, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 83, 'classname': 'CTRLConfig', 'endline': 122, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_position_embeddings', 'complexity': 1, 'lineno': 125, 'classname': 'CTRLConfig', 'endline': 126, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 129, 'classname': 'CTRLConfig', 'endline': 130, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 133, 'classname': 'CTRLConfig', 'endline': 134, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_hidden_layers', 'complexity': 1, 'lineno': 137, 'classname': 'CTRLConfig', 'endline': 138, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 83, 'classname': 'CTRLConfig', 'endline': 122, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_position_embeddings', 'complexity': 1, 'lineno': 125, 'classname': 'CTRLConfig', 'endline': 126, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 129, 'classname': 'CTRLConfig', 'endline': 130, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 133, 'classname': 'CTRLConfig', 'endline': 134, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_hidden_layers', 'complexity': 1, 'lineno': 137, 'classname': 'CTRLConfig', 'endline': 138, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_distilbert.py': [{'type': 'class', 'rank': 'A', 'name': 'DistilBertConfig', 'complexity': 2, 'lineno': 36, 'endline': 139, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 96, 'classname': 'DistilBertConfig', 'endline': 127, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 130, 'classname': 'DistilBertConfig', 'endline': 131, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 134, 'classname': 'DistilBertConfig', 'endline': 135, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_hidden_layers', 'complexity': 1, 'lineno': 138, 'classname': 'DistilBertConfig', 'endline': 139, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 96, 'classname': 'DistilBertConfig', 'endline': 127, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 130, 'classname': 'DistilBertConfig', 'endline': 131, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 134, 'classname': 'DistilBertConfig', 'endline': 135, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_hidden_layers', 'complexity': 1, 'lineno': 138, 'classname': 'DistilBertConfig', 'endline': 139, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_electra.py': [{'type': 'class', 'rank': 'A', 'name': 'ElectraConfig', 'complexity': 2, 'lineno': 36, 'endline': 158, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 117, 'classname': 'ElectraConfig', 'endline': 158, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 117, 'classname': 'ElectraConfig', 'endline': 158, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_encoder_decoder.py': [{'type': 'class', 'rank': 'A', 'name': 'EncoderDecoderConfig', 'complexity': 2, 'lineno': 26, 'endline': 104, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 62, 'classname': 'EncoderDecoderConfig', 'endline': 76, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_encoder_decoder_configs', 'complexity': 1, 'lineno': 79, 'classname': 'EncoderDecoderConfig', 'endline': 91, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_dict', 'complexity': 1, 'lineno': 93, 'classname': 'EncoderDecoderConfig', 'endline': 104, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 62, 'classname': 'EncoderDecoderConfig', 'endline': 76, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_encoder_decoder_configs', 'complexity': 1, 'lineno': 79, 'classname': 'EncoderDecoderConfig', 'endline': 91, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_dict', 'complexity': 1, 'lineno': 93, 'classname': 'EncoderDecoderConfig', 'endline': 104, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_flaubert.py': [{'type': 'class', 'rank': 'A', 'name': 'FlaubertConfig', 'complexity': 2, 'lineno': 33, 'endline': 152, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 147, 'classname': 'FlaubertConfig', 'endline': 152, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 147, 'classname': 'FlaubertConfig', 'endline': 152, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_gpt2.py': [{'type': 'class', 'rank': 'A', 'name': 'GPT2Config', 'complexity': 2, 'lineno': 35, 'endline': 177, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 117, 'classname': 'GPT2Config', 'endline': 161, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_position_embeddings', 'complexity': 1, 'lineno': 164, 'classname': 'GPT2Config', 'endline': 165, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 168, 'classname': 'GPT2Config', 'endline': 169, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 172, 'classname': 'GPT2Config', 'endline': 173, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_hidden_layers', 'complexity': 1, 'lineno': 176, 'classname': 'GPT2Config', 'endline': 177, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 117, 'classname': 'GPT2Config', 'endline': 161, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_position_embeddings', 'complexity': 1, 'lineno': 164, 'classname': 'GPT2Config', 'endline': 165, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 168, 'classname': 'GPT2Config', 'endline': 169, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 172, 'classname': 'GPT2Config', 'endline': 173, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_hidden_layers', 'complexity': 1, 'lineno': 176, 'classname': 'GPT2Config', 'endline': 177, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_longformer.py': [{'type': 'class', 'rank': 'A', 'name': 'LongformerConfig', 'complexity': 2, 'lineno': 34, 'endline': 68, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 65, 'classname': 'LongformerConfig', 'endline': 68, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 65, 'classname': 'LongformerConfig', 'endline': 68, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_marian.py': [{'type': 'class', 'rank': 'A', 'name': 'MarianConfig', 'complexity': 1, 'lineno': 25, 'endline': 26, 'col_offset': 0, 'methods': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_mmbt.py': [{'type': 'class', 'rank': 'A', 'name': 'MMBTConfig', 'complexity': 3, 'lineno': 25, 'endline': 42, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 38, 'classname': 'MMBTConfig', 'endline': 42, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 38, 'classname': 'MMBTConfig', 'endline': 42, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_mobilebert.py': [{'type': 'class', 'rank': 'A', 'name': 'MobileBertConfig', 'complexity': 3, 'lineno': 27, 'endline': 159, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 106, 'classname': 'MobileBertConfig', 'endline': 159, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 106, 'classname': 'MobileBertConfig', 'endline': 159, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_openai.py': [{'type': 'class', 'rank': 'A', 'name': 'OpenAIGPTConfig', 'complexity': 2, 'lineno': 31, 'endline': 172, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 115, 'classname': 'OpenAIGPTConfig', 'endline': 156, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_position_embeddings', 'complexity': 1, 'lineno': 159, 'classname': 'OpenAIGPTConfig', 'endline': 160, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 163, 'classname': 'OpenAIGPTConfig', 'endline': 164, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 167, 'classname': 'OpenAIGPTConfig', 'endline': 168, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_hidden_layers', 'complexity': 1, 'lineno': 171, 'classname': 'OpenAIGPTConfig', 'endline': 172, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 115, 'classname': 'OpenAIGPTConfig', 'endline': 156, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_position_embeddings', 'complexity': 1, 'lineno': 159, 'classname': 'OpenAIGPTConfig', 'endline': 160, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 163, 'classname': 'OpenAIGPTConfig', 'endline': 164, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 167, 'classname': 'OpenAIGPTConfig', 'endline': 168, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_hidden_layers', 'complexity': 1, 'lineno': 171, 'classname': 'OpenAIGPTConfig', 'endline': 172, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_reformer.py': [{'type': 'class', 'rank': 'A', 'name': 'ReformerConfig', 'complexity': 3, 'lineno': 32, 'endline': 206, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 141, 'classname': 'ReformerConfig', 'endline': 206, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 141, 'classname': 'ReformerConfig', 'endline': 206, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_retribert.py': [{'type': 'class', 'rank': 'A', 'name': 'RetriBertConfig', 'complexity': 2, 'lineno': 31, 'endline': 112, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 78, 'classname': 'RetriBertConfig', 'endline': 112, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 78, 'classname': 'RetriBertConfig', 'endline': 112, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_roberta.py': [{'type': 'class', 'rank': 'A', 'name': 'RobertaConfig', 'complexity': 2, 'lineno': 36, 'endline': 68, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 65, 'classname': 'RobertaConfig', 'endline': 68, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 65, 'classname': 'RobertaConfig', 'endline': 68, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_t5.py': [{'type': 'class', 'rank': 'A', 'name': 'T5Config', 'complexity': 2, 'lineno': 34, 'endline': 113, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 66, 'classname': 'T5Config', 'endline': 97, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_position_embeddings', 'complexity': 1, 'lineno': 100, 'classname': 'T5Config', 'endline': 101, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 104, 'classname': 'T5Config', 'endline': 105, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 108, 'classname': 'T5Config', 'endline': 109, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_hidden_layers', 'complexity': 1, 'lineno': 112, 'classname': 'T5Config', 'endline': 113, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 66, 'classname': 'T5Config', 'endline': 97, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_position_embeddings', 'complexity': 1, 'lineno': 100, 'classname': 'T5Config', 'endline': 101, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 104, 'classname': 'T5Config', 'endline': 105, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 108, 'classname': 'T5Config', 'endline': 109, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_hidden_layers', 'complexity': 1, 'lineno': 112, 'classname': 'T5Config', 'endline': 113, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_transfo_xl.py': [{'type': 'class', 'rank': 'A', 'name': 'TransfoXLConfig', 'complexity': 2, 'lineno': 31, 'endline': 207, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 117, 'classname': 'TransfoXLConfig', 'endline': 183, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_position_embeddings', 'complexity': 1, 'lineno': 186, 'classname': 'TransfoXLConfig', 'endline': 187, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_token', 'complexity': 1, 'lineno': 190, 'classname': 'TransfoXLConfig', 'endline': 191, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_token', 'complexity': 1, 'lineno': 194, 'classname': 'TransfoXLConfig', 'endline': 195, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 198, 'classname': 'TransfoXLConfig', 'endline': 199, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 202, 'classname': 'TransfoXLConfig', 'endline': 203, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_hidden_layers', 'complexity': 1, 'lineno': 206, 'classname': 'TransfoXLConfig', 'endline': 207, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 117, 'classname': 'TransfoXLConfig', 'endline': 183, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_position_embeddings', 'complexity': 1, 'lineno': 186, 'classname': 'TransfoXLConfig', 'endline': 187, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_token', 'complexity': 1, 'lineno': 190, 'classname': 'TransfoXLConfig', 'endline': 191, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_token', 'complexity': 1, 'lineno': 194, 'classname': 'TransfoXLConfig', 'endline': 195, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 198, 'classname': 'TransfoXLConfig', 'endline': 199, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 202, 'classname': 'TransfoXLConfig', 'endline': 203, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_hidden_layers', 'complexity': 1, 'lineno': 206, 'classname': 'TransfoXLConfig', 'endline': 207, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_utils.py': [{'type': 'method', 'rank': 'B', 'name': 'get_config_dict', 'complexity': 8, 'lineno': 204, 'classname': 'PretrainedConfig', 'endline': 266, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'from_dict', 'complexity': 7, 'lineno': 269, 'classname': 'PretrainedConfig', 'endline': 304, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 5, 'lineno': 56, 'classname': 'PretrainedConfig', 'endline': 115, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_diff_dict', 'complexity': 4, 'lineno': 334, 'classname': 'PretrainedConfig', 'endline': 355, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'PretrainedConfig', 'complexity': 3, 'lineno': 31, 'endline': 408, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 5, 'lineno': 56, 'classname': 'PretrainedConfig', 'endline': 115, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_labels', 'complexity': 1, 'lineno': 118, 'classname': 'PretrainedConfig', 'endline': 119, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_labels', 'complexity': 2, 'lineno': 122, 'classname': 'PretrainedConfig', 'endline': 124, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_pretrained', 'complexity': 2, 'lineno': 126, 'classname': 'PretrainedConfig', 'endline': 142, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 1, 'lineno': 145, 'classname': 'PretrainedConfig', 'endline': 201, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'get_config_dict', 'complexity': 8, 'lineno': 204, 'classname': 'PretrainedConfig', 'endline': 266, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'from_dict', 'complexity': 7, 'lineno': 269, 'classname': 'PretrainedConfig', 'endline': 304, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_json_file', 'complexity': 1, 'lineno': 307, 'classname': 'PretrainedConfig', 'endline': 320, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_dict_from_json_file', 'complexity': 1, 'lineno': 323, 'classname': 'PretrainedConfig', 'endline': 326, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__eq__', 'complexity': 1, 'lineno': 328, 'classname': 'PretrainedConfig', 'endline': 329, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__repr__', 'complexity': 1, 'lineno': 331, 'classname': 'PretrainedConfig', 'endline': 332, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_diff_dict', 'complexity': 4, 'lineno': 334, 'classname': 'PretrainedConfig', 'endline': 355, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_dict', 'complexity': 2, 'lineno': 357, 'classname': 'PretrainedConfig', 'endline': 367, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_json_string', 'complexity': 2, 'lineno': 369, 'classname': 'PretrainedConfig', 'endline': 384, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_json_file', 'complexity': 1, 'lineno': 386, 'classname': 'PretrainedConfig', 'endline': 397, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'update', 'complexity': 2, 'lineno': 399, 'classname': 'PretrainedConfig', 'endline': 408, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'num_labels', 'complexity': 2, 'lineno': 122, 'classname': 'PretrainedConfig', 'endline': 124, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_pretrained', 'complexity': 2, 'lineno': 126, 'classname': 'PretrainedConfig', 'endline': 142, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_dict', 'complexity': 2, 'lineno': 357, 'classname': 'PretrainedConfig', 'endline': 367, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_json_string', 'complexity': 2, 'lineno': 369, 'classname': 'PretrainedConfig', 'endline': 384, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'update', 'complexity': 2, 'lineno': 399, 'classname': 'PretrainedConfig', 'endline': 408, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_labels', 'complexity': 1, 'lineno': 118, 'classname': 'PretrainedConfig', 'endline': 119, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 1, 'lineno': 145, 'classname': 'PretrainedConfig', 'endline': 201, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_json_file', 'complexity': 1, 'lineno': 307, 'classname': 'PretrainedConfig', 'endline': 320, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_dict_from_json_file', 'complexity': 1, 'lineno': 323, 'classname': 'PretrainedConfig', 'endline': 326, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__eq__', 'complexity': 1, 'lineno': 328, 'classname': 'PretrainedConfig', 'endline': 329, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__repr__', 'complexity': 1, 'lineno': 331, 'classname': 'PretrainedConfig', 'endline': 332, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_json_file', 'complexity': 1, 'lineno': 386, 'classname': 'PretrainedConfig', 'endline': 397, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_xlm.py': [{'type': 'class', 'rank': 'A', 'name': 'XLMConfig', 'complexity': 2, 'lineno': 39, 'endline': 252, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 159, 'classname': 'XLMConfig', 'endline': 232, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_words', 'complexity': 1, 'lineno': 235, 'classname': 'XLMConfig', 'endline': 236, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_words', 'complexity': 1, 'lineno': 239, 'classname': 'XLMConfig', 'endline': 240, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 243, 'classname': 'XLMConfig', 'endline': 244, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 247, 'classname': 'XLMConfig', 'endline': 248, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_hidden_layers', 'complexity': 1, 'lineno': 251, 'classname': 'XLMConfig', 'endline': 252, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 159, 'classname': 'XLMConfig', 'endline': 232, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_words', 'complexity': 1, 'lineno': 235, 'classname': 'XLMConfig', 'endline': 236, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_words', 'complexity': 1, 'lineno': 239, 'classname': 'XLMConfig', 'endline': 240, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 243, 'classname': 'XLMConfig', 'endline': 244, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 247, 'classname': 'XLMConfig', 'endline': 248, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_hidden_layers', 'complexity': 1, 'lineno': 251, 'classname': 'XLMConfig', 'endline': 252, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_xlm_roberta.py': [{'type': 'class', 'rank': 'A', 'name': 'XLMRobertaConfig', 'complexity': 1, 'lineno': 36, 'endline': 42, 'col_offset': 0, 'methods': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_xlnet.py': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 4, 'lineno': 130, 'classname': 'XLNetConfig', 'endline': 196, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'XLNetConfig', 'complexity': 2, 'lineno': 32, 'endline': 220, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 4, 'lineno': 130, 'classname': 'XLNetConfig', 'endline': 196, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_position_embeddings', 'complexity': 1, 'lineno': 199, 'classname': 'XLNetConfig', 'endline': 200, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_token', 'complexity': 1, 'lineno': 203, 'classname': 'XLNetConfig', 'endline': 204, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_token', 'complexity': 1, 'lineno': 207, 'classname': 'XLNetConfig', 'endline': 208, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 211, 'classname': 'XLNetConfig', 'endline': 212, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 215, 'classname': 'XLNetConfig', 'endline': 216, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_hidden_layers', 'complexity': 1, 'lineno': 219, 'classname': 'XLNetConfig', 'endline': 220, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'max_position_embeddings', 'complexity': 1, 'lineno': 199, 'classname': 'XLNetConfig', 'endline': 200, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_token', 'complexity': 1, 'lineno': 203, 'classname': 'XLNetConfig', 'endline': 204, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_token', 'complexity': 1, 'lineno': 207, 'classname': 'XLNetConfig', 'endline': 208, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'hidden_size', 'complexity': 1, 'lineno': 211, 'classname': 'XLNetConfig', 'endline': 212, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_attention_heads', 'complexity': 1, 'lineno': 215, 'classname': 'XLNetConfig', 'endline': 216, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_hidden_layers', 'complexity': 1, 'lineno': 219, 'classname': 'XLNetConfig', 'endline': 220, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_albert_original_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'name': 'convert_tf_checkpoint_to_pytorch', 'complexity': 1, 'lineno': 29, 'endline': 40, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_bart_original_pytorch_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'B', 'name': 'convert_bart_checkpoint', 'complexity': 10, 'lineno': 95, 'endline': 142, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'remove_ignore_keys_', 'complexity': 2, 'lineno': 56, 'endline': 65, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'convert_checkpoint_from_disk', 'complexity': 2, 'lineno': 81, 'endline': 91, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'rename_key', 'complexity': 1, 'lineno': 68, 'endline': 70, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'load_xsum_checkpoint', 'complexity': 1, 'lineno': 73, 'endline': 78, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_bert_original_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'name': 'convert_tf_checkpoint_to_pytorch', 'complexity': 1, 'lineno': 29, 'endline': 40, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_bert_pytorch_checkpoint_to_original_tf.py': [{'type': 'function', 'rank': 'A', 'name': 'convert_pytorch_checkpoint_to_tf', 'complexity': 5, 'lineno': 28, 'endline': 89, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'to_tf_var_name', 'complexity': 2, 'lineno': 64, 'endline': 67, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'create_tf_var', 'complexity': 1, 'lineno': 69, 'endline': 74, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'main', 'complexity': 1, 'lineno': 92, 'endline': 108, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_dialogpt_original_pytorch_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'name': 'convert_dialogpt_checkpoint', 'complexity': 1, 'lineno': 15, 'endline': 19, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_electra_original_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'name': 'convert_tf_checkpoint_to_pytorch', 'complexity': 3, 'lineno': 29, 'endline': 48, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_gpt2_original_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'name': 'convert_gpt2_checkpoint_to_pytorch', 'complexity': 2, 'lineno': 29, 'endline': 47, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_graph_to_onnx.py': [{'type': 'function', 'rank': 'B', 'name': 'infer_shapes', 'complexity': 8, 'lineno': 69, 'endline': 114, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'C', 'name': 'build_shape_dict', 'complexity': 11, 'lineno': 70, 'endline': 87, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'B', 'name': 'load_graph_from_args', 'complexity': 6, 'lineno': 117, 'endline': 131, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'convert', 'complexity': 4, 'lineno': 187, 'endline': 212, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'ensure_valid_input', 'complexity': 3, 'lineno': 42, 'endline': 66, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'convert_tensorflow', 'complexity': 3, 'lineno': 161, 'endline': 183, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'convert_pytorch', 'complexity': 2, 'lineno': 134, 'endline': 157, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'verify', 'complexity': 2, 'lineno': 215, 'endline': 225, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'OnnxConverterArgumentParser', 'complexity': 2, 'lineno': 24, 'endline': 39, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 29, 'classname': 'OnnxConverterArgumentParser', 'endline': 39, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 29, 'classname': 'OnnxConverterArgumentParser', 'endline': 39, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_longformer_original_pytorch_lightning_to_pytorch.py': [{'type': 'class', 'rank': 'A', 'name': 'LightningModel', 'complexity': 2, 'lineno': 26, 'endline': 35, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 27, 'classname': 'LightningModel', 'endline': 31, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 34, 'classname': 'LightningModel', 'endline': 35, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'convert_longformer_qa_checkpoint_to_pytorch', 'complexity': 1, 'lineno': 38, 'endline': 60, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 27, 'classname': 'LightningModel', 'endline': 31, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 34, 'classname': 'LightningModel', 'endline': 35, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_marian_to_pytorch.py': [{'type': 'function', 'rank': 'B', 'name': '_parse_readme', 'complexity': 9, 'lineno': 247, 'endline': 267, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'find_pretrained_model', 'complexity': 8, 'lineno': 42, 'endline': 52, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'load_marian_model', 'complexity': 8, 'lineno': 448, 'classname': 'OpusState', 'endline': 480, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'OpusState', 'complexity': 6, 'lineno': 371, 'endline': 480, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 5, 'lineno': 372, 'classname': 'OpusState', 'endline': 417, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_check_layer_entries', 'complexity': 4, 'lineno': 420, 'classname': 'OpusState', 'endline': 429, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'extra_keys', 'complexity': 5, 'lineno': 432, 'classname': 'OpusState', 'endline': 443, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'sub_keys', 'complexity': 3, 'lineno': 445, 'classname': 'OpusState', 'endline': 446, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'load_marian_model', 'complexity': 8, 'lineno': 448, 'classname': 'OpusState', 'endline': 480, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'make_registry', 'complexity': 5, 'lineno': 189, 'endline': 203, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'convert_all_sentencepiece_models', 'complexity': 5, 'lineno': 206, 'endline': 219, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 5, 'lineno': 372, 'classname': 'OpusState', 'endline': 417, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'extra_keys', 'complexity': 5, 'lineno': 432, 'classname': 'OpusState', 'endline': 443, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': '_cast_yaml_str', 'complexity': 4, 'lineno': 64, 'endline': 73, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'write_model_card', 'complexity': 4, 'lineno': 152, 'endline': 182, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_check_layer_entries', 'complexity': 4, 'lineno': 420, 'classname': 'OpusState', 'endline': 429, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'convert_encoder_layer', 'complexity': 3, 'lineno': 24, 'endline': 32, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'load_layers_', 'complexity': 3, 'lineno': 35, 'endline': 39, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'convert_whole_dir', 'complexity': 3, 'lineno': 239, 'endline': 244, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'add_to_vocab_', 'complexity': 3, 'lineno': 276, 'endline': 284, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'check_marian_cfg_assumptions', 'complexity': 3, 'lineno': 314, 'endline': 336, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'sub_keys', 'complexity': 3, 'lineno': 445, 'classname': 'OpusState', 'endline': 446, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'remove_prefix', 'complexity': 2, 'lineno': 18, 'endline': 21, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'cast_marian_config', 'complexity': 2, 'lineno': 76, 'endline': 77, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'load_config_from_state_dict', 'complexity': 2, 'lineno': 83, 'endline': 88, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'find_model_file', 'complexity': 2, 'lineno': 91, 'endline': 95, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'convert_opus_name_to_hf_name', 'complexity': 2, 'lineno': 136, 'endline': 139, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'convert_hf_name_to_opus_name', 'complexity': 2, 'lineno': 142, 'endline': 149, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'get_clean_model_id_mapping', 'complexity': 2, 'lineno': 185, 'endline': 186, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'fetch_test_set', 'complexity': 2, 'lineno': 226, 'endline': 236, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'add_special_tokens_to_vocab', 'complexity': 2, 'lineno': 291, 'endline': 297, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'save_tokenizer', 'complexity': 2, 'lineno': 300, 'endline': 306, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'check_equal', 'complexity': 2, 'lineno': 309, 'endline': 309, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'download_and_unzip', 'complexity': 2, 'lineno': 483, 'endline': 491, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'convert', 'complexity': 2, 'lineno': 494, 'endline': 509, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'add_emb_entries', 'complexity': 1, 'lineno': 55, 'endline': 61, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'lmap', 'complexity': 1, 'lineno': 222, 'endline': 223, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'save_tokenizer_config', 'complexity': 1, 'lineno': 270, 'endline': 273, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'find_vocab_file', 'complexity': 1, 'lineno': 287, 'endline': 288, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'load_yaml', 'complexity': 1, 'lineno': 525, 'endline': 529, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'save_json', 'complexity': 1, 'lineno': 532, 'endline': 534, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'unzip', 'complexity': 1, 'lineno': 537, 'endline': 539, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_mobilebert_original_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'name': 'convert_tf_checkpoint_to_pytorch', 'complexity': 1, 'lineno': 12, 'endline': 21, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_openai_original_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'name': 'convert_openai_checkpoint_to_pytorch', 'complexity': 2, 'lineno': 29, 'endline': 47, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_pytorch_checkpoint_to_tf2.py': [{'type': 'function', 'rank': 'C', 'name': 'convert_all_pt_checkpoints_to_tf', 'complexity': 16, 'lineno': 233, 'endline': 306, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'convert_pt_checkpoint_to_tf', 'complexity': 6, 'lineno': 187, 'endline': 230, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_reformer_trax_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'B', 'name': 'set_model_weights_in_torch', 'complexity': 6, 'lineno': 128, 'endline': 170, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'set_param', 'complexity': 4, 'lineno': 31, 'endline': 37, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'set_block_weights_in_torch', 'complexity': 3, 'lineno': 79, 'endline': 124, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'set_layer_weights_in_torch_lsh', 'complexity': 1, 'lineno': 40, 'endline': 54, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'set_layer_weights_in_torch_local', 'complexity': 1, 'lineno': 58, 'endline': 75, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'convert_trax_checkpoint_to_pytorch', 'complexity': 1, 'lineno': 174, 'endline': 187, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_roberta_original_pytorch_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'C', 'name': 'convert_roberta_checkpoint_to_pytorch', 'complexity': 12, 'lineno': 42, 'endline': 154, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_t5_original_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'name': 'convert_tf_checkpoint_to_pytorch', 'complexity': 1, 'lineno': 29, 'endline': 40, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_transfo_xl_original_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'name': 'convert_transfo_xl_checkpoint_to_pytorch', 'complexity': 4, 'lineno': 47, 'endline': 88, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_xlm_original_pytorch_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'B', 'name': 'convert_xlm_checkpoint_to_pytorch', 'complexity': 8, 'lineno': 32, 'endline': 66, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_xlnet_original_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'A', 'name': 'convert_xlnet_checkpoint_to_pytorch', 'complexity': 4, 'lineno': 51, 'endline': 79, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\file_utils.py': [{'type': 'function', 'rank': 'C', 'name': 'get_from_cache', 'complexity': 19, 'lineno': 650, 'endline': 761, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': '_resumable_file_manager', 'complexity': 1, 'lineno': 732, 'endline': 734, 'col_offset': 12, 'closures': []}]}, {'type': 'function', 'rank': 'C', 'name': 'cached_path', 'complexity': 15, 'lineno': 525, 'endline': 614, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'C', 'name': 'http_get', 'complexity': 11, 'lineno': 617, 'endline': 647, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'filename_to_url', 'complexity': 5, 'lineno': 499, 'endline': 522, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'cached_property', 'complexity': 5, 'lineno': 764, 'endline': 784, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__get__', 'complexity': 4, 'lineno': 773, 'classname': 'cached_property', 'endline': 784, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__get__', 'complexity': 4, 'lineno': 773, 'classname': 'cached_property', 'endline': 784, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'hf_bucket_url', 'complexity': 3, 'lineno': 451, 'endline': 472, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'url_to_filename', 'complexity': 3, 'lineno': 475, 'endline': 496, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'is_torch_available', 'complexity': 1, 'lineno': 131, 'endline': 132, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'is_tf_available', 'complexity': 1, 'lineno': 135, 'endline': 136, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'is_torch_tpu_available', 'complexity': 1, 'lineno': 139, 'endline': 140, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'is_psutil_available', 'complexity': 1, 'lineno': 143, 'endline': 144, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'is_py3nvml_available', 'complexity': 1, 'lineno': 147, 'endline': 148, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'is_apex_available', 'complexity': 1, 'lineno': 151, 'endline': 152, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'add_start_docstrings', 'complexity': 1, 'lineno': 155, 'endline': 160, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'docstring_decorator', 'complexity': 2, 'lineno': 156, 'endline': 158, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'add_start_docstrings_to_callable', 'complexity': 1, 'lineno': 163, 'endline': 178, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'docstring_decorator', 'complexity': 2, 'lineno': 164, 'endline': 176, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'add_end_docstrings', 'complexity': 1, 'lineno': 181, 'endline': 186, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'docstring_decorator', 'complexity': 1, 'lineno': 182, 'endline': 184, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'add_code_sample_docstrings', 'complexity': 1, 'lineno': 417, 'endline': 443, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'C', 'name': 'docstring_decorator', 'complexity': 16, 'lineno': 418, 'endline': 441, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'is_remote_url', 'complexity': 1, 'lineno': 446, 'endline': 448, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'torch_required', 'complexity': 1, 'lineno': 787, 'endline': 796, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'wrapper', 'complexity': 2, 'lineno': 790, 'endline': 794, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'tf_required', 'complexity': 1, 'lineno': 799, 'endline': 808, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'wrapper', 'complexity': 2, 'lineno': 802, 'endline': 806, 'col_offset': 4, 'closures': []}]}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\generation_tf_utils.py': [{'type': 'method', 'rank': 'F', 'name': '_generate_beam_search', 'complexity': 62, 'lineno': 566, 'classname': 'TFGenerationMixin', 'endline': 884, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'F', 'name': 'generate', 'complexity': 61, 'lineno': 42, 'classname': 'TFGenerationMixin', 'endline': 401, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'D', 'name': 'TFGenerationMixin', 'complexity': 27, 'lineno': 26, 'endline': 888, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 1, 'lineno': 31, 'classname': 'TFGenerationMixin', 'endline': 32, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_use_cache', 'complexity': 5, 'lineno': 34, 'classname': 'TFGenerationMixin', 'endline': 40, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'F', 'name': 'generate', 'complexity': 61, 'lineno': 42, 'classname': 'TFGenerationMixin', 'endline': 401, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': '_generate_no_beam_search', 'complexity': 24, 'lineno': 403, 'classname': 'TFGenerationMixin', 'endline': 564, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'F', 'name': '_generate_beam_search', 'complexity': 62, 'lineno': 566, 'classname': 'TFGenerationMixin', 'endline': 884, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_reorder_cache', 'complexity': 2, 'lineno': 887, 'classname': 'TFGenerationMixin', 'endline': 888, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'D', 'name': '_generate_no_beam_search', 'complexity': 24, 'lineno': 403, 'classname': 'TFGenerationMixin', 'endline': 564, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'calc_banned_ngram_tokens', 'complexity': 8, 'lineno': 905, 'endline': 925, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': '_get_generated_ngrams', 'complexity': 1, 'lineno': 918, 'endline': 922, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'calc_banned_bad_words_ids', 'complexity': 5, 'lineno': 928, 'endline': 961, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': '_tokens_match', 'complexity': 4, 'lineno': 931, 'endline': 943, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_use_cache', 'complexity': 5, 'lineno': 34, 'classname': 'TFGenerationMixin', 'endline': 40, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'add', 'complexity': 5, 'lineno': 1066, 'classname': 'BeamHypotheses', 'endline': 1078, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'tf_top_k_top_p_filtering', 'complexity': 4, 'lineno': 964, 'endline': 1011, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': '_create_next_token_logits_penalties', 'complexity': 3, 'lineno': 891, 'endline': 902, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'shape_list', 'complexity': 3, 'lineno': 1041, 'endline': 1045, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BeamHypotheses', 'complexity': 3, 'lineno': 1048, 'endline': 1093, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1049, 'classname': 'BeamHypotheses', 'endline': 1058, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 1060, 'classname': 'BeamHypotheses', 'endline': 1064, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'add', 'complexity': 5, 'lineno': 1066, 'classname': 'BeamHypotheses', 'endline': 1078, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_done', 'complexity': 3, 'lineno': 1080, 'classname': 'BeamHypotheses', 'endline': 1093, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'is_done', 'complexity': 3, 'lineno': 1080, 'classname': 'BeamHypotheses', 'endline': 1093, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_reorder_cache', 'complexity': 2, 'lineno': 887, 'classname': 'TFGenerationMixin', 'endline': 888, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'scatter_values_on_batch_indices', 'complexity': 1, 'lineno': 1014, 'endline': 1021, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'set_tensor_by_indices_to_value', 'complexity': 1, 'lineno': 1024, 'endline': 1027, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'sample_without_replacement', 'complexity': 1, 'lineno': 1030, 'endline': 1038, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 1, 'lineno': 31, 'classname': 'TFGenerationMixin', 'endline': 32, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1049, 'classname': 'BeamHypotheses', 'endline': 1058, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 1060, 'classname': 'BeamHypotheses', 'endline': 1064, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\generation_utils.py': [{'type': 'method', 'rank': 'F', 'name': 'generate', 'complexity': 66, 'lineno': 101, 'classname': 'GenerationMixin', 'endline': 479, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'F', 'name': '_generate_beam_search', 'complexity': 48, 'lineno': 581, 'classname': 'GenerationMixin', 'endline': 837, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'C', 'name': 'GenerationMixin', 'complexity': 17, 'lineno': 28, 'endline': 841, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 1, 'lineno': 33, 'classname': 'GenerationMixin', 'endline': 34, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'adjust_logits_during_generation', 'complexity': 1, 'lineno': 36, 'classname': 'GenerationMixin', 'endline': 37, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_use_cache', 'complexity': 5, 'lineno': 39, 'classname': 'GenerationMixin', 'endline': 45, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'enforce_repetition_penalty_', 'complexity': 4, 'lineno': 47, 'classname': 'GenerationMixin', 'endline': 55, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'postprocess_next_token_scores', 'complexity': 8, 'lineno': 57, 'classname': 'GenerationMixin', 'endline': 98, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'F', 'name': 'generate', 'complexity': 66, 'lineno': 101, 'classname': 'GenerationMixin', 'endline': 479, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_generate_no_beam_search', 'complexity': 10, 'lineno': 481, 'classname': 'GenerationMixin', 'endline': 579, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'F', 'name': '_generate_beam_search', 'complexity': 48, 'lineno': 581, 'classname': 'GenerationMixin', 'endline': 837, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_reorder_cache', 'complexity': 2, 'lineno': 840, 'classname': 'GenerationMixin', 'endline': 841, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '_generate_no_beam_search', 'complexity': 10, 'lineno': 481, 'classname': 'GenerationMixin', 'endline': 579, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'calc_banned_ngram_tokens', 'complexity': 8, 'lineno': 844, 'endline': 864, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': '_get_generated_ngrams', 'complexity': 1, 'lineno': 857, 'endline': 861, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'postprocess_next_token_scores', 'complexity': 8, 'lineno': 57, 'classname': 'GenerationMixin', 'endline': 98, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'calc_banned_bad_words_ids', 'complexity': 5, 'lineno': 867, 'endline': 900, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': '_tokens_match', 'complexity': 4, 'lineno': 870, 'endline': 882, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_use_cache', 'complexity': 5, 'lineno': 39, 'classname': 'GenerationMixin', 'endline': 45, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'add', 'complexity': 5, 'lineno': 962, 'classname': 'BeamHypotheses', 'endline': 974, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'top_k_top_p_filtering', 'complexity': 4, 'lineno': 903, 'endline': 941, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'enforce_repetition_penalty_', 'complexity': 4, 'lineno': 47, 'classname': 'GenerationMixin', 'endline': 55, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BeamHypotheses', 'complexity': 3, 'lineno': 944, 'endline': 989, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 945, 'classname': 'BeamHypotheses', 'endline': 954, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 956, 'classname': 'BeamHypotheses', 'endline': 960, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'add', 'complexity': 5, 'lineno': 962, 'classname': 'BeamHypotheses', 'endline': 974, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_done', 'complexity': 3, 'lineno': 976, 'classname': 'BeamHypotheses', 'endline': 989, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'is_done', 'complexity': 3, 'lineno': 976, 'classname': 'BeamHypotheses', 'endline': 989, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_reorder_cache', 'complexity': 2, 'lineno': 840, 'classname': 'GenerationMixin', 'endline': 841, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 1, 'lineno': 33, 'classname': 'GenerationMixin', 'endline': 34, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'adjust_logits_during_generation', 'complexity': 1, 'lineno': 36, 'classname': 'GenerationMixin', 'endline': 37, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 945, 'classname': 'BeamHypotheses', 'endline': 954, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 956, 'classname': 'BeamHypotheses', 'endline': 960, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\hf_api.py': [{'type': 'class', 'rank': 'A', 'name': 'ModelInfo', 'complexity': 5, 'lineno': 71, 'endline': 95, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 4, 'lineno': 76, 'classname': 'ModelInfo', 'endline': 95, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 4, 'lineno': 76, 'classname': 'ModelInfo', 'endline': 95, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'S3Object', 'complexity': 3, 'lineno': 48, 'endline': 68, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 53, 'classname': 'S3Object', 'endline': 68, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'list_objs', 'complexity': 3, 'lineno': 172, 'classname': 'HfApi', 'endline': 181, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'HfFolder', 'complexity': 3, 'lineno': 230, 'endline': 262, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'save_token', 'complexity': 1, 'lineno': 234, 'classname': 'HfFolder', 'endline': 240, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_token', 'complexity': 2, 'lineno': 243, 'classname': 'HfFolder', 'endline': 251, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'delete_token', 'complexity': 2, 'lineno': 254, 'classname': 'HfFolder', 'endline': 262, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'S3Obj', 'complexity': 2, 'lineno': 29, 'endline': 38, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 34, 'classname': 'S3Obj', 'endline': 38, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'PresignedUrl', 'complexity': 2, 'lineno': 41, 'endline': 45, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 42, 'classname': 'PresignedUrl', 'endline': 45, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 53, 'classname': 'S3Object', 'endline': 68, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'HfApi', 'complexity': 2, 'lineno': 98, 'endline': 203, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 99, 'classname': 'HfApi', 'endline': 100, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'login', 'complexity': 1, 'lineno': 102, 'classname': 'HfApi', 'endline': 116, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'whoami', 'complexity': 1, 'lineno': 118, 'classname': 'HfApi', 'endline': 126, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'logout', 'complexity': 1, 'lineno': 128, 'classname': 'HfApi', 'endline': 134, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'presign', 'complexity': 1, 'lineno': 136, 'classname': 'HfApi', 'endline': 148, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'presign_and_upload', 'complexity': 2, 'lineno': 150, 'classname': 'HfApi', 'endline': 170, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'list_objs', 'complexity': 3, 'lineno': 172, 'classname': 'HfApi', 'endline': 181, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'delete_obj', 'complexity': 1, 'lineno': 183, 'classname': 'HfApi', 'endline': 193, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'model_list', 'complexity': 2, 'lineno': 195, 'classname': 'HfApi', 'endline': 203, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 99, 'classname': 'HfApi', 'endline': 100, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'presign_and_upload', 'complexity': 2, 'lineno': 150, 'classname': 'HfApi', 'endline': 170, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'model_list', 'complexity': 2, 'lineno': 195, 'classname': 'HfApi', 'endline': 203, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TqdmProgressFileReader', 'complexity': 2, 'lineno': 206, 'endline': 227, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 215, 'classname': 'TqdmProgressFileReader', 'endline': 220, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_read', 'complexity': 1, 'lineno': 222, 'classname': 'TqdmProgressFileReader', 'endline': 224, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'close', 'complexity': 1, 'lineno': 226, 'classname': 'TqdmProgressFileReader', 'endline': 227, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'get_token', 'complexity': 2, 'lineno': 243, 'classname': 'HfFolder', 'endline': 251, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'delete_token', 'complexity': 2, 'lineno': 254, 'classname': 'HfFolder', 'endline': 262, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 34, 'classname': 'S3Obj', 'endline': 38, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 42, 'classname': 'PresignedUrl', 'endline': 45, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'login', 'complexity': 1, 'lineno': 102, 'classname': 'HfApi', 'endline': 116, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'whoami', 'complexity': 1, 'lineno': 118, 'classname': 'HfApi', 'endline': 126, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'logout', 'complexity': 1, 'lineno': 128, 'classname': 'HfApi', 'endline': 134, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'presign', 'complexity': 1, 'lineno': 136, 'classname': 'HfApi', 'endline': 148, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'delete_obj', 'complexity': 1, 'lineno': 183, 'classname': 'HfApi', 'endline': 193, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 215, 'classname': 'TqdmProgressFileReader', 'endline': 220, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_read', 'complexity': 1, 'lineno': 222, 'classname': 'TqdmProgressFileReader', 'endline': 224, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'close', 'complexity': 1, 'lineno': 226, 'classname': 'TqdmProgressFileReader', 'endline': 227, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_token', 'complexity': 1, 'lineno': 234, 'classname': 'HfFolder', 'endline': 240, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\hf_argparser.py': [{'type': 'method', 'rank': 'C', 'name': '_add_dataclass_arguments', 'complexity': 19, 'lineno': 42, 'classname': 'HfArgumentParser', 'endline': 88, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'parse_args_into_dataclasses', 'complexity': 13, 'lineno': 90, 'classname': 'HfArgumentParser', 'endline': 146, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'C', 'name': 'HfArgumentParser', 'complexity': 11, 'lineno': 14, 'endline': 160, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 26, 'classname': 'HfArgumentParser', 'endline': 40, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '_add_dataclass_arguments', 'complexity': 19, 'lineno': 42, 'classname': 'HfArgumentParser', 'endline': 88, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'parse_args_into_dataclasses', 'complexity': 13, 'lineno': 90, 'classname': 'HfArgumentParser', 'endline': 146, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'parse_json_file', 'complexity': 5, 'lineno': 148, 'classname': 'HfArgumentParser', 'endline': 160, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'parse_json_file', 'complexity': 5, 'lineno': 148, 'classname': 'HfArgumentParser', 'endline': 160, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 26, 'classname': 'HfArgumentParser', 'endline': 40, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modelcard.py': [{'type': 'method', 'rank': 'C', 'name': 'from_pretrained', 'complexity': 14, 'lineno': 88, 'classname': 'ModelCard', 'endline': 181, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ModelCard', 'complexity': 3, 'lineno': 38, 'endline': 214, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 55, 'classname': 'ModelCard', 'endline': 73, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_pretrained', 'complexity': 2, 'lineno': 75, 'classname': 'ModelCard', 'endline': 85, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'from_pretrained', 'complexity': 14, 'lineno': 88, 'classname': 'ModelCard', 'endline': 181, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_dict', 'complexity': 1, 'lineno': 184, 'classname': 'ModelCard', 'endline': 186, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_json_file', 'complexity': 1, 'lineno': 189, 'classname': 'ModelCard', 'endline': 194, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__eq__', 'complexity': 1, 'lineno': 196, 'classname': 'ModelCard', 'endline': 197, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__repr__', 'complexity': 1, 'lineno': 199, 'classname': 'ModelCard', 'endline': 200, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_dict', 'complexity': 1, 'lineno': 202, 'classname': 'ModelCard', 'endline': 205, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_json_string', 'complexity': 1, 'lineno': 207, 'classname': 'ModelCard', 'endline': 209, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_json_file', 'complexity': 1, 'lineno': 211, 'classname': 'ModelCard', 'endline': 214, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 55, 'classname': 'ModelCard', 'endline': 73, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_pretrained', 'complexity': 2, 'lineno': 75, 'classname': 'ModelCard', 'endline': 85, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_dict', 'complexity': 1, 'lineno': 184, 'classname': 'ModelCard', 'endline': 186, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_json_file', 'complexity': 1, 'lineno': 189, 'classname': 'ModelCard', 'endline': 194, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__eq__', 'complexity': 1, 'lineno': 196, 'classname': 'ModelCard', 'endline': 197, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__repr__', 'complexity': 1, 'lineno': 199, 'classname': 'ModelCard', 'endline': 200, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_dict', 'complexity': 1, 'lineno': 202, 'classname': 'ModelCard', 'endline': 205, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_json_string', 'complexity': 1, 'lineno': 207, 'classname': 'ModelCard', 'endline': 209, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_json_file', 'complexity': 1, 'lineno': 211, 'classname': 'ModelCard', 'endline': 214, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_albert.py': [{'type': 'function', 'rank': 'D', 'name': 'load_tf_weights_in_albert', 'complexity': 28, 'lineno': 50, 'endline': 171, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 10, 'lineno': 491, 'classname': 'AlbertModel', 'endline': 573, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 1120, 'classname': 'AlbertForMultipleChoice', 'endline': 1193, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 7, 'lineno': 324, 'classname': 'AlbertTransformer', 'endline': 361, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 6, 'lineno': 292, 'classname': 'AlbertLayerGroup', 'endline': 313, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'AlbertTransformer', 'complexity': 6, 'lineno': 316, 'endline': 361, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 317, 'classname': 'AlbertTransformer', 'endline': 322, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 7, 'lineno': 324, 'classname': 'AlbertTransformer', 'endline': 361, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'AlbertPreTrainedModel', 'complexity': 6, 'lineno': 364, 'endline': 383, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '_init_weights', 'complexity': 5, 'lineno': 372, 'classname': 'AlbertPreTrainedModel', 'endline': 383, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'AlbertForMultipleChoice', 'complexity': 6, 'lineno': 1108, 'endline': 1193, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1109, 'classname': 'AlbertForMultipleChoice', 'endline': 1116, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 1120, 'classname': 'AlbertForMultipleChoice', 'endline': 1193, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'AlbertLayerGroup', 'complexity': 5, 'lineno': 286, 'endline': 313, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 287, 'classname': 'AlbertLayerGroup', 'endline': 290, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 6, 'lineno': 292, 'classname': 'AlbertLayerGroup', 'endline': 313, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_init_weights', 'complexity': 5, 'lineno': 372, 'classname': 'AlbertPreTrainedModel', 'endline': 383, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 599, 'classname': 'AlbertForPreTraining', 'endline': 697, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 1020, 'classname': 'AlbertForQuestionAnswering', 'endline': 1100, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 218, 'classname': 'AlbertAttention', 'endline': 260, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 758, 'classname': 'AlbertForMaskedLM', 'endline': 826, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AlbertForQuestionAnswering', 'complexity': 4, 'lineno': 1008, 'endline': 1100, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1009, 'classname': 'AlbertForQuestionAnswering', 'endline': 1016, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 1020, 'classname': 'AlbertForQuestionAnswering', 'endline': 1100, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'AlbertAttention', 'complexity': 3, 'lineno': 188, 'endline': 260, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 189, 'classname': 'AlbertAttention', 'endline': 198, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 200, 'classname': 'AlbertAttention', 'endline': 216, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 218, 'classname': 'AlbertAttention', 'endline': 260, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'AlbertModel', 'complexity': 3, 'lineno': 442, 'endline': 573, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 448, 'classname': 'AlbertModel', 'endline': 457, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 459, 'classname': 'AlbertModel', 'endline': 460, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 462, 'classname': 'AlbertModel', 'endline': 463, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 465, 'classname': 'AlbertModel', 'endline': 469, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 471, 'classname': 'AlbertModel', 'endline': 487, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 10, 'lineno': 491, 'classname': 'AlbertModel', 'endline': 573, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'AlbertForPreTraining', 'complexity': 3, 'lineno': 581, 'endline': 697, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 582, 'classname': 'AlbertForPreTraining', 'endline': 590, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 1, 'lineno': 592, 'classname': 'AlbertForPreTraining', 'endline': 593, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 595, 'classname': 'AlbertForPreTraining', 'endline': 596, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 599, 'classname': 'AlbertForPreTraining', 'endline': 697, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'AlbertForMaskedLM', 'complexity': 3, 'lineno': 740, 'endline': 826, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 741, 'classname': 'AlbertForMaskedLM', 'endline': 748, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 1, 'lineno': 750, 'classname': 'AlbertForMaskedLM', 'endline': 751, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 753, 'classname': 'AlbertForMaskedLM', 'endline': 754, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 758, 'classname': 'AlbertForMaskedLM', 'endline': 826, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'AlbertForSequenceClassification', 'complexity': 3, 'lineno': 834, 'endline': 913, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 835, 'classname': 'AlbertForSequenceClassification', 'endline': 843, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 847, 'classname': 'AlbertForSequenceClassification', 'endline': 913, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 847, 'classname': 'AlbertForSequenceClassification', 'endline': 913, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AlbertForTokenClassification', 'complexity': 3, 'lineno': 921, 'endline': 1000, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 922, 'classname': 'AlbertForTokenClassification', 'endline': 930, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 934, 'classname': 'AlbertForTokenClassification', 'endline': 1000, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 934, 'classname': 'AlbertForTokenClassification', 'endline': 1000, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AlbertEmbeddings', 'complexity': 2, 'lineno': 174, 'endline': 185, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 179, 'classname': 'AlbertEmbeddings', 'endline': 185, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 200, 'classname': 'AlbertAttention', 'endline': 216, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AlbertLayer', 'complexity': 2, 'lineno': 263, 'endline': 283, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 264, 'classname': 'AlbertLayer', 'endline': 272, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 274, 'classname': 'AlbertLayer', 'endline': 283, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 287, 'classname': 'AlbertLayerGroup', 'endline': 290, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 317, 'classname': 'AlbertTransformer', 'endline': 322, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 471, 'classname': 'AlbertModel', 'endline': 487, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AlbertMLMHead', 'complexity': 2, 'lineno': 700, 'endline': 721, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 701, 'classname': 'AlbertMLMHead', 'endline': 711, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 713, 'classname': 'AlbertMLMHead', 'endline': 721, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'AlbertSOPHead', 'complexity': 2, 'lineno': 724, 'endline': 734, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 725, 'classname': 'AlbertSOPHead', 'endline': 729, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 731, 'classname': 'AlbertSOPHead', 'endline': 734, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 179, 'classname': 'AlbertEmbeddings', 'endline': 185, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 189, 'classname': 'AlbertAttention', 'endline': 198, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 264, 'classname': 'AlbertLayer', 'endline': 272, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 274, 'classname': 'AlbertLayer', 'endline': 283, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 448, 'classname': 'AlbertModel', 'endline': 457, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 459, 'classname': 'AlbertModel', 'endline': 460, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 462, 'classname': 'AlbertModel', 'endline': 463, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 465, 'classname': 'AlbertModel', 'endline': 469, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 582, 'classname': 'AlbertForPreTraining', 'endline': 590, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 1, 'lineno': 592, 'classname': 'AlbertForPreTraining', 'endline': 593, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 595, 'classname': 'AlbertForPreTraining', 'endline': 596, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 701, 'classname': 'AlbertMLMHead', 'endline': 711, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 713, 'classname': 'AlbertMLMHead', 'endline': 721, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 725, 'classname': 'AlbertSOPHead', 'endline': 729, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 731, 'classname': 'AlbertSOPHead', 'endline': 734, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 741, 'classname': 'AlbertForMaskedLM', 'endline': 748, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 1, 'lineno': 750, 'classname': 'AlbertForMaskedLM', 'endline': 751, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 753, 'classname': 'AlbertForMaskedLM', 'endline': 754, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 835, 'classname': 'AlbertForSequenceClassification', 'endline': 843, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 922, 'classname': 'AlbertForTokenClassification', 'endline': 930, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1009, 'classname': 'AlbertForQuestionAnswering', 'endline': 1016, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1109, 'classname': 'AlbertForMultipleChoice', 'endline': 1116, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_auto.py': [{'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 416, 'classname': 'AutoModel', 'endline': 506, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 570, 'classname': 'AutoModelForPreTraining', 'endline': 653, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 722, 'classname': 'AutoModelWithLMHead', 'endline': 810, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 870, 'classname': 'AutoModelForCausalLM', 'endline': 945, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 1008, 'classname': 'AutoModelForMaskedLM', 'endline': 1086, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 1145, 'classname': 'AutoModelForSeq2SeqLM', 'endline': 1219, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 1284, 'classname': 'AutoModelForSequenceClassification', 'endline': 1369, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 1431, 'classname': 'AutoModelForQuestionAnswering', 'endline': 1512, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 1577, 'classname': 'AutoModelForTokenClassification', 'endline': 1660, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 1698, 'classname': 'AutoModelForMultipleChoice', 'endline': 1712, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AutoModel', 'complexity': 4, 'lineno': 356, 'endline': 506, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 366, 'classname': 'AutoModel', 'endline': 368, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 374, 'classname': 'AutoModel', 'endline': 411, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 416, 'classname': 'AutoModel', 'endline': 506, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 374, 'classname': 'AutoModel', 'endline': 411, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AutoModelForPreTraining', 'complexity': 4, 'lineno': 511, 'endline': 653, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 520, 'classname': 'AutoModelForPreTraining', 'endline': 522, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 528, 'classname': 'AutoModelForPreTraining', 'endline': 565, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 570, 'classname': 'AutoModelForPreTraining', 'endline': 653, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 528, 'classname': 'AutoModelForPreTraining', 'endline': 565, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AutoModelWithLMHead', 'complexity': 4, 'lineno': 658, 'endline': 810, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 668, 'classname': 'AutoModelWithLMHead', 'endline': 670, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 676, 'classname': 'AutoModelWithLMHead', 'endline': 717, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 722, 'classname': 'AutoModelWithLMHead', 'endline': 810, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 676, 'classname': 'AutoModelWithLMHead', 'endline': 717, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AutoModelForCausalLM', 'complexity': 4, 'lineno': 815, 'endline': 945, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 825, 'classname': 'AutoModelForCausalLM', 'endline': 827, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 833, 'classname': 'AutoModelForCausalLM', 'endline': 865, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 870, 'classname': 'AutoModelForCausalLM', 'endline': 945, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 833, 'classname': 'AutoModelForCausalLM', 'endline': 865, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AutoModelForMaskedLM', 'complexity': 4, 'lineno': 950, 'endline': 1086, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 960, 'classname': 'AutoModelForMaskedLM', 'endline': 962, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 968, 'classname': 'AutoModelForMaskedLM', 'endline': 1003, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 1008, 'classname': 'AutoModelForMaskedLM', 'endline': 1086, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 968, 'classname': 'AutoModelForMaskedLM', 'endline': 1003, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AutoModelForSeq2SeqLM', 'complexity': 4, 'lineno': 1091, 'endline': 1219, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1101, 'classname': 'AutoModelForSeq2SeqLM', 'endline': 1103, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 1109, 'classname': 'AutoModelForSeq2SeqLM', 'endline': 1140, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 1145, 'classname': 'AutoModelForSeq2SeqLM', 'endline': 1219, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 1109, 'classname': 'AutoModelForSeq2SeqLM', 'endline': 1140, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AutoModelForSequenceClassification', 'complexity': 4, 'lineno': 1224, 'endline': 1369, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1234, 'classname': 'AutoModelForSequenceClassification', 'endline': 1236, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 1242, 'classname': 'AutoModelForSequenceClassification', 'endline': 1279, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 1284, 'classname': 'AutoModelForSequenceClassification', 'endline': 1369, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 1242, 'classname': 'AutoModelForSequenceClassification', 'endline': 1279, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AutoModelForQuestionAnswering', 'complexity': 4, 'lineno': 1374, 'endline': 1512, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1384, 'classname': 'AutoModelForQuestionAnswering', 'endline': 1386, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 1392, 'classname': 'AutoModelForQuestionAnswering', 'endline': 1426, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 1431, 'classname': 'AutoModelForQuestionAnswering', 'endline': 1512, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 1392, 'classname': 'AutoModelForQuestionAnswering', 'endline': 1426, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AutoModelForTokenClassification', 'complexity': 4, 'lineno': 1517, 'endline': 1660, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1527, 'classname': 'AutoModelForTokenClassification', 'endline': 1529, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 1535, 'classname': 'AutoModelForTokenClassification', 'endline': 1572, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 1577, 'classname': 'AutoModelForTokenClassification', 'endline': 1660, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 1535, 'classname': 'AutoModelForTokenClassification', 'endline': 1572, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AutoModelForMultipleChoice', 'complexity': 4, 'lineno': 1665, 'endline': 1712, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1675, 'classname': 'AutoModelForMultipleChoice', 'endline': 1677, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 1683, 'classname': 'AutoModelForMultipleChoice', 'endline': 1693, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 1698, 'classname': 'AutoModelForMultipleChoice', 'endline': 1712, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 1683, 'classname': 'AutoModelForMultipleChoice', 'endline': 1693, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 366, 'classname': 'AutoModel', 'endline': 368, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 520, 'classname': 'AutoModelForPreTraining', 'endline': 522, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 668, 'classname': 'AutoModelWithLMHead', 'endline': 670, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 825, 'classname': 'AutoModelForCausalLM', 'endline': 827, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 960, 'classname': 'AutoModelForMaskedLM', 'endline': 962, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1101, 'classname': 'AutoModelForSeq2SeqLM', 'endline': 1103, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1234, 'classname': 'AutoModelForSequenceClassification', 'endline': 1236, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1384, 'classname': 'AutoModelForQuestionAnswering', 'endline': 1386, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1527, 'classname': 'AutoModelForTokenClassification', 'endline': 1529, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1675, 'classname': 'AutoModelForMultipleChoice', 'endline': 1677, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_bart.py': [{'type': 'method', 'rank': 'D', 'name': 'forward', 'complexity': 22, 'lineno': 590, 'classname': 'SelfAttention', 'endline': 673, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 14, 'lineno': 458, 'classname': 'BartDecoder', 'endline': 551, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'C', 'name': 'BartDecoder', 'complexity': 11, 'lineno': 427, 'endline': 551, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 6, 'lineno': 436, 'classname': 'BartDecoder', 'endline': 456, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 14, 'lineno': 458, 'classname': 'BartDecoder', 'endline': 551, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 10, 'lineno': 283, 'classname': 'BartEncoder', 'endline': 335, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_use_saved_state', 'complexity': 10, 'lineno': 675, 'classname': 'SelfAttention', 'endline': 700, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 10, 'lineno': 822, 'classname': 'BartModel', 'endline': 883, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'BartEncoder', 'complexity': 9, 'lineno': 249, 'endline': 335, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 6, 'lineno': 258, 'classname': 'BartEncoder', 'endline': 281, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 10, 'lineno': 283, 'classname': 'BartEncoder', 'endline': 335, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 9, 'lineno': 362, 'classname': 'DecoderLayer', 'endline': 423, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'SelfAttention', 'complexity': 9, 'lineno': 561, 'endline': 727, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 564, 'classname': 'SelfAttention', 'endline': 585, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_shape', 'complexity': 1, 'lineno': 587, 'classname': 'SelfAttention', 'endline': 588, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'forward', 'complexity': 22, 'lineno': 590, 'classname': 'SelfAttention', 'endline': 673, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_use_saved_state', 'complexity': 10, 'lineno': 675, 'classname': 'SelfAttention', 'endline': 700, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_cat_prev_key_padding_mask', 'complexity': 4, 'lineno': 703, 'classname': 'SelfAttention', 'endline': 727, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 7, 'lineno': 1168, 'classname': 'BartForQuestionAnswering', 'endline': 1247, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_init_weights', 'complexity': 6, 'lineno': 140, 'classname': 'PretrainedBartModel', 'endline': 151, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 6, 'lineno': 258, 'classname': 'BartEncoder', 'endline': 281, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'DecoderLayer', 'complexity': 6, 'lineno': 338, 'endline': 423, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 339, 'classname': 'DecoderLayer', 'endline': 360, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 9, 'lineno': 362, 'classname': 'DecoderLayer', 'endline': 423, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 6, 'lineno': 436, 'classname': 'BartDecoder', 'endline': 456, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'PretrainedBartModel', 'complexity': 5, 'lineno': 136, 'endline': 161, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '_init_weights', 'complexity': 6, 'lineno': 140, 'classname': 'PretrainedBartModel', 'endline': 151, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 154, 'classname': 'PretrainedBartModel', 'endline': 161, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 213, 'classname': 'EncoderLayer', 'endline': 246, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_force_token_ids_generation', 'complexity': 5, 'lineno': 1035, 'classname': 'BartForConditionalGeneration', 'endline': 1045, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_reorder_cache', 'complexity': 5, 'lineno': 1048, 'classname': 'BartForConditionalGeneration', 'endline': 1062, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BartForQuestionAnswering', 'complexity': 5, 'lineno': 1154, 'endline': 1247, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1155, 'classname': 'BartForQuestionAnswering', 'endline': 1164, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 7, 'lineno': 1168, 'classname': 'BartForQuestionAnswering', 'endline': 1247, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': '_filter_out_falsey_values', 'complexity': 4, 'lineno': 795, 'endline': 797, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'EncoderLayer', 'complexity': 4, 'lineno': 197, 'endline': 246, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 198, 'classname': 'EncoderLayer', 'endline': 211, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 213, 'classname': 'EncoderLayer', 'endline': 246, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_cat_prev_key_padding_mask', 'complexity': 4, 'lineno': 703, 'classname': 'SelfAttention', 'endline': 727, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BartModel', 'complexity': 4, 'lineno': 808, 'endline': 894, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 809, 'classname': 'BartModel', 'endline': 818, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 10, 'lineno': 822, 'classname': 'BartModel', 'endline': 883, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 885, 'classname': 'BartModel', 'endline': 886, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 888, 'classname': 'BartModel', 'endline': 891, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 893, 'classname': 'BartModel', 'endline': 894, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 926, 'classname': 'BartForConditionalGeneration', 'endline': 1013, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'adjust_logits_during_generation', 'complexity': 4, 'lineno': 1028, 'classname': 'BartForConditionalGeneration', 'endline': 1033, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BartForSequenceClassification', 'complexity': 4, 'lineno': 1075, 'endline': 1146, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1076, 'classname': 'BartForSequenceClassification', 'endline': 1083, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 1087, 'classname': 'BartForSequenceClassification', 'endline': 1146, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 1087, 'classname': 'BartForSequenceClassification', 'endline': 1146, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': '_prepare_bart_decoder_inputs', 'complexity': 3, 'lineno': 115, 'endline': 133, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': '_reorder_buffer', 'complexity': 3, 'lineno': 554, 'endline': 558, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'LayerNorm', 'complexity': 3, 'lineno': 779, 'endline': 787, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 564, 'classname': 'SelfAttention', 'endline': 585, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'LearnedPositionalEmbedding', 'complexity': 3, 'lineno': 752, 'endline': 776, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 760, 'classname': 'LearnedPositionalEmbedding', 'endline': 766, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 768, 'classname': 'LearnedPositionalEmbedding', 'endline': 776, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BartForConditionalGeneration', 'complexity': 3, 'lineno': 900, 'endline': 1068, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 903, 'classname': 'BartForConditionalGeneration', 'endline': 907, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'resize_token_embeddings', 'complexity': 1, 'lineno': 909, 'classname': 'BartForConditionalGeneration', 'endline': 914, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_final_logits_bias', 'complexity': 2, 'lineno': 916, 'classname': 'BartForConditionalGeneration', 'endline': 922, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 926, 'classname': 'BartForConditionalGeneration', 'endline': 1013, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 1015, 'classname': 'BartForConditionalGeneration', 'endline': 1025, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'adjust_logits_during_generation', 'complexity': 4, 'lineno': 1028, 'classname': 'BartForConditionalGeneration', 'endline': 1033, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_force_token_ids_generation', 'complexity': 5, 'lineno': 1035, 'classname': 'BartForConditionalGeneration', 'endline': 1045, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_reorder_cache', 'complexity': 5, 'lineno': 1048, 'classname': 'BartForConditionalGeneration', 'endline': 1062, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_encoder', 'complexity': 1, 'lineno': 1064, 'classname': 'BartForConditionalGeneration', 'endline': 1065, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 1067, 'classname': 'BartForConditionalGeneration', 'endline': 1068, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'SinusoidalPositionalEmbedding', 'complexity': 3, 'lineno': 1250, 'endline': 1283, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 1253, 'classname': 'SinusoidalPositionalEmbedding', 'endline': 1257, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_init_weight', 'complexity': 3, 'lineno': 1260, 'classname': 'SinusoidalPositionalEmbedding', 'endline': 1272, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 1275, 'classname': 'SinusoidalPositionalEmbedding', 'endline': 1283, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_init_weight', 'complexity': 3, 'lineno': 1260, 'classname': 'SinusoidalPositionalEmbedding', 'endline': 1272, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'invert_mask', 'complexity': 2, 'lineno': 109, 'endline': 112, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': '_check_shapes', 'complexity': 2, 'lineno': 172, 'endline': 174, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'make_padding_mask', 'complexity': 2, 'lineno': 186, 'endline': 191, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BartClassificationHead', 'complexity': 2, 'lineno': 730, 'endline': 749, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 735, 'classname': 'BartClassificationHead', 'endline': 741, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 743, 'classname': 'BartClassificationHead', 'endline': 749, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 760, 'classname': 'LearnedPositionalEmbedding', 'endline': 766, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 768, 'classname': 'LearnedPositionalEmbedding', 'endline': 776, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_final_logits_bias', 'complexity': 2, 'lineno': 916, 'classname': 'BartForConditionalGeneration', 'endline': 922, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 1015, 'classname': 'BartForConditionalGeneration', 'endline': 1025, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 1253, 'classname': 'SinusoidalPositionalEmbedding', 'endline': 1257, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 1275, 'classname': 'SinusoidalPositionalEmbedding', 'endline': 1283, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': '_make_linear_from_emb', 'complexity': 1, 'lineno': 164, 'endline': 168, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'shift_tokens_right', 'complexity': 1, 'lineno': 177, 'endline': 183, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'fill_with_neg_inf', 'complexity': 1, 'lineno': 790, 'endline': 792, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': '_get_shape', 'complexity': 1, 'lineno': 801, 'endline': 802, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 154, 'classname': 'PretrainedBartModel', 'endline': 161, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 198, 'classname': 'EncoderLayer', 'endline': 211, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 339, 'classname': 'DecoderLayer', 'endline': 360, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_shape', 'complexity': 1, 'lineno': 587, 'classname': 'SelfAttention', 'endline': 588, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 735, 'classname': 'BartClassificationHead', 'endline': 741, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 743, 'classname': 'BartClassificationHead', 'endline': 749, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 809, 'classname': 'BartModel', 'endline': 818, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 885, 'classname': 'BartModel', 'endline': 886, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 888, 'classname': 'BartModel', 'endline': 891, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 893, 'classname': 'BartModel', 'endline': 894, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 903, 'classname': 'BartForConditionalGeneration', 'endline': 907, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'resize_token_embeddings', 'complexity': 1, 'lineno': 909, 'classname': 'BartForConditionalGeneration', 'endline': 914, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_encoder', 'complexity': 1, 'lineno': 1064, 'classname': 'BartForConditionalGeneration', 'endline': 1065, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 1067, 'classname': 'BartForConditionalGeneration', 'endline': 1068, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1076, 'classname': 'BartForSequenceClassification', 'endline': 1083, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1155, 'classname': 'BartForQuestionAnswering', 'endline': 1164, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_bert.py': [{'type': 'function', 'rank': 'C', 'name': 'load_tf_weights_in_bert', 'complexity': 20, 'lineno': 66, 'endline': 135, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 13, 'lineno': 670, 'classname': 'BertModel', 'endline': 770, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 400, 'classname': 'BertEncoder', 'endline': 455, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'create_custom_forward', 'complexity': 1, 'lineno': 418, 'endline': 422, 'col_offset': 16, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'custom_forward', 'complexity': 1, 'lineno': 419, 'endline': 420, 'col_offset': 20, 'closures': []}]}]}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 1307, 'classname': 'BertForMultipleChoice', 'endline': 1381, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 6, 'lineno': 163, 'classname': 'BertEmbeddings', 'endline': 185, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'BertEncoder', 'complexity': 6, 'lineno': 394, 'endline': 455, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 395, 'classname': 'BertEncoder', 'endline': 398, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 400, 'classname': 'BertEncoder', 'endline': 455, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'create_custom_forward', 'complexity': 1, 'lineno': 418, 'endline': 422, 'col_offset': 16, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'custom_forward', 'complexity': 1, 'lineno': 419, 'endline': 420, 'col_offset': 20, 'closures': []}]}]}]}, {'type': 'class', 'rank': 'B', 'name': 'BertPreTrainedModel', 'complexity': 6, 'lineno': 542, 'endline': 561, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '_init_weights', 'complexity': 5, 'lineno': 551, 'classname': 'BertPreTrainedModel', 'endline': 561, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'BertForMultipleChoice', 'complexity': 6, 'lineno': 1295, 'endline': 1381, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1296, 'classname': 'BertForMultipleChoice', 'endline': 1303, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 1307, 'classname': 'BertForMultipleChoice', 'endline': 1381, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertEmbeddings', 'complexity': 5, 'lineno': 148, 'endline': 185, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 152, 'classname': 'BertEmbeddings', 'endline': 161, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 6, 'lineno': 163, 'classname': 'BertEmbeddings', 'endline': 185, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 212, 'classname': 'BertSelfAttention', 'endline': 263, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_init_weights', 'complexity': 5, 'lineno': 551, 'classname': 'BertPreTrainedModel', 'endline': 561, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 791, 'classname': 'BertForPreTraining', 'endline': 888, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 1022, 'classname': 'BertForMaskedLM', 'endline': 1096, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 1489, 'classname': 'BertForQuestionAnswering', 'endline': 1569, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertSelfAttention', 'complexity': 4, 'lineno': 188, 'endline': 263, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 189, 'classname': 'BertSelfAttention', 'endline': 205, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'transpose_for_scores', 'complexity': 1, 'lineno': 207, 'classname': 'BertSelfAttention', 'endline': 210, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 212, 'classname': 'BertSelfAttention', 'endline': 263, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertLayer', 'complexity': 4, 'lineno': 351, 'endline': 391, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 352, 'classname': 'BertLayer', 'endline': 359, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 361, 'classname': 'BertLayer', 'endline': 391, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertModel', 'complexity': 4, 'lineno': 627, 'endline': 770, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 644, 'classname': 'BertModel', 'endline': 652, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 654, 'classname': 'BertModel', 'endline': 655, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 657, 'classname': 'BertModel', 'endline': 658, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 660, 'classname': 'BertModel', 'endline': 666, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 13, 'lineno': 670, 'classname': 'BertModel', 'endline': 770, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForQuestionAnswering', 'complexity': 4, 'lineno': 1477, 'endline': 1569, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1478, 'classname': 'BertForQuestionAnswering', 'endline': 1485, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 1489, 'classname': 'BertForQuestionAnswering', 'endline': 1569, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 189, 'classname': 'BertSelfAttention', 'endline': 205, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertIntermediate', 'complexity': 3, 'lineno': 322, 'endline': 334, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 323, 'classname': 'BertIntermediate', 'endline': 329, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 331, 'classname': 'BertIntermediate', 'endline': 334, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 361, 'classname': 'BertLayer', 'endline': 391, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertPredictionHeadTransform', 'complexity': 3, 'lineno': 473, 'endline': 487, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 474, 'classname': 'BertPredictionHeadTransform', 'endline': 481, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 483, 'classname': 'BertPredictionHeadTransform', 'endline': 487, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForPreTraining', 'complexity': 3, 'lineno': 778, 'endline': 888, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 779, 'classname': 'BertForPreTraining', 'endline': 785, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 787, 'classname': 'BertForPreTraining', 'endline': 788, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 791, 'classname': 'BertForPreTraining', 'endline': 888, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertLMHeadModel', 'complexity': 3, 'lineno': 894, 'endline': 1001, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 895, 'classname': 'BertLMHeadModel', 'endline': 902, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 904, 'classname': 'BertLMHeadModel', 'endline': 905, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 908, 'classname': 'BertLMHeadModel', 'endline': 992, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 994, 'classname': 'BertLMHeadModel', 'endline': 1001, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForMaskedLM', 'complexity': 3, 'lineno': 1005, 'endline': 1110, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 1006, 'classname': 'BertForMaskedLM', 'endline': 1015, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 1017, 'classname': 'BertForMaskedLM', 'endline': 1018, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 1022, 'classname': 'BertForMaskedLM', 'endline': 1096, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 1098, 'classname': 'BertForMaskedLM', 'endline': 1110, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForNextSentencePrediction', 'complexity': 3, 'lineno': 1116, 'endline': 1200, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1117, 'classname': 'BertForNextSentencePrediction', 'endline': 1123, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 1126, 'classname': 'BertForNextSentencePrediction', 'endline': 1200, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForSequenceClassification', 'complexity': 3, 'lineno': 1208, 'endline': 1287, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1209, 'classname': 'BertForSequenceClassification', 'endline': 1217, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1221, 'classname': 'BertForSequenceClassification', 'endline': 1287, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1221, 'classname': 'BertForSequenceClassification', 'endline': 1287, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertForTokenClassification', 'complexity': 3, 'lineno': 1389, 'endline': 1469, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1390, 'classname': 'BertForTokenClassification', 'endline': 1398, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1402, 'classname': 'BertForTokenClassification', 'endline': 1469, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1402, 'classname': 'BertForTokenClassification', 'endline': 1469, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertSelfOutput', 'complexity': 2, 'lineno': 266, 'endline': 277, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 267, 'classname': 'BertSelfOutput', 'endline': 271, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 273, 'classname': 'BertSelfOutput', 'endline': 277, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertAttention', 'complexity': 2, 'lineno': 280, 'endline': 319, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 281, 'classname': 'BertAttention', 'endline': 285, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 287, 'classname': 'BertAttention', 'endline': 303, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 305, 'classname': 'BertAttention', 'endline': 319, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 287, 'classname': 'BertAttention', 'endline': 303, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 323, 'classname': 'BertIntermediate', 'endline': 329, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertOutput', 'complexity': 2, 'lineno': 337, 'endline': 348, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 338, 'classname': 'BertOutput', 'endline': 342, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 344, 'classname': 'BertOutput', 'endline': 348, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 352, 'classname': 'BertLayer', 'endline': 359, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 395, 'classname': 'BertEncoder', 'endline': 398, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertPooler', 'complexity': 2, 'lineno': 458, 'endline': 470, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 459, 'classname': 'BertPooler', 'endline': 462, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 464, 'classname': 'BertPooler', 'endline': 470, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 474, 'classname': 'BertPredictionHeadTransform', 'endline': 481, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertLMPredictionHead', 'complexity': 2, 'lineno': 490, 'endline': 507, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 491, 'classname': 'BertLMPredictionHead', 'endline': 502, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 504, 'classname': 'BertLMPredictionHead', 'endline': 507, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertOnlyMLMHead', 'complexity': 2, 'lineno': 510, 'endline': 517, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 511, 'classname': 'BertOnlyMLMHead', 'endline': 513, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 515, 'classname': 'BertOnlyMLMHead', 'endline': 517, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertOnlyNSPHead', 'complexity': 2, 'lineno': 520, 'endline': 527, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 521, 'classname': 'BertOnlyNSPHead', 'endline': 523, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 525, 'classname': 'BertOnlyNSPHead', 'endline': 527, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertPreTrainingHeads', 'complexity': 2, 'lineno': 530, 'endline': 539, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 531, 'classname': 'BertPreTrainingHeads', 'endline': 534, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 536, 'classname': 'BertPreTrainingHeads', 'endline': 539, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 660, 'classname': 'BertModel', 'endline': 666, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 895, 'classname': 'BertLMHeadModel', 'endline': 902, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 908, 'classname': 'BertLMHeadModel', 'endline': 992, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 994, 'classname': 'BertLMHeadModel', 'endline': 1001, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 1006, 'classname': 'BertForMaskedLM', 'endline': 1015, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 1098, 'classname': 'BertForMaskedLM', 'endline': 1110, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 1126, 'classname': 'BertForNextSentencePrediction', 'endline': 1200, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'mish', 'complexity': 1, 'lineno': 138, 'endline': 139, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 152, 'classname': 'BertEmbeddings', 'endline': 161, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'transpose_for_scores', 'complexity': 1, 'lineno': 207, 'classname': 'BertSelfAttention', 'endline': 210, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 267, 'classname': 'BertSelfOutput', 'endline': 271, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 273, 'classname': 'BertSelfOutput', 'endline': 277, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 281, 'classname': 'BertAttention', 'endline': 285, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 305, 'classname': 'BertAttention', 'endline': 319, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 331, 'classname': 'BertIntermediate', 'endline': 334, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 338, 'classname': 'BertOutput', 'endline': 342, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 344, 'classname': 'BertOutput', 'endline': 348, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 459, 'classname': 'BertPooler', 'endline': 462, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 464, 'classname': 'BertPooler', 'endline': 470, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 483, 'classname': 'BertPredictionHeadTransform', 'endline': 487, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 491, 'classname': 'BertLMPredictionHead', 'endline': 502, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 504, 'classname': 'BertLMPredictionHead', 'endline': 507, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 511, 'classname': 'BertOnlyMLMHead', 'endline': 513, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 515, 'classname': 'BertOnlyMLMHead', 'endline': 517, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 521, 'classname': 'BertOnlyNSPHead', 'endline': 523, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 525, 'classname': 'BertOnlyNSPHead', 'endline': 527, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 531, 'classname': 'BertPreTrainingHeads', 'endline': 534, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 536, 'classname': 'BertPreTrainingHeads', 'endline': 539, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 644, 'classname': 'BertModel', 'endline': 652, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 654, 'classname': 'BertModel', 'endline': 655, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 657, 'classname': 'BertModel', 'endline': 658, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 779, 'classname': 'BertForPreTraining', 'endline': 785, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 787, 'classname': 'BertForPreTraining', 'endline': 788, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 904, 'classname': 'BertLMHeadModel', 'endline': 905, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 1017, 'classname': 'BertForMaskedLM', 'endline': 1018, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1117, 'classname': 'BertForNextSentencePrediction', 'endline': 1123, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1209, 'classname': 'BertForSequenceClassification', 'endline': 1217, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1296, 'classname': 'BertForMultipleChoice', 'endline': 1303, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1390, 'classname': 'BertForTokenClassification', 'endline': 1398, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1478, 'classname': 'BertForQuestionAnswering', 'endline': 1485, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_camembert.py': [{'type': 'class', 'rank': 'A', 'name': 'CamembertModel', 'complexity': 1, 'lineno': 63, 'endline': 69, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'CamembertForMaskedLM', 'complexity': 1, 'lineno': 75, 'endline': 81, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'CamembertForSequenceClassification', 'complexity': 1, 'lineno': 89, 'endline': 95, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'CamembertForMultipleChoice', 'complexity': 1, 'lineno': 103, 'endline': 109, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'CamembertForTokenClassification', 'complexity': 1, 'lineno': 117, 'endline': 123, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'CamembertForQuestionAnswering', 'complexity': 1, 'lineno': 131, 'endline': 137, 'col_offset': 0, 'methods': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_ctrl.py': [{'type': 'method', 'rank': 'D', 'name': 'forward', 'complexity': 24, 'lineno': 332, 'classname': 'CTRLModel', 'endline': 475, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'CTRLModel', 'complexity': 7, 'lineno': 298, 'endline': 475, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 299, 'classname': 'CTRLModel', 'endline': 315, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 317, 'classname': 'CTRLModel', 'endline': 318, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 320, 'classname': 'CTRLModel', 'endline': 321, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 323, 'classname': 'CTRLModel', 'endline': 328, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'forward', 'complexity': 24, 'lineno': 332, 'classname': 'CTRLModel', 'endline': 475, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'CTRLPreTrainedModel', 'complexity': 6, 'lineno': 211, 'endline': 230, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '_init_weights', 'complexity': 5, 'lineno': 219, 'classname': 'CTRLPreTrainedModel', 'endline': 230, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_init_weights', 'complexity': 5, 'lineno': 219, 'classname': 'CTRLPreTrainedModel', 'endline': 230, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'scaled_dot_product_attention', 'complexity': 4, 'lineno': 61, 'endline': 84, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 123, 'classname': 'MultiHeadAttention', 'endline': 163, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'MultiHeadAttention', 'complexity': 3, 'lineno': 87, 'endline': 163, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 88, 'classname': 'MultiHeadAttention', 'endline': 100, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 102, 'classname': 'MultiHeadAttention', 'endline': 117, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'split_into_heads', 'complexity': 1, 'lineno': 119, 'classname': 'MultiHeadAttention', 'endline': 121, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 123, 'classname': 'MultiHeadAttention', 'endline': 163, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 102, 'classname': 'MultiHeadAttention', 'endline': 117, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'EncoderLayer', 'complexity': 2, 'lineno': 170, 'endline': 208, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 171, 'classname': 'EncoderLayer', 'endline': 181, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 183, 'classname': 'EncoderLayer', 'endline': 208, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 299, 'classname': 'CTRLModel', 'endline': 315, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 323, 'classname': 'CTRLModel', 'endline': 328, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'CTRLLMHeadModel', 'complexity': 2, 'lineno': 483, 'endline': 574, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 484, 'classname': 'CTRLLMHeadModel', 'endline': 489, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 491, 'classname': 'CTRLLMHeadModel', 'endline': 492, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 494, 'classname': 'CTRLLMHeadModel', 'endline': 499, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 503, 'classname': 'CTRLLMHeadModel', 'endline': 574, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 494, 'classname': 'CTRLLMHeadModel', 'endline': 499, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 503, 'classname': 'CTRLLMHeadModel', 'endline': 574, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'angle_defn', 'complexity': 1, 'lineno': 41, 'endline': 43, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'positional_encoding', 'complexity': 1, 'lineno': 46, 'endline': 58, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'point_wise_feed_forward_network', 'complexity': 1, 'lineno': 166, 'endline': 167, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 88, 'classname': 'MultiHeadAttention', 'endline': 100, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'split_into_heads', 'complexity': 1, 'lineno': 119, 'classname': 'MultiHeadAttention', 'endline': 121, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 171, 'classname': 'EncoderLayer', 'endline': 181, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 183, 'classname': 'EncoderLayer', 'endline': 208, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 317, 'classname': 'CTRLModel', 'endline': 318, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 320, 'classname': 'CTRLModel', 'endline': 321, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 484, 'classname': 'CTRLLMHeadModel', 'endline': 489, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 491, 'classname': 'CTRLLMHeadModel', 'endline': 492, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_distilbert.py': [{'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 10, 'lineno': 414, 'classname': 'DistilBertModel', 'endline': 474, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 9, 'lineno': 267, 'classname': 'Transformer', 'endline': 316, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'DistilBertPreTrainedModel', 'complexity': 8, 'lineno': 320, 'endline': 341, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '_init_weights', 'complexity': 7, 'lineno': 329, 'classname': 'DistilBertPreTrainedModel', 'endline': 341, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'Transformer', 'complexity': 7, 'lineno': 259, 'endline': 316, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 260, 'classname': 'Transformer', 'endline': 265, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 9, 'lineno': 267, 'classname': 'Transformer', 'endline': 316, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '_init_weights', 'complexity': 7, 'lineno': 329, 'classname': 'DistilBertPreTrainedModel', 'endline': 341, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 6, 'lineno': 847, 'classname': 'DistilBertForMultipleChoice', 'endline': 938, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'DistilBertForQuestionAnswering', 'complexity': 5, 'lineno': 655, 'endline': 743, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 656, 'classname': 'DistilBertForQuestionAnswering', 'endline': 664, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 668, 'classname': 'DistilBertForQuestionAnswering', 'endline': 743, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 668, 'classname': 'DistilBertForQuestionAnswering', 'endline': 743, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'DistilBertForMultipleChoice', 'complexity': 5, 'lineno': 835, 'endline': 938, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 836, 'classname': 'DistilBertForMultipleChoice', 'endline': 844, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 6, 'lineno': 847, 'classname': 'DistilBertForMultipleChoice', 'endline': 938, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TransformerBlock', 'complexity': 4, 'lineno': 212, 'endline': 256, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 213, 'classname': 'TransformerBlock', 'endline': 222, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 224, 'classname': 'TransformerBlock', 'endline': 256, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 224, 'classname': 'TransformerBlock', 'endline': 256, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'DistilBertModel', 'complexity': 4, 'lineno': 389, 'endline': 474, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 390, 'classname': 'DistilBertModel', 'endline': 396, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 398, 'classname': 'DistilBertModel', 'endline': 399, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 401, 'classname': 'DistilBertModel', 'endline': 402, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 404, 'classname': 'DistilBertModel', 'endline': 410, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 10, 'lineno': 414, 'classname': 'DistilBertModel', 'endline': 474, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 498, 'classname': 'DistilBertForMaskedLM', 'endline': 564, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'create_sinusoidal_embeddings', 'complexity': 3, 'lineno': 56, 'endline': 61, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'Embeddings', 'complexity': 3, 'lineno': 64, 'endline': 99, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 65, 'classname': 'Embeddings', 'endline': 75, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 77, 'classname': 'Embeddings', 'endline': 99, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'MultiHeadSelfAttention', 'complexity': 3, 'lineno': 102, 'endline': 190, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 103, 'classname': 'MultiHeadSelfAttention', 'endline': 117, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 119, 'classname': 'MultiHeadSelfAttention', 'endline': 132, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 134, 'classname': 'MultiHeadSelfAttention', 'endline': 190, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'shape', 'complexity': 1, 'lineno': 159, 'endline': 161, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'unshape', 'complexity': 1, 'lineno': 163, 'endline': 165, 'col_offset': 8, 'closures': []}]}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 134, 'classname': 'MultiHeadSelfAttention', 'endline': 190, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'shape', 'complexity': 1, 'lineno': 159, 'endline': 161, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'unshape', 'complexity': 1, 'lineno': 163, 'endline': 165, 'col_offset': 8, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'FFN', 'complexity': 3, 'lineno': 193, 'endline': 209, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 194, 'classname': 'FFN', 'endline': 202, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 204, 'classname': 'FFN', 'endline': 209, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 194, 'classname': 'FFN', 'endline': 202, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'DistilBertForMaskedLM', 'complexity': 3, 'lineno': 480, 'endline': 564, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 481, 'classname': 'DistilBertForMaskedLM', 'endline': 491, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 493, 'classname': 'DistilBertForMaskedLM', 'endline': 494, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 498, 'classname': 'DistilBertForMaskedLM', 'endline': 564, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'DistilBertForSequenceClassification', 'complexity': 3, 'lineno': 572, 'endline': 647, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 573, 'classname': 'DistilBertForSequenceClassification', 'endline': 582, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 586, 'classname': 'DistilBertForSequenceClassification', 'endline': 647, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 586, 'classname': 'DistilBertForSequenceClassification', 'endline': 647, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'DistilBertForTokenClassification', 'complexity': 3, 'lineno': 751, 'endline': 827, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 752, 'classname': 'DistilBertForTokenClassification', 'endline': 760, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 764, 'classname': 'DistilBertForTokenClassification', 'endline': 827, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 764, 'classname': 'DistilBertForTokenClassification', 'endline': 827, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 65, 'classname': 'Embeddings', 'endline': 75, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 103, 'classname': 'MultiHeadSelfAttention', 'endline': 117, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 119, 'classname': 'MultiHeadSelfAttention', 'endline': 132, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 213, 'classname': 'TransformerBlock', 'endline': 222, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 260, 'classname': 'Transformer', 'endline': 265, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 404, 'classname': 'DistilBertModel', 'endline': 410, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 656, 'classname': 'DistilBertForQuestionAnswering', 'endline': 664, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 77, 'classname': 'Embeddings', 'endline': 99, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 204, 'classname': 'FFN', 'endline': 209, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 390, 'classname': 'DistilBertModel', 'endline': 396, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 398, 'classname': 'DistilBertModel', 'endline': 399, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 401, 'classname': 'DistilBertModel', 'endline': 402, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 481, 'classname': 'DistilBertForMaskedLM', 'endline': 491, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 493, 'classname': 'DistilBertForMaskedLM', 'endline': 494, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 573, 'classname': 'DistilBertForSequenceClassification', 'endline': 582, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 752, 'classname': 'DistilBertForTokenClassification', 'endline': 760, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 836, 'classname': 'DistilBertForMultipleChoice', 'endline': 844, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_electra.py': [{'type': 'function', 'rank': 'D', 'name': 'load_tf_weights_in_electra', 'complexity': 22, 'lineno': 31, 'endline': 109, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 11, 'lineno': 269, 'classname': 'ElectraModel', 'endline': 337, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 851, 'classname': 'ElectraForMultipleChoice', 'endline': 925, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'ElectraForMultipleChoice', 'complexity': 6, 'lineno': 839, 'endline': 925, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 840, 'classname': 'ElectraForMultipleChoice', 'endline': 847, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 851, 'classname': 'ElectraForMultipleChoice', 'endline': 925, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 751, 'classname': 'ElectraForQuestionAnswering', 'endline': 831, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ElectraModel', 'complexity': 4, 'lineno': 238, 'endline': 337, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 242, 'classname': 'ElectraModel', 'endline': 251, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 253, 'classname': 'ElectraModel', 'endline': 254, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 256, 'classname': 'ElectraModel', 'endline': 257, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 259, 'classname': 'ElectraModel', 'endline': 265, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 11, 'lineno': 269, 'classname': 'ElectraModel', 'endline': 337, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 565, 'classname': 'ElectraForMaskedLM', 'endline': 638, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ElectraForQuestionAnswering', 'complexity': 4, 'lineno': 736, 'endline': 831, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 740, 'classname': 'ElectraForQuestionAnswering', 'endline': 747, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 751, 'classname': 'ElectraForQuestionAnswering', 'endline': 831, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'ElectraForSequenceClassification', 'complexity': 3, 'lineno': 364, 'endline': 438, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 365, 'classname': 'ElectraForSequenceClassification', 'endline': 371, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 375, 'classname': 'ElectraForSequenceClassification', 'endline': 438, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 375, 'classname': 'ElectraForSequenceClassification', 'endline': 438, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ElectraForPreTraining', 'complexity': 3, 'lineno': 449, 'endline': 539, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 450, 'classname': 'ElectraForPreTraining', 'endline': 455, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 458, 'classname': 'ElectraForPreTraining', 'endline': 539, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 458, 'classname': 'ElectraForPreTraining', 'endline': 539, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ElectraForMaskedLM', 'complexity': 3, 'lineno': 550, 'endline': 638, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 551, 'classname': 'ElectraForMaskedLM', 'endline': 558, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 560, 'classname': 'ElectraForMaskedLM', 'endline': 561, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 565, 'classname': 'ElectraForMaskedLM', 'endline': 638, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'ElectraForTokenClassification', 'complexity': 3, 'lineno': 648, 'endline': 727, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 649, 'classname': 'ElectraForTokenClassification', 'endline': 655, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 659, 'classname': 'ElectraForTokenClassification', 'endline': 727, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 659, 'classname': 'ElectraForTokenClassification', 'endline': 727, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ElectraEmbeddings', 'complexity': 2, 'lineno': 112, 'endline': 123, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 115, 'classname': 'ElectraEmbeddings', 'endline': 123, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'ElectraDiscriminatorPredictions', 'complexity': 2, 'lineno': 126, 'endline': 141, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 129, 'classname': 'ElectraDiscriminatorPredictions', 'endline': 134, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 136, 'classname': 'ElectraDiscriminatorPredictions', 'endline': 141, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'ElectraGeneratorPredictions', 'complexity': 2, 'lineno': 144, 'endline': 158, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 147, 'classname': 'ElectraGeneratorPredictions', 'endline': 151, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 153, 'classname': 'ElectraGeneratorPredictions', 'endline': 158, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 242, 'classname': 'ElectraModel', 'endline': 251, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 259, 'classname': 'ElectraModel', 'endline': 265, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ElectraClassificationHead', 'complexity': 2, 'lineno': 340, 'endline': 356, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 343, 'classname': 'ElectraClassificationHead', 'endline': 347, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 349, 'classname': 'ElectraClassificationHead', 'endline': 356, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 115, 'classname': 'ElectraEmbeddings', 'endline': 123, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 129, 'classname': 'ElectraDiscriminatorPredictions', 'endline': 134, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 136, 'classname': 'ElectraDiscriminatorPredictions', 'endline': 141, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 147, 'classname': 'ElectraGeneratorPredictions', 'endline': 151, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 153, 'classname': 'ElectraGeneratorPredictions', 'endline': 158, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ElectraPreTrainedModel', 'complexity': 1, 'lineno': 161, 'endline': 168, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 253, 'classname': 'ElectraModel', 'endline': 254, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 256, 'classname': 'ElectraModel', 'endline': 257, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 343, 'classname': 'ElectraClassificationHead', 'endline': 347, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 349, 'classname': 'ElectraClassificationHead', 'endline': 356, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 365, 'classname': 'ElectraForSequenceClassification', 'endline': 371, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 450, 'classname': 'ElectraForPreTraining', 'endline': 455, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 551, 'classname': 'ElectraForMaskedLM', 'endline': 558, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 560, 'classname': 'ElectraForMaskedLM', 'endline': 561, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 649, 'classname': 'ElectraForTokenClassification', 'endline': 655, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 740, 'classname': 'ElectraForQuestionAnswering', 'endline': 747, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 840, 'classname': 'ElectraForMultipleChoice', 'endline': 847, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_encoder_decoder.py': [{'type': 'method', 'rank': 'C', 'name': 'from_encoder_decoder_pretrained', 'complexity': 12, 'lineno': 91, 'classname': 'EncoderDecoderModel', 'endline': 180, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 7, 'lineno': 40, 'classname': 'EncoderDecoderModel', 'endline': 40, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 6, 'lineno': 182, 'classname': 'EncoderDecoderModel', 'endline': 293, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'EncoderDecoderModel', 'complexity': 4, 'lineno': 29, 'endline': 316, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 7, 'lineno': 40, 'classname': 'EncoderDecoderModel', 'endline': 40, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 1, 'lineno': 74, 'classname': 'EncoderDecoderModel', 'endline': 76, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_encoder', 'complexity': 1, 'lineno': 78, 'classname': 'EncoderDecoderModel', 'endline': 79, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_decoder', 'complexity': 1, 'lineno': 81, 'classname': 'EncoderDecoderModel', 'endline': 82, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 84, 'classname': 'EncoderDecoderModel', 'endline': 85, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 87, 'classname': 'EncoderDecoderModel', 'endline': 88, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'from_encoder_decoder_pretrained', 'complexity': 12, 'lineno': 91, 'classname': 'EncoderDecoderModel', 'endline': 180, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 6, 'lineno': 182, 'classname': 'EncoderDecoderModel', 'endline': 293, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 3, 'lineno': 295, 'classname': 'EncoderDecoderModel', 'endline': 310, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_reorder_cache', 'complexity': 1, 'lineno': 313, 'classname': 'EncoderDecoderModel', 'endline': 316, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 3, 'lineno': 295, 'classname': 'EncoderDecoderModel', 'endline': 310, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 1, 'lineno': 74, 'classname': 'EncoderDecoderModel', 'endline': 76, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_encoder', 'complexity': 1, 'lineno': 78, 'classname': 'EncoderDecoderModel', 'endline': 79, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_decoder', 'complexity': 1, 'lineno': 81, 'classname': 'EncoderDecoderModel', 'endline': 82, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 84, 'classname': 'EncoderDecoderModel', 'endline': 85, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 87, 'classname': 'EncoderDecoderModel', 'endline': 88, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_reorder_cache', 'complexity': 1, 'lineno': 313, 'classname': 'EncoderDecoderModel', 'endline': 316, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_flaubert.py': [{'type': 'method', 'rank': 'E', 'name': 'forward', 'complexity': 33, 'lineno': 125, 'classname': 'FlaubertModel', 'endline': 294, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'C', 'name': 'FlaubertModel', 'complexity': 18, 'lineno': 114, 'endline': 294, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 118, 'classname': 'FlaubertModel', 'endline': 121, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'E', 'name': 'forward', 'complexity': 33, 'lineno': 125, 'classname': 'FlaubertModel', 'endline': 294, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'FlaubertWithLMHeadModel', 'complexity': 2, 'lineno': 302, 'endline': 313, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 310, 'classname': 'FlaubertWithLMHeadModel', 'endline': 313, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'FlaubertForSequenceClassification', 'complexity': 2, 'lineno': 321, 'endline': 332, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 329, 'classname': 'FlaubertForSequenceClassification', 'endline': 332, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'FlaubertForQuestionAnsweringSimple', 'complexity': 2, 'lineno': 340, 'endline': 351, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 348, 'classname': 'FlaubertForQuestionAnsweringSimple', 'endline': 351, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'FlaubertForQuestionAnswering', 'complexity': 2, 'lineno': 359, 'endline': 370, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 367, 'classname': 'FlaubertForQuestionAnswering', 'endline': 370, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 118, 'classname': 'FlaubertModel', 'endline': 121, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 310, 'classname': 'FlaubertWithLMHeadModel', 'endline': 313, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 329, 'classname': 'FlaubertForSequenceClassification', 'endline': 332, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 348, 'classname': 'FlaubertForQuestionAnsweringSimple', 'endline': 351, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 367, 'classname': 'FlaubertForQuestionAnswering', 'endline': 370, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_gpt2.py': [{'type': 'method', 'rank': 'D', 'name': 'forward', 'complexity': 26, 'lineno': 376, 'classname': 'GPT2Model', 'endline': 520, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'C', 'name': 'load_tf_weights_in_gpt2', 'complexity': 14, 'lineno': 53, 'endline': 105, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'GPT2Model', 'complexity': 7, 'lineno': 349, 'endline': 520, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 350, 'classname': 'GPT2Model', 'endline': 359, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 361, 'classname': 'GPT2Model', 'endline': 362, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 364, 'classname': 'GPT2Model', 'endline': 365, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 367, 'classname': 'GPT2Model', 'endline': 372, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'forward', 'complexity': 26, 'lineno': 376, 'classname': 'GPT2Model', 'endline': 520, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_attn', 'complexity': 5, 'lineno': 146, 'classname': 'Attention', 'endline': 168, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_init_weights', 'complexity': 5, 'lineno': 269, 'classname': 'GPT2PreTrainedModel', 'endline': 280, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 642, 'classname': 'GPT2DoubleHeadsModel', 'endline': 763, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'GPT2PreTrainedModel', 'complexity': 4, 'lineno': 257, 'endline': 280, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 266, 'classname': 'GPT2PreTrainedModel', 'endline': 267, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_init_weights', 'complexity': 5, 'lineno': 269, 'classname': 'GPT2PreTrainedModel', 'endline': 280, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'Attention', 'complexity': 3, 'lineno': 108, 'endline': 209, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 109, 'classname': 'Attention', 'endline': 127, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 129, 'classname': 'Attention', 'endline': 144, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_attn', 'complexity': 5, 'lineno': 146, 'classname': 'Attention', 'endline': 168, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'merge_heads', 'complexity': 1, 'lineno': 170, 'classname': 'Attention', 'endline': 173, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'split_heads', 'complexity': 2, 'lineno': 175, 'classname': 'Attention', 'endline': 181, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 183, 'classname': 'Attention', 'endline': 209, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 183, 'classname': 'Attention', 'endline': 209, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'GPT2DoubleHeadsModel', 'complexity': 3, 'lineno': 628, 'endline': 763, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 629, 'classname': 'GPT2DoubleHeadsModel', 'endline': 636, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 638, 'classname': 'GPT2DoubleHeadsModel', 'endline': 639, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 642, 'classname': 'GPT2DoubleHeadsModel', 'endline': 763, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 109, 'classname': 'Attention', 'endline': 127, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 129, 'classname': 'Attention', 'endline': 144, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'split_heads', 'complexity': 2, 'lineno': 175, 'classname': 'Attention', 'endline': 181, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'MLP', 'complexity': 2, 'lineno': 212, 'endline': 224, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 213, 'classname': 'MLP', 'endline': 219, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 221, 'classname': 'MLP', 'endline': 224, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'Block', 'complexity': 2, 'lineno': 227, 'endline': 254, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 228, 'classname': 'Block', 'endline': 234, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 236, 'classname': 'Block', 'endline': 254, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 350, 'classname': 'GPT2Model', 'endline': 359, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 367, 'classname': 'GPT2Model', 'endline': 372, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'GPT2LMHeadModel', 'complexity': 2, 'lineno': 528, 'endline': 617, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 529, 'classname': 'GPT2LMHeadModel', 'endline': 534, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 536, 'classname': 'GPT2LMHeadModel', 'endline': 537, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 539, 'classname': 'GPT2LMHeadModel', 'endline': 544, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 548, 'classname': 'GPT2LMHeadModel', 'endline': 617, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 539, 'classname': 'GPT2LMHeadModel', 'endline': 544, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 548, 'classname': 'GPT2LMHeadModel', 'endline': 617, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'merge_heads', 'complexity': 1, 'lineno': 170, 'classname': 'Attention', 'endline': 173, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 213, 'classname': 'MLP', 'endline': 219, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 221, 'classname': 'MLP', 'endline': 224, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 228, 'classname': 'Block', 'endline': 234, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 236, 'classname': 'Block', 'endline': 254, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 266, 'classname': 'GPT2PreTrainedModel', 'endline': 267, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 361, 'classname': 'GPT2Model', 'endline': 362, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 364, 'classname': 'GPT2Model', 'endline': 365, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 529, 'classname': 'GPT2LMHeadModel', 'endline': 534, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 536, 'classname': 'GPT2LMHeadModel', 'endline': 537, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 629, 'classname': 'GPT2DoubleHeadsModel', 'endline': 636, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 638, 'classname': 'GPT2DoubleHeadsModel', 'endline': 639, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_longformer.py': [{'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 12, 'lineno': 909, 'classname': 'LongformerModel', 'endline': 1022, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 11, 'lineno': 1478, 'classname': 'LongformerForMultipleChoice', 'endline': 1568, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 10, 'lineno': 280, 'classname': 'LongformerSelfAttention', 'endline': 443, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 674, 'classname': 'LongformerEncoder', 'endline': 710, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'create_custom_forward', 'complexity': 1, 'lineno': 685, 'endline': 689, 'col_offset': 16, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'custom_forward', 'complexity': 1, 'lineno': 686, 'endline': 687, 'col_offset': 20, 'closures': []}]}]}, {'type': 'method', 'rank': 'B', 'name': '_pad_to_window_size', 'complexity': 8, 'lineno': 851, 'classname': 'LongformerModel', 'endline': 894, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'LongformerForMultipleChoice', 'complexity': 7, 'lineno': 1463, 'endline': 1568, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1467, 'classname': 'LongformerForMultipleChoice', 'endline': 1474, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 11, 'lineno': 1478, 'classname': 'LongformerForMultipleChoice', 'endline': 1568, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'LongformerEncoder', 'complexity': 6, 'lineno': 668, 'endline': 710, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 669, 'classname': 'LongformerEncoder', 'endline': 672, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 674, 'classname': 'LongformerEncoder', 'endline': 710, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'create_custom_forward', 'complexity': 1, 'lineno': 685, 'endline': 689, 'col_offset': 16, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'custom_forward', 'complexity': 1, 'lineno': 686, 'endline': 687, 'col_offset': 20, 'closures': []}]}]}]}, {'type': 'class', 'rank': 'B', 'name': 'LongformerPreTrainedModel', 'complexity': 6, 'lineno': 713, 'endline': 732, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '_init_weights', 'complexity': 5, 'lineno': 722, 'classname': 'LongformerPreTrainedModel', 'endline': 732, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 6, 'lineno': 1255, 'classname': 'LongformerForQuestionAnswering', 'endline': 1363, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_init_weights', 'complexity': 5, 'lineno': 722, 'classname': 'LongformerPreTrainedModel', 'endline': 732, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'LongformerModel', 'complexity': 5, 'lineno': 798, 'endline': 1022, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 5, 'lineno': 817, 'classname': 'LongformerModel', 'endline': 835, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 837, 'classname': 'LongformerModel', 'endline': 838, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 840, 'classname': 'LongformerModel', 'endline': 841, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 843, 'classname': 'LongformerModel', 'endline': 849, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_pad_to_window_size', 'complexity': 8, 'lineno': 851, 'classname': 'LongformerModel', 'endline': 894, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_merge_to_attention_mask', 'complexity': 2, 'lineno': 896, 'classname': 'LongformerModel', 'endline': 906, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 12, 'lineno': 909, 'classname': 'LongformerModel', 'endline': 1022, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 5, 'lineno': 817, 'classname': 'LongformerModel', 'endline': 835, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'LongformerForQuestionAnswering', 'complexity': 5, 'lineno': 1241, 'endline': 1363, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1245, 'classname': 'LongformerForQuestionAnswering', 'endline': 1252, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 6, 'lineno': 1255, 'classname': 'LongformerForQuestionAnswering', 'endline': 1363, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 4, 'lineno': 86, 'classname': 'LongformerSelfAttention', 'endline': 117, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_sliding_chunks_matmul_attn_probs_value', 'complexity': 4, 'lineno': 243, 'classname': 'LongformerSelfAttention', 'endline': 278, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'LongformerForMaskedLM', 'complexity': 4, 'lineno': 1026, 'endline': 1123, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1030, 'classname': 'LongformerForMaskedLM', 'endline': 1036, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 1039, 'classname': 'LongformerForMaskedLM', 'endline': 1123, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 1039, 'classname': 'LongformerForMaskedLM', 'endline': 1123, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'LongformerForSequenceClassification', 'complexity': 4, 'lineno': 1131, 'endline': 1214, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1135, 'classname': 'LongformerForSequenceClassification', 'endline': 1142, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 1146, 'classname': 'LongformerForSequenceClassification', 'endline': 1214, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 1146, 'classname': 'LongformerForSequenceClassification', 'endline': 1214, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': '_get_question_end_index', 'complexity': 3, 'lineno': 47, 'endline': 60, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'LongformerSelfAttention', 'complexity': 3, 'lineno': 85, 'endline': 611, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 4, 'lineno': 86, 'classname': 'LongformerSelfAttention', 'endline': 117, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_pad_and_transpose_last_two_dims', 'complexity': 1, 'lineno': 120, 'classname': 'LongformerSelfAttention', 'endline': 128, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_pad_by_window_overlap_except_last_row', 'complexity': 1, 'lineno': 131, 'classname': 'LongformerSelfAttention', 'endline': 147, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_chunk', 'complexity': 1, 'lineno': 150, 'classname': 'LongformerSelfAttention', 'endline': 167, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_mask_invalid_locations', 'complexity': 1, 'lineno': 169, 'classname': 'LongformerSelfAttention', 'endline': 178, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_sliding_chunks_query_key_matmul', 'complexity': 3, 'lineno': 180, 'classname': 'LongformerSelfAttention', 'endline': 241, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_sliding_chunks_matmul_attn_probs_value', 'complexity': 4, 'lineno': 243, 'classname': 'LongformerSelfAttention', 'endline': 278, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 10, 'lineno': 280, 'classname': 'LongformerSelfAttention', 'endline': 443, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_get_global_attn_indices', 'complexity': 1, 'lineno': 446, 'classname': 'LongformerSelfAttention', 'endline': 471, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_concat_with_global_key_attn_probs', 'complexity': 1, 'lineno': 474, 'classname': 'LongformerSelfAttention', 'endline': 495, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_compute_attn_output_with_global_indices', 'complexity': 1, 'lineno': 497, 'classname': 'LongformerSelfAttention', 'endline': 531, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_compute_global_attn_output_from_hidden', 'complexity': 3, 'lineno': 533, 'classname': 'LongformerSelfAttention', 'endline': 611, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_sliding_chunks_query_key_matmul', 'complexity': 3, 'lineno': 180, 'classname': 'LongformerSelfAttention', 'endline': 241, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_compute_global_attn_output_from_hidden', 'complexity': 3, 'lineno': 533, 'classname': 'LongformerSelfAttention', 'endline': 611, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'LongformerForTokenClassification', 'complexity': 3, 'lineno': 1371, 'endline': 1455, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1375, 'classname': 'LongformerForTokenClassification', 'endline': 1383, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1387, 'classname': 'LongformerForTokenClassification', 'endline': 1455, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1387, 'classname': 'LongformerForTokenClassification', 'endline': 1455, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': '_compute_global_attention_mask', 'complexity': 2, 'lineno': 63, 'endline': 82, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'LongformerAttention', 'complexity': 2, 'lineno': 614, 'endline': 645, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 615, 'classname': 'LongformerAttention', 'endline': 619, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 621, 'classname': 'LongformerAttention', 'endline': 637, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 639, 'classname': 'LongformerAttention', 'endline': 645, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 621, 'classname': 'LongformerAttention', 'endline': 637, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'LongformerLayer', 'complexity': 2, 'lineno': 648, 'endline': 665, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 649, 'classname': 'LongformerLayer', 'endline': 653, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 655, 'classname': 'LongformerLayer', 'endline': 665, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 669, 'classname': 'LongformerEncoder', 'endline': 672, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 843, 'classname': 'LongformerModel', 'endline': 849, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_merge_to_attention_mask', 'complexity': 2, 'lineno': 896, 'classname': 'LongformerModel', 'endline': 906, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'LongformerClassificationHead', 'complexity': 2, 'lineno': 1217, 'endline': 1233, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1220, 'classname': 'LongformerClassificationHead', 'endline': 1224, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 1226, 'classname': 'LongformerClassificationHead', 'endline': 1233, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_pad_and_transpose_last_two_dims', 'complexity': 1, 'lineno': 120, 'classname': 'LongformerSelfAttention', 'endline': 128, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_pad_by_window_overlap_except_last_row', 'complexity': 1, 'lineno': 131, 'classname': 'LongformerSelfAttention', 'endline': 147, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_chunk', 'complexity': 1, 'lineno': 150, 'classname': 'LongformerSelfAttention', 'endline': 167, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_mask_invalid_locations', 'complexity': 1, 'lineno': 169, 'classname': 'LongformerSelfAttention', 'endline': 178, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_get_global_attn_indices', 'complexity': 1, 'lineno': 446, 'classname': 'LongformerSelfAttention', 'endline': 471, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_concat_with_global_key_attn_probs', 'complexity': 1, 'lineno': 474, 'classname': 'LongformerSelfAttention', 'endline': 495, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_compute_attn_output_with_global_indices', 'complexity': 1, 'lineno': 497, 'classname': 'LongformerSelfAttention', 'endline': 531, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 615, 'classname': 'LongformerAttention', 'endline': 619, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 639, 'classname': 'LongformerAttention', 'endline': 645, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 649, 'classname': 'LongformerLayer', 'endline': 653, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 655, 'classname': 'LongformerLayer', 'endline': 665, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 837, 'classname': 'LongformerModel', 'endline': 838, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 840, 'classname': 'LongformerModel', 'endline': 841, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1030, 'classname': 'LongformerForMaskedLM', 'endline': 1036, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1135, 'classname': 'LongformerForSequenceClassification', 'endline': 1142, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1220, 'classname': 'LongformerClassificationHead', 'endline': 1224, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 1226, 'classname': 'LongformerClassificationHead', 'endline': 1233, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1245, 'classname': 'LongformerForQuestionAnswering', 'endline': 1252, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1375, 'classname': 'LongformerForTokenClassification', 'endline': 1383, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1467, 'classname': 'LongformerForMultipleChoice', 'endline': 1474, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_marian.py': [{'type': 'class', 'rank': 'A', 'name': 'MarianMTModel', 'complexity': 4, 'lineno': 26, 'endline': 53, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'adjust_logits_during_generation', 'complexity': 3, 'lineno': 49, 'classname': 'MarianMTModel', 'endline': 53, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'adjust_logits_during_generation', 'complexity': 3, 'lineno': 49, 'classname': 'MarianMTModel', 'endline': 53, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_mmbt.py': [{'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 9, 'lineno': 188, 'classname': 'MMBTModel', 'endline': 270, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 47, 'classname': 'ModalEmbeddings', 'endline': 75, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ModalEmbeddings', 'complexity': 4, 'lineno': 32, 'endline': 75, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 36, 'classname': 'ModalEmbeddings', 'endline': 45, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 47, 'classname': 'ModalEmbeddings', 'endline': 75, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'MMBTModel', 'complexity': 4, 'lineno': 154, 'endline': 276, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 182, 'classname': 'MMBTModel', 'endline': 186, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 9, 'lineno': 188, 'classname': 'MMBTModel', 'endline': 270, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 272, 'classname': 'MMBTModel', 'endline': 273, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 275, 'classname': 'MMBTModel', 'endline': 276, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'MMBTForClassification', 'complexity': 3, 'lineno': 285, 'endline': 371, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 316, 'classname': 'MMBTForClassification', 'endline': 322, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 324, 'classname': 'MMBTForClassification', 'endline': 371, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 324, 'classname': 'MMBTForClassification', 'endline': 371, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 36, 'classname': 'ModalEmbeddings', 'endline': 45, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 182, 'classname': 'MMBTModel', 'endline': 186, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 272, 'classname': 'MMBTModel', 'endline': 273, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 275, 'classname': 'MMBTModel', 'endline': 276, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 316, 'classname': 'MMBTForClassification', 'endline': 322, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_mobilebert.py': [{'type': 'function', 'rank': 'C', 'name': 'load_tf_weights_in_mobilebert', 'complexity': 20, 'lineno': 48, 'endline': 121, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 13, 'lineno': 754, 'classname': 'MobileBertModel', 'endline': 856, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 9, 'lineno': 163, 'classname': 'MobileBertEmbeddings', 'endline': 204, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 1392, 'classname': 'MobileBertForMultipleChoice', 'endline': 1466, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'MobileBertEmbeddings', 'complexity': 7, 'lineno': 142, 'endline': 204, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 146, 'classname': 'MobileBertEmbeddings', 'endline': 161, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 9, 'lineno': 163, 'classname': 'MobileBertEmbeddings', 'endline': 204, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 7, 'lineno': 522, 'classname': 'MobileBertEncoder', 'endline': 560, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'MobileBertEncoder', 'complexity': 6, 'lineno': 517, 'endline': 560, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 518, 'classname': 'MobileBertEncoder', 'endline': 520, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 7, 'lineno': 522, 'classname': 'MobileBertEncoder', 'endline': 560, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'MobileBertPreTrainedModel', 'complexity': 6, 'lineno': 640, 'endline': 660, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '_init_weights', 'complexity': 5, 'lineno': 650, 'classname': 'MobileBertPreTrainedModel', 'endline': 660, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'MobileBertForMultipleChoice', 'complexity': 6, 'lineno': 1380, 'endline': 1466, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1381, 'classname': 'MobileBertForMultipleChoice', 'endline': 1388, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 1392, 'classname': 'MobileBertForMultipleChoice', 'endline': 1466, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertLayer', 'complexity': 5, 'lineno': 452, 'endline': 514, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 4, 'lineno': 453, 'classname': 'MobileBertLayer', 'endline': 464, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 466, 'classname': 'MobileBertLayer', 'endline': 514, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_init_weights', 'complexity': 5, 'lineno': 650, 'classname': 'MobileBertPreTrainedModel', 'endline': 660, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 1292, 'classname': 'MobileBertForQuestionAnswering', 'endline': 1372, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 226, 'classname': 'MobileBertSelfAttention', 'endline': 264, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'Bottleneck', 'complexity': 4, 'lineno': 392, 'endline': 425, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 393, 'classname': 'Bottleneck', 'endline': 399, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 401, 'classname': 'Bottleneck', 'endline': 425, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 4, 'lineno': 453, 'classname': 'MobileBertLayer', 'endline': 464, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 466, 'classname': 'MobileBertLayer', 'endline': 514, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertModel', 'complexity': 4, 'lineno': 724, 'endline': 856, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 729, 'classname': 'MobileBertModel', 'endline': 736, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 738, 'classname': 'MobileBertModel', 'endline': 739, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 741, 'classname': 'MobileBertModel', 'endline': 742, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 744, 'classname': 'MobileBertModel', 'endline': 750, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 13, 'lineno': 754, 'classname': 'MobileBertModel', 'endline': 856, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertForQuestionAnswering', 'complexity': 4, 'lineno': 1280, 'endline': 1372, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1281, 'classname': 'MobileBertForQuestionAnswering', 'endline': 1288, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 1292, 'classname': 'MobileBertForQuestionAnswering', 'endline': 1372, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertSelfAttention', 'complexity': 3, 'lineno': 207, 'endline': 264, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 208, 'classname': 'MobileBertSelfAttention', 'endline': 219, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'transpose_for_scores', 'complexity': 1, 'lineno': 221, 'classname': 'MobileBertSelfAttention', 'endline': 224, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 226, 'classname': 'MobileBertSelfAttention', 'endline': 264, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertSelfOutput', 'complexity': 3, 'lineno': 267, 'endline': 281, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 268, 'classname': 'MobileBertSelfOutput', 'endline': 274, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 276, 'classname': 'MobileBertSelfOutput', 'endline': 281, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertOutput', 'complexity': 3, 'lineno': 358, 'endline': 377, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 359, 'classname': 'MobileBertOutput', 'endline': 367, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 369, 'classname': 'MobileBertOutput', 'endline': 377, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 401, 'classname': 'Bottleneck', 'endline': 425, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertPooler', 'complexity': 3, 'lineno': 563, 'endline': 579, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 564, 'classname': 'MobileBertPooler', 'endline': 568, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 570, 'classname': 'MobileBertPooler', 'endline': 579, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertPredictionHeadTransform', 'complexity': 3, 'lineno': 582, 'endline': 596, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 583, 'classname': 'MobileBertPredictionHeadTransform', 'endline': 590, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 592, 'classname': 'MobileBertPredictionHeadTransform', 'endline': 596, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertForPreTraining', 'complexity': 3, 'lineno': 864, 'endline': 980, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 865, 'classname': 'MobileBertForPreTraining', 'endline': 870, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 872, 'classname': 'MobileBertForPreTraining', 'endline': 873, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 2, 'lineno': 875, 'classname': 'MobileBertForPreTraining', 'endline': 895, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 898, 'classname': 'MobileBertForPreTraining', 'endline': 980, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 898, 'classname': 'MobileBertForPreTraining', 'endline': 980, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertForMaskedLM', 'complexity': 3, 'lineno': 984, 'endline': 1092, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 985, 'classname': 'MobileBertForMaskedLM', 'endline': 991, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 993, 'classname': 'MobileBertForMaskedLM', 'endline': 994, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 2, 'lineno': 996, 'classname': 'MobileBertForMaskedLM', 'endline': 1016, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1020, 'classname': 'MobileBertForMaskedLM', 'endline': 1092, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1020, 'classname': 'MobileBertForMaskedLM', 'endline': 1092, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertForNextSentencePrediction', 'complexity': 3, 'lineno': 1109, 'endline': 1192, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1110, 'classname': 'MobileBertForNextSentencePrediction', 'endline': 1116, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 1119, 'classname': 'MobileBertForNextSentencePrediction', 'endline': 1192, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertForSequenceClassification', 'complexity': 3, 'lineno': 1200, 'endline': 1272, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1201, 'classname': 'MobileBertForSequenceClassification', 'endline': 1208, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1212, 'classname': 'MobileBertForSequenceClassification', 'endline': 1272, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1212, 'classname': 'MobileBertForSequenceClassification', 'endline': 1272, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertForTokenClassification', 'complexity': 3, 'lineno': 1474, 'endline': 1554, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1475, 'classname': 'MobileBertForTokenClassification', 'endline': 1483, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1487, 'classname': 'MobileBertForTokenClassification', 'endline': 1554, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1487, 'classname': 'MobileBertForTokenClassification', 'endline': 1554, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'NoNorm', 'complexity': 2, 'lineno': 128, 'endline': 135, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 129, 'classname': 'NoNorm', 'endline': 132, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 134, 'classname': 'NoNorm', 'endline': 135, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 146, 'classname': 'MobileBertEmbeddings', 'endline': 161, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 208, 'classname': 'MobileBertSelfAttention', 'endline': 219, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 268, 'classname': 'MobileBertSelfOutput', 'endline': 274, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 276, 'classname': 'MobileBertSelfOutput', 'endline': 281, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertAttention', 'complexity': 2, 'lineno': 284, 'endline': 335, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 285, 'classname': 'MobileBertAttention', 'endline': 289, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 291, 'classname': 'MobileBertAttention', 'endline': 307, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 309, 'classname': 'MobileBertAttention', 'endline': 335, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 291, 'classname': 'MobileBertAttention', 'endline': 307, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertIntermediate', 'complexity': 2, 'lineno': 338, 'endline': 341, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 339, 'classname': 'MobileBertIntermediate', 'endline': 341, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'OutputBottleneck', 'complexity': 2, 'lineno': 344, 'endline': 355, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 345, 'classname': 'OutputBottleneck', 'endline': 349, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 351, 'classname': 'OutputBottleneck', 'endline': 355, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 359, 'classname': 'MobileBertOutput', 'endline': 367, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 369, 'classname': 'MobileBertOutput', 'endline': 377, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BottleneckLayer', 'complexity': 2, 'lineno': 380, 'endline': 389, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 381, 'classname': 'BottleneckLayer', 'endline': 384, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 386, 'classname': 'BottleneckLayer', 'endline': 389, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 393, 'classname': 'Bottleneck', 'endline': 399, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'FFNOutput', 'complexity': 2, 'lineno': 428, 'endline': 437, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 429, 'classname': 'FFNOutput', 'endline': 432, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 434, 'classname': 'FFNOutput', 'endline': 437, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'FFNLayer', 'complexity': 2, 'lineno': 440, 'endline': 449, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 441, 'classname': 'FFNLayer', 'endline': 444, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 446, 'classname': 'FFNLayer', 'endline': 449, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 518, 'classname': 'MobileBertEncoder', 'endline': 520, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 564, 'classname': 'MobileBertPooler', 'endline': 568, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 570, 'classname': 'MobileBertPooler', 'endline': 579, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 583, 'classname': 'MobileBertPredictionHeadTransform', 'endline': 590, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertLMPredictionHead', 'complexity': 2, 'lineno': 599, 'endline': 615, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 600, 'classname': 'MobileBertLMPredictionHead', 'endline': 609, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 611, 'classname': 'MobileBertLMPredictionHead', 'endline': 615, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertOnlyMLMHead', 'complexity': 2, 'lineno': 618, 'endline': 625, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 619, 'classname': 'MobileBertOnlyMLMHead', 'endline': 621, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 623, 'classname': 'MobileBertOnlyMLMHead', 'endline': 625, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertPreTrainingHeads', 'complexity': 2, 'lineno': 628, 'endline': 637, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 629, 'classname': 'MobileBertPreTrainingHeads', 'endline': 632, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 634, 'classname': 'MobileBertPreTrainingHeads', 'endline': 637, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 744, 'classname': 'MobileBertModel', 'endline': 750, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 2, 'lineno': 875, 'classname': 'MobileBertForPreTraining', 'endline': 895, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 2, 'lineno': 996, 'classname': 'MobileBertForMaskedLM', 'endline': 1016, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertOnlyNSPHead', 'complexity': 2, 'lineno': 1095, 'endline': 1102, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1096, 'classname': 'MobileBertOnlyNSPHead', 'endline': 1098, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 1100, 'classname': 'MobileBertOnlyNSPHead', 'endline': 1102, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 1119, 'classname': 'MobileBertForNextSentencePrediction', 'endline': 1192, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'mish', 'complexity': 1, 'lineno': 124, 'endline': 125, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 129, 'classname': 'NoNorm', 'endline': 132, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 134, 'classname': 'NoNorm', 'endline': 135, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'transpose_for_scores', 'complexity': 1, 'lineno': 221, 'classname': 'MobileBertSelfAttention', 'endline': 224, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 285, 'classname': 'MobileBertAttention', 'endline': 289, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 309, 'classname': 'MobileBertAttention', 'endline': 335, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 339, 'classname': 'MobileBertIntermediate', 'endline': 341, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 345, 'classname': 'OutputBottleneck', 'endline': 349, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 351, 'classname': 'OutputBottleneck', 'endline': 355, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 381, 'classname': 'BottleneckLayer', 'endline': 384, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 386, 'classname': 'BottleneckLayer', 'endline': 389, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 429, 'classname': 'FFNOutput', 'endline': 432, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 434, 'classname': 'FFNOutput', 'endline': 437, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 441, 'classname': 'FFNLayer', 'endline': 444, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 446, 'classname': 'FFNLayer', 'endline': 449, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 592, 'classname': 'MobileBertPredictionHeadTransform', 'endline': 596, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 600, 'classname': 'MobileBertLMPredictionHead', 'endline': 609, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 611, 'classname': 'MobileBertLMPredictionHead', 'endline': 615, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 619, 'classname': 'MobileBertOnlyMLMHead', 'endline': 621, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 623, 'classname': 'MobileBertOnlyMLMHead', 'endline': 625, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 629, 'classname': 'MobileBertPreTrainingHeads', 'endline': 632, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 634, 'classname': 'MobileBertPreTrainingHeads', 'endline': 637, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 729, 'classname': 'MobileBertModel', 'endline': 736, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 738, 'classname': 'MobileBertModel', 'endline': 739, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 741, 'classname': 'MobileBertModel', 'endline': 742, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 865, 'classname': 'MobileBertForPreTraining', 'endline': 870, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 872, 'classname': 'MobileBertForPreTraining', 'endline': 873, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 985, 'classname': 'MobileBertForMaskedLM', 'endline': 991, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 993, 'classname': 'MobileBertForMaskedLM', 'endline': 994, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1096, 'classname': 'MobileBertOnlyNSPHead', 'endline': 1098, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 1100, 'classname': 'MobileBertOnlyNSPHead', 'endline': 1102, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1110, 'classname': 'MobileBertForNextSentencePrediction', 'endline': 1116, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1201, 'classname': 'MobileBertForSequenceClassification', 'endline': 1208, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1281, 'classname': 'MobileBertForQuestionAnswering', 'endline': 1288, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1381, 'classname': 'MobileBertForMultipleChoice', 'endline': 1388, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1475, 'classname': 'MobileBertForTokenClassification', 'endline': 1483, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_openai.py': [{'type': 'function', 'rank': 'D', 'name': 'load_tf_weights_in_openai_gpt', 'complexity': 21, 'lineno': 51, 'endline': 125, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 18, 'lineno': 362, 'classname': 'OpenAIGPTModel', 'endline': 464, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'OpenAIGPTPreTrainedModel', 'complexity': 6, 'lineno': 257, 'endline': 277, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '_init_weights', 'complexity': 5, 'lineno': 266, 'classname': 'OpenAIGPTPreTrainedModel', 'endline': 277, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'OpenAIGPTModel', 'complexity': 6, 'lineno': 336, 'endline': 464, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 337, 'classname': 'OpenAIGPTModel', 'endline': 345, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 347, 'classname': 'OpenAIGPTModel', 'endline': 348, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 350, 'classname': 'OpenAIGPTModel', 'endline': 351, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 353, 'classname': 'OpenAIGPTModel', 'endline': 358, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 18, 'lineno': 362, 'classname': 'OpenAIGPTModel', 'endline': 464, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_attn', 'complexity': 5, 'lineno': 163, 'classname': 'Attention', 'endline': 186, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_init_weights', 'complexity': 5, 'lineno': 266, 'classname': 'OpenAIGPTPreTrainedModel', 'endline': 277, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 576, 'classname': 'OpenAIGPTDoubleHeadsModel', 'endline': 687, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'Attention', 'complexity': 3, 'lineno': 131, 'endline': 216, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 132, 'classname': 'Attention', 'endline': 146, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 148, 'classname': 'Attention', 'endline': 161, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_attn', 'complexity': 5, 'lineno': 163, 'classname': 'Attention', 'endline': 186, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'merge_heads', 'complexity': 1, 'lineno': 188, 'classname': 'Attention', 'endline': 191, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'split_heads', 'complexity': 2, 'lineno': 193, 'classname': 'Attention', 'endline': 199, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 201, 'classname': 'Attention', 'endline': 216, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'OpenAIGPTDoubleHeadsModel', 'complexity': 3, 'lineno': 561, 'endline': 687, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 562, 'classname': 'OpenAIGPTDoubleHeadsModel', 'endline': 570, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 572, 'classname': 'OpenAIGPTDoubleHeadsModel', 'endline': 573, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 576, 'classname': 'OpenAIGPTDoubleHeadsModel', 'endline': 687, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 132, 'classname': 'Attention', 'endline': 146, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 148, 'classname': 'Attention', 'endline': 161, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'split_heads', 'complexity': 2, 'lineno': 193, 'classname': 'Attention', 'endline': 199, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'MLP', 'complexity': 2, 'lineno': 219, 'endline': 231, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 220, 'classname': 'MLP', 'endline': 226, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 228, 'classname': 'MLP', 'endline': 231, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'Block', 'complexity': 2, 'lineno': 234, 'endline': 254, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 235, 'classname': 'Block', 'endline': 241, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 243, 'classname': 'Block', 'endline': 254, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 337, 'classname': 'OpenAIGPTModel', 'endline': 345, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 353, 'classname': 'OpenAIGPTModel', 'endline': 358, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'OpenAIGPTLMHeadModel', 'complexity': 2, 'lineno': 472, 'endline': 550, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 473, 'classname': 'OpenAIGPTLMHeadModel', 'endline': 478, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 480, 'classname': 'OpenAIGPTLMHeadModel', 'endline': 481, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 485, 'classname': 'OpenAIGPTLMHeadModel', 'endline': 550, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 485, 'classname': 'OpenAIGPTLMHeadModel', 'endline': 550, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'merge_heads', 'complexity': 1, 'lineno': 188, 'classname': 'Attention', 'endline': 191, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 201, 'classname': 'Attention', 'endline': 216, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 220, 'classname': 'MLP', 'endline': 226, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 228, 'classname': 'MLP', 'endline': 231, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 235, 'classname': 'Block', 'endline': 241, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 243, 'classname': 'Block', 'endline': 254, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 347, 'classname': 'OpenAIGPTModel', 'endline': 348, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 350, 'classname': 'OpenAIGPTModel', 'endline': 351, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 473, 'classname': 'OpenAIGPTLMHeadModel', 'endline': 478, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 480, 'classname': 'OpenAIGPTLMHeadModel', 'endline': 481, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 562, 'classname': 'OpenAIGPTDoubleHeadsModel', 'endline': 570, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 572, 'classname': 'OpenAIGPTDoubleHeadsModel', 'endline': 573, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_reformer.py': [{'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 14, 'lineno': 328, 'classname': 'LSHSelfAttention', 'endline': 461, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 14, 'lineno': 1538, 'classname': 'ReformerModel', 'endline': 1643, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 13, 'lineno': 800, 'classname': 'LocalSelfAttention', 'endline': 923, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_hash_vectors', 'complexity': 10, 'lineno': 463, 'classname': 'LSHSelfAttention', 'endline': 526, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 125, 'classname': 'AxialPositionEmbeddings', 'endline': 176, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'LocalSelfAttention', 'complexity': 8, 'lineno': 774, 'endline': 951, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 775, 'classname': 'LocalSelfAttention', 'endline': 798, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 13, 'lineno': 800, 'classname': 'LocalSelfAttention', 'endline': 923, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_compute_attn_mask', 'complexity': 6, 'lineno': 925, 'classname': 'LocalSelfAttention', 'endline': 951, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 8, 'lineno': 969, 'classname': 'ReformerAttention', 'endline': 992, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_init_weights', 'complexity': 8, 'lineno': 1430, 'classname': 'ReformerPreTrainedModel', 'endline': 1446, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': '_get_least_common_mult_chunk_len', 'complexity': 7, 'lineno': 78, 'endline': 90, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'AxialPositionEmbeddings', 'complexity': 7, 'lineno': 95, 'endline': 176, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 100, 'classname': 'AxialPositionEmbeddings', 'endline': 123, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 125, 'classname': 'AxialPositionEmbeddings', 'endline': 176, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '_attend', 'complexity': 7, 'lineno': 578, 'classname': 'LSHSelfAttention', 'endline': 670, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_compute_attn_mask', 'complexity': 6, 'lineno': 925, 'classname': 'LocalSelfAttention', 'endline': 951, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'ReformerAttention', 'complexity': 6, 'lineno': 968, 'endline': 1023, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 8, 'lineno': 969, 'classname': 'ReformerAttention', 'endline': 992, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 994, 'classname': 'ReformerAttention', 'endline': 1023, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'ReformerPreTrainedModel', 'complexity': 6, 'lineno': 1412, 'endline': 1446, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 1421, 'classname': 'ReformerPreTrainedModel', 'endline': 1428, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_init_weights', 'complexity': 8, 'lineno': 1430, 'classname': 'ReformerPreTrainedModel', 'endline': 1446, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'ReformerEmbeddings', 'complexity': 5, 'lineno': 194, 'endline': 236, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 198, 'classname': 'ReformerEmbeddings', 'endline': 205, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 208, 'classname': 'ReformerEmbeddings', 'endline': 236, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 208, 'classname': 'ReformerEmbeddings', 'endline': 236, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_look_adjacent', 'complexity': 5, 'lineno': 244, 'classname': 'EfficientAttentionMixin', 'endline': 265, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'LSHSelfAttention', 'complexity': 5, 'lineno': 297, 'endline': 736, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 298, 'classname': 'LSHSelfAttention', 'endline': 326, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 14, 'lineno': 328, 'classname': 'LSHSelfAttention', 'endline': 461, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_hash_vectors', 'complexity': 10, 'lineno': 463, 'classname': 'LSHSelfAttention', 'endline': 526, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_get_sorted_bucket_idx_and_undo_sorted_bucket_idx', 'complexity': 1, 'lineno': 528, 'classname': 'LSHSelfAttention', 'endline': 557, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_set_num_buckets', 'complexity': 2, 'lineno': 559, 'classname': 'LSHSelfAttention', 'endline': 576, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_attend', 'complexity': 7, 'lineno': 578, 'classname': 'LSHSelfAttention', 'endline': 670, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_compute_attn_mask', 'complexity': 5, 'lineno': 672, 'classname': 'LSHSelfAttention', 'endline': 710, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_len_and_dim_norm', 'complexity': 1, 'lineno': 712, 'classname': 'LSHSelfAttention', 'endline': 720, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_len_norm', 'complexity': 1, 'lineno': 722, 'classname': 'LSHSelfAttention', 'endline': 728, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_gather_by_expansion', 'complexity': 1, 'lineno': 730, 'classname': 'LSHSelfAttention', 'endline': 736, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_compute_attn_mask', 'complexity': 5, 'lineno': 672, 'classname': 'LSHSelfAttention', 'endline': 710, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': '_ReversibleFunction', 'complexity': 5, 'lineno': 1236, 'endline': 1340, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 1246, 'classname': '_ReversibleFunction', 'endline': 1294, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'backward', 'complexity': 3, 'lineno': 1297, 'classname': '_ReversibleFunction', 'endline': 1340, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 1246, 'classname': '_ReversibleFunction', 'endline': 1294, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ReformerModel', 'complexity': 5, 'lineno': 1509, 'endline': 1700, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 1510, 'classname': 'ReformerModel', 'endline': 1520, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 1522, 'classname': 'ReformerModel', 'endline': 1523, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 1525, 'classname': 'ReformerModel', 'endline': 1526, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 1528, 'classname': 'ReformerModel', 'endline': 1534, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 14, 'lineno': 1538, 'classname': 'ReformerModel', 'endline': 1643, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_pad_to_mult_of_chunk_length', 'complexity': 5, 'lineno': 1645, 'classname': 'ReformerModel', 'endline': 1700, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_pad_to_mult_of_chunk_length', 'complexity': 5, 'lineno': 1645, 'classname': 'ReformerModel', 'endline': 1700, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 1899, 'classname': 'ReformerForQuestionAnswering', 'endline': 1979, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 100, 'classname': 'AxialPositionEmbeddings', 'endline': 123, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'EfficientAttentionMixin', 'complexity': 3, 'lineno': 239, 'endline': 294, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '_look_adjacent', 'complexity': 5, 'lineno': 244, 'classname': 'EfficientAttentionMixin', 'endline': 265, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_split_hidden_size_dim', 'complexity': 1, 'lineno': 267, 'classname': 'EfficientAttentionMixin', 'endline': 273, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_merge_hidden_size_dims', 'complexity': 1, 'lineno': 275, 'classname': 'EfficientAttentionMixin', 'endline': 280, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_split_seq_length_dim_to', 'complexity': 3, 'lineno': 282, 'classname': 'EfficientAttentionMixin', 'endline': 294, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_split_seq_length_dim_to', 'complexity': 3, 'lineno': 282, 'classname': 'EfficientAttentionMixin', 'endline': 294, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ReformerFeedForwardDense', 'complexity': 3, 'lineno': 1027, 'endline': 1043, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 1028, 'classname': 'ReformerFeedForwardDense', 'endline': 1037, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 1039, 'classname': 'ReformerFeedForwardDense', 'endline': 1043, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'backward', 'complexity': 3, 'lineno': 1297, 'classname': '_ReversibleFunction', 'endline': 1340, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ReformerEncoder', 'complexity': 3, 'lineno': 1343, 'endline': 1387, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 1344, 'classname': 'ReformerEncoder', 'endline': 1351, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 1353, 'classname': 'ReformerEncoder', 'endline': 1387, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'ReformerForQuestionAnswering', 'complexity': 3, 'lineno': 1882, 'endline': 1979, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1883, 'classname': 'ReformerForQuestionAnswering', 'endline': 1891, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 1, 'lineno': 1893, 'classname': 'ReformerForQuestionAnswering', 'endline': 1895, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 1899, 'classname': 'ReformerForQuestionAnswering', 'endline': 1979, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'PositionEmbeddings', 'complexity': 2, 'lineno': 179, 'endline': 191, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 183, 'classname': 'PositionEmbeddings', 'endline': 186, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 188, 'classname': 'PositionEmbeddings', 'endline': 191, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 198, 'classname': 'ReformerEmbeddings', 'endline': 205, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_set_num_buckets', 'complexity': 2, 'lineno': 559, 'classname': 'LSHSelfAttention', 'endline': 576, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ReverseSort', 'complexity': 2, 'lineno': 739, 'endline': 771, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 749, 'classname': 'ReverseSort', 'endline': 758, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'backward', 'complexity': 1, 'lineno': 761, 'classname': 'ReverseSort', 'endline': 771, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'ReformerSelfOutput', 'complexity': 2, 'lineno': 954, 'endline': 965, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 955, 'classname': 'ReformerSelfOutput', 'endline': 960, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 962, 'classname': 'ReformerSelfOutput', 'endline': 965, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 994, 'classname': 'ReformerAttention', 'endline': 1023, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 1028, 'classname': 'ReformerFeedForwardDense', 'endline': 1037, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ReformerFeedForwardOutput', 'complexity': 2, 'lineno': 1046, 'endline': 1056, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1047, 'classname': 'ReformerFeedForwardOutput', 'endline': 1051, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 1053, 'classname': 'ReformerFeedForwardOutput', 'endline': 1056, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'ChunkReformerFeedForward', 'complexity': 2, 'lineno': 1059, 'endline': 1077, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1060, 'classname': 'ChunkReformerFeedForward', 'endline': 1067, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 1069, 'classname': 'ChunkReformerFeedForward', 'endline': 1071, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward_chunk', 'complexity': 1, 'lineno': 1074, 'classname': 'ChunkReformerFeedForward', 'endline': 1077, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'ReformerLayer', 'complexity': 2, 'lineno': 1080, 'endline': 1232, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1081, 'classname': 'ReformerLayer', 'endline': 1089, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_init_attention_seed', 'complexity': 2, 'lineno': 1091, 'classname': 'ReformerLayer', 'endline': 1109, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_init_feed_forward_seed', 'complexity': 2, 'lineno': 1111, 'classname': 'ReformerLayer', 'endline': 1129, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 1131, 'classname': 'ReformerLayer', 'endline': 1172, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'backward_pass', 'complexity': 1, 'lineno': 1175, 'classname': 'ReformerLayer', 'endline': 1232, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_init_attention_seed', 'complexity': 2, 'lineno': 1091, 'classname': 'ReformerLayer', 'endline': 1109, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_init_feed_forward_seed', 'complexity': 2, 'lineno': 1111, 'classname': 'ReformerLayer', 'endline': 1129, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 1344, 'classname': 'ReformerEncoder', 'endline': 1351, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ReformerOnlyLMHead', 'complexity': 2, 'lineno': 1391, 'endline': 1409, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1392, 'classname': 'ReformerOnlyLMHead', 'endline': 1402, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 1404, 'classname': 'ReformerOnlyLMHead', 'endline': 1405, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward_chunk', 'complexity': 1, 'lineno': 1407, 'classname': 'ReformerOnlyLMHead', 'endline': 1409, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 1510, 'classname': 'ReformerModel', 'endline': 1520, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 1528, 'classname': 'ReformerModel', 'endline': 1534, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ReformerModelWithLMHead', 'complexity': 2, 'lineno': 1704, 'endline': 1792, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 1705, 'classname': 'ReformerModelWithLMHead', 'endline': 1711, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 1713, 'classname': 'ReformerModelWithLMHead', 'endline': 1714, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 1, 'lineno': 1716, 'classname': 'ReformerModelWithLMHead', 'endline': 1718, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 1722, 'classname': 'ReformerModelWithLMHead', 'endline': 1783, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 1785, 'classname': 'ReformerModelWithLMHead', 'endline': 1792, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 1705, 'classname': 'ReformerModelWithLMHead', 'endline': 1711, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 1722, 'classname': 'ReformerModelWithLMHead', 'endline': 1783, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 1785, 'classname': 'ReformerModelWithLMHead', 'endline': 1792, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ReformerForMaskedLM', 'complexity': 2, 'lineno': 1796, 'endline': 1873, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 1797, 'classname': 'ReformerForMaskedLM', 'endline': 1805, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 1807, 'classname': 'ReformerForMaskedLM', 'endline': 1808, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 1, 'lineno': 1810, 'classname': 'ReformerForMaskedLM', 'endline': 1812, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 1816, 'classname': 'ReformerForMaskedLM', 'endline': 1873, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 1797, 'classname': 'ReformerForMaskedLM', 'endline': 1805, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 1816, 'classname': 'ReformerForMaskedLM', 'endline': 1873, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'mish', 'complexity': 1, 'lineno': 53, 'endline': 54, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 183, 'classname': 'PositionEmbeddings', 'endline': 186, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 188, 'classname': 'PositionEmbeddings', 'endline': 191, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_split_hidden_size_dim', 'complexity': 1, 'lineno': 267, 'classname': 'EfficientAttentionMixin', 'endline': 273, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_merge_hidden_size_dims', 'complexity': 1, 'lineno': 275, 'classname': 'EfficientAttentionMixin', 'endline': 280, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 298, 'classname': 'LSHSelfAttention', 'endline': 326, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_get_sorted_bucket_idx_and_undo_sorted_bucket_idx', 'complexity': 1, 'lineno': 528, 'classname': 'LSHSelfAttention', 'endline': 557, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_len_and_dim_norm', 'complexity': 1, 'lineno': 712, 'classname': 'LSHSelfAttention', 'endline': 720, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_len_norm', 'complexity': 1, 'lineno': 722, 'classname': 'LSHSelfAttention', 'endline': 728, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_gather_by_expansion', 'complexity': 1, 'lineno': 730, 'classname': 'LSHSelfAttention', 'endline': 736, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 749, 'classname': 'ReverseSort', 'endline': 758, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'backward', 'complexity': 1, 'lineno': 761, 'classname': 'ReverseSort', 'endline': 771, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 775, 'classname': 'LocalSelfAttention', 'endline': 798, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 955, 'classname': 'ReformerSelfOutput', 'endline': 960, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 962, 'classname': 'ReformerSelfOutput', 'endline': 965, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 1039, 'classname': 'ReformerFeedForwardDense', 'endline': 1043, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1047, 'classname': 'ReformerFeedForwardOutput', 'endline': 1051, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 1053, 'classname': 'ReformerFeedForwardOutput', 'endline': 1056, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1060, 'classname': 'ChunkReformerFeedForward', 'endline': 1067, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 1069, 'classname': 'ChunkReformerFeedForward', 'endline': 1071, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward_chunk', 'complexity': 1, 'lineno': 1074, 'classname': 'ChunkReformerFeedForward', 'endline': 1077, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1081, 'classname': 'ReformerLayer', 'endline': 1089, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 1131, 'classname': 'ReformerLayer', 'endline': 1172, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'backward_pass', 'complexity': 1, 'lineno': 1175, 'classname': 'ReformerLayer', 'endline': 1232, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 1353, 'classname': 'ReformerEncoder', 'endline': 1387, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1392, 'classname': 'ReformerOnlyLMHead', 'endline': 1402, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 1404, 'classname': 'ReformerOnlyLMHead', 'endline': 1405, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward_chunk', 'complexity': 1, 'lineno': 1407, 'classname': 'ReformerOnlyLMHead', 'endline': 1409, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 1421, 'classname': 'ReformerPreTrainedModel', 'endline': 1428, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 1522, 'classname': 'ReformerModel', 'endline': 1523, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 1525, 'classname': 'ReformerModel', 'endline': 1526, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 1713, 'classname': 'ReformerModelWithLMHead', 'endline': 1714, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 1, 'lineno': 1716, 'classname': 'ReformerModelWithLMHead', 'endline': 1718, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 1807, 'classname': 'ReformerForMaskedLM', 'endline': 1808, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 1, 'lineno': 1810, 'classname': 'ReformerForMaskedLM', 'endline': 1812, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1883, 'classname': 'ReformerForQuestionAnswering', 'endline': 1891, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 1, 'lineno': 1893, 'classname': 'ReformerForQuestionAnswering', 'endline': 1895, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_retribert.py': [{'type': 'class', 'rank': 'B', 'name': 'RetriBertPreTrainedModel', 'complexity': 6, 'lineno': 42, 'endline': 59, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '_init_weights', 'complexity': 5, 'lineno': 51, 'classname': 'RetriBertPreTrainedModel', 'endline': 59, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_init_weights', 'complexity': 5, 'lineno': 51, 'classname': 'RetriBertPreTrainedModel', 'endline': 59, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'embed_sentences_checkpointed', 'complexity': 4, 'lineno': 93, 'classname': 'RetriBertModel', 'endline': 127, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'partial_encode', 'complexity': 1, 'lineno': 110, 'endline': 114, 'col_offset': 12, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'RetriBertModel', 'complexity': 3, 'lineno': 78, 'endline': 185, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 79, 'classname': 'RetriBertModel', 'endline': 91, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'embed_sentences_checkpointed', 'complexity': 4, 'lineno': 93, 'classname': 'RetriBertModel', 'endline': 127, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'partial_encode', 'complexity': 1, 'lineno': 110, 'endline': 114, 'col_offset': 12, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'embed_questions', 'complexity': 1, 'lineno': 129, 'classname': 'RetriBertModel', 'endline': 133, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'embed_answers', 'complexity': 2, 'lineno': 135, 'classname': 'RetriBertModel', 'endline': 144, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 146, 'classname': 'RetriBertModel', 'endline': 185, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 79, 'classname': 'RetriBertModel', 'endline': 91, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'embed_answers', 'complexity': 2, 'lineno': 135, 'classname': 'RetriBertModel', 'endline': 144, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'embed_questions', 'complexity': 1, 'lineno': 129, 'classname': 'RetriBertModel', 'endline': 133, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 146, 'classname': 'RetriBertModel', 'endline': 185, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_roberta.py': [{'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 383, 'classname': 'RobertaForMultipleChoice', 'endline': 456, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'RobertaForMultipleChoice', 'complexity': 6, 'lineno': 368, 'endline': 456, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 372, 'classname': 'RobertaForMultipleChoice', 'endline': 379, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 383, 'classname': 'RobertaForMultipleChoice', 'endline': 456, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 590, 'classname': 'RobertaForQuestionAnswering', 'endline': 670, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 183, 'classname': 'RobertaForMaskedLM', 'endline': 251, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'RobertaForQuestionAnswering', 'complexity': 4, 'lineno': 575, 'endline': 670, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 579, 'classname': 'RobertaForQuestionAnswering', 'endline': 586, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 590, 'classname': 'RobertaForQuestionAnswering', 'endline': 670, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'RobertaEmbeddings', 'complexity': 3, 'lineno': 46, 'endline': 84, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 51, 'classname': 'RobertaEmbeddings', 'endline': 56, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 59, 'classname': 'RobertaEmbeddings', 'endline': 68, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_position_ids_from_inputs_embeds', 'complexity': 1, 'lineno': 71, 'classname': 'RobertaEmbeddings', 'endline': 84, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 59, 'classname': 'RobertaEmbeddings', 'endline': 68, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'RobertaForMaskedLM', 'complexity': 3, 'lineno': 166, 'endline': 251, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 170, 'classname': 'RobertaForMaskedLM', 'endline': 176, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 178, 'classname': 'RobertaForMaskedLM', 'endline': 179, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 183, 'classname': 'RobertaForMaskedLM', 'endline': 251, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'RobertaForSequenceClassification', 'complexity': 3, 'lineno': 284, 'endline': 360, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 288, 'classname': 'RobertaForSequenceClassification', 'endline': 295, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 299, 'classname': 'RobertaForSequenceClassification', 'endline': 360, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 299, 'classname': 'RobertaForSequenceClassification', 'endline': 360, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'RobertaForTokenClassification', 'complexity': 3, 'lineno': 464, 'endline': 548, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 468, 'classname': 'RobertaForTokenClassification', 'endline': 476, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 480, 'classname': 'RobertaForTokenClassification', 'endline': 548, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 480, 'classname': 'RobertaForTokenClassification', 'endline': 548, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'RobertaModel', 'complexity': 2, 'lineno': 143, 'endline': 162, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 152, 'classname': 'RobertaModel', 'endline': 156, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 158, 'classname': 'RobertaModel', 'endline': 159, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 161, 'classname': 'RobertaModel', 'endline': 162, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'RobertaLMHead', 'complexity': 2, 'lineno': 254, 'endline': 276, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 257, 'classname': 'RobertaLMHead', 'endline': 266, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 268, 'classname': 'RobertaLMHead', 'endline': 276, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'RobertaClassificationHead', 'complexity': 2, 'lineno': 551, 'endline': 567, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 554, 'classname': 'RobertaClassificationHead', 'endline': 558, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 560, 'classname': 'RobertaClassificationHead', 'endline': 567, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'create_position_ids_from_input_ids', 'complexity': 1, 'lineno': 673, 'endline': 684, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 51, 'classname': 'RobertaEmbeddings', 'endline': 56, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_position_ids_from_inputs_embeds', 'complexity': 1, 'lineno': 71, 'classname': 'RobertaEmbeddings', 'endline': 84, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 152, 'classname': 'RobertaModel', 'endline': 156, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 158, 'classname': 'RobertaModel', 'endline': 159, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 161, 'classname': 'RobertaModel', 'endline': 162, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 170, 'classname': 'RobertaForMaskedLM', 'endline': 176, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 178, 'classname': 'RobertaForMaskedLM', 'endline': 179, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 257, 'classname': 'RobertaLMHead', 'endline': 266, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 268, 'classname': 'RobertaLMHead', 'endline': 276, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 288, 'classname': 'RobertaForSequenceClassification', 'endline': 295, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 372, 'classname': 'RobertaForMultipleChoice', 'endline': 379, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 468, 'classname': 'RobertaForTokenClassification', 'endline': 476, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 554, 'classname': 'RobertaClassificationHead', 'endline': 558, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 560, 'classname': 'RobertaClassificationHead', 'endline': 567, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 579, 'classname': 'RobertaForQuestionAnswering', 'endline': 586, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_t5.py': [{'type': 'method', 'rank': 'E', 'name': 'forward', 'complexity': 33, 'lineno': 655, 'classname': 'T5Stack', 'endline': 781, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 19, 'lineno': 294, 'classname': 'T5Attention', 'endline': 395, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'shape', 'complexity': 1, 'lineno': 330, 'endline': 332, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'unshape', 'complexity': 1, 'lineno': 334, 'endline': 336, 'col_offset': 8, 'closures': []}]}, {'type': 'function', 'rank': 'C', 'name': 'load_tf_weights_in_t5', 'complexity': 16, 'lineno': 56, 'endline': 136, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 14, 'lineno': 1023, 'classname': 'T5ForConditionalGeneration', 'endline': 1158, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 10, 'lineno': 479, 'classname': 'T5Block', 'endline': 554, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_init_weights', 'complexity': 10, 'lineno': 577, 'classname': 'T5PreTrainedModel', 'endline': 607, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'T5Stack', 'complexity': 8, 'lineno': 631, 'endline': 781, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 632, 'classname': 'T5Stack', 'endline': 644, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 646, 'classname': 'T5Stack', 'endline': 647, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 649, 'classname': 'T5Stack', 'endline': 650, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 652, 'classname': 'T5Stack', 'endline': 653, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'E', 'name': 'forward', 'complexity': 33, 'lineno': 655, 'classname': 'T5Stack', 'endline': 781, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'T5Block', 'complexity': 7, 'lineno': 468, 'endline': 554, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 469, 'classname': 'T5Block', 'endline': 477, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 10, 'lineno': 479, 'classname': 'T5Block', 'endline': 554, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 7, 'lineno': 892, 'classname': 'T5Model', 'endline': 982, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'T5Attention', 'complexity': 6, 'lineno': 194, 'endline': 395, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 195, 'classname': 'T5Attention', 'endline': 215, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 217, 'classname': 'T5Attention', 'endline': 229, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_relative_position_bucket', 'complexity': 2, 'lineno': 232, 'classname': 'T5Attention', 'endline': 277, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'compute_bias', 'complexity': 1, 'lineno': 279, 'classname': 'T5Attention', 'endline': 292, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 19, 'lineno': 294, 'classname': 'T5Attention', 'endline': 395, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'shape', 'complexity': 1, 'lineno': 330, 'endline': 332, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'unshape', 'complexity': 1, 'lineno': 334, 'endline': 336, 'col_offset': 8, 'closures': []}]}]}, {'type': 'class', 'rank': 'B', 'name': 'T5PreTrainedModel', 'complexity': 6, 'lineno': 557, 'endline': 628, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 567, 'classname': 'T5PreTrainedModel', 'endline': 575, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_init_weights', 'complexity': 10, 'lineno': 577, 'classname': 'T5PreTrainedModel', 'endline': 607, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_shift_right', 'complexity': 4, 'lineno': 609, 'classname': 'T5PreTrainedModel', 'endline': 628, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '_reorder_cache', 'complexity': 6, 'lineno': 1173, 'classname': 'T5ForConditionalGeneration', 'endline': 1197, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_shift_right', 'complexity': 4, 'lineno': 609, 'classname': 'T5PreTrainedModel', 'endline': 628, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'T5ForConditionalGeneration', 'complexity': 4, 'lineno': 986, 'endline': 1197, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 987, 'classname': 'T5ForConditionalGeneration', 'endline': 1003, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 1005, 'classname': 'T5ForConditionalGeneration', 'endline': 1006, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 1008, 'classname': 'T5ForConditionalGeneration', 'endline': 1011, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 1013, 'classname': 'T5ForConditionalGeneration', 'endline': 1014, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_encoder', 'complexity': 1, 'lineno': 1016, 'classname': 'T5ForConditionalGeneration', 'endline': 1017, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_decoder', 'complexity': 1, 'lineno': 1019, 'classname': 'T5ForConditionalGeneration', 'endline': 1020, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 14, 'lineno': 1023, 'classname': 'T5ForConditionalGeneration', 'endline': 1158, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 1160, 'classname': 'T5ForConditionalGeneration', 'endline': 1170, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_reorder_cache', 'complexity': 6, 'lineno': 1173, 'classname': 'T5ForConditionalGeneration', 'endline': 1197, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'T5LayerNorm', 'complexity': 3, 'lineno': 146, 'endline': 162, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 147, 'classname': 'T5LayerNorm', 'endline': 153, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 155, 'classname': 'T5LayerNorm', 'endline': 162, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'T5Model', 'complexity': 3, 'lineno': 854, 'endline': 982, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 855, 'classname': 'T5Model', 'endline': 867, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 869, 'classname': 'T5Model', 'endline': 870, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 872, 'classname': 'T5Model', 'endline': 875, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_encoder', 'complexity': 1, 'lineno': 877, 'classname': 'T5Model', 'endline': 878, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_decoder', 'complexity': 1, 'lineno': 880, 'classname': 'T5Model', 'endline': 881, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 883, 'classname': 'T5Model', 'endline': 889, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 7, 'lineno': 892, 'classname': 'T5Model', 'endline': 982, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 155, 'classname': 'T5LayerNorm', 'endline': 162, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'T5DenseReluDense', 'complexity': 2, 'lineno': 165, 'endline': 177, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 166, 'classname': 'T5DenseReluDense', 'endline': 170, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 172, 'classname': 'T5DenseReluDense', 'endline': 177, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'T5LayerFF', 'complexity': 2, 'lineno': 180, 'endline': 191, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 181, 'classname': 'T5LayerFF', 'endline': 185, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 187, 'classname': 'T5LayerFF', 'endline': 191, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 195, 'classname': 'T5Attention', 'endline': 215, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 217, 'classname': 'T5Attention', 'endline': 229, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_relative_position_bucket', 'complexity': 2, 'lineno': 232, 'classname': 'T5Attention', 'endline': 277, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'T5LayerSelfAttention', 'complexity': 2, 'lineno': 398, 'endline': 428, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 399, 'classname': 'T5LayerSelfAttention', 'endline': 403, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 405, 'classname': 'T5LayerSelfAttention', 'endline': 428, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'T5LayerCrossAttention', 'complexity': 2, 'lineno': 431, 'endline': 465, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 432, 'classname': 'T5LayerCrossAttention', 'endline': 436, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 438, 'classname': 'T5LayerCrossAttention', 'endline': 465, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 469, 'classname': 'T5Block', 'endline': 477, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 632, 'classname': 'T5Stack', 'endline': 644, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 883, 'classname': 'T5Model', 'endline': 889, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 1160, 'classname': 'T5ForConditionalGeneration', 'endline': 1170, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 147, 'classname': 'T5LayerNorm', 'endline': 153, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 166, 'classname': 'T5DenseReluDense', 'endline': 170, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 172, 'classname': 'T5DenseReluDense', 'endline': 177, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 181, 'classname': 'T5LayerFF', 'endline': 185, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 187, 'classname': 'T5LayerFF', 'endline': 191, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'compute_bias', 'complexity': 1, 'lineno': 279, 'classname': 'T5Attention', 'endline': 292, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 399, 'classname': 'T5LayerSelfAttention', 'endline': 403, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 405, 'classname': 'T5LayerSelfAttention', 'endline': 428, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 432, 'classname': 'T5LayerCrossAttention', 'endline': 436, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 438, 'classname': 'T5LayerCrossAttention', 'endline': 465, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 567, 'classname': 'T5PreTrainedModel', 'endline': 575, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 646, 'classname': 'T5Stack', 'endline': 647, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 649, 'classname': 'T5Stack', 'endline': 650, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 652, 'classname': 'T5Stack', 'endline': 653, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 855, 'classname': 'T5Model', 'endline': 867, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 869, 'classname': 'T5Model', 'endline': 870, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 872, 'classname': 'T5Model', 'endline': 875, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_encoder', 'complexity': 1, 'lineno': 877, 'classname': 'T5Model', 'endline': 878, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_decoder', 'complexity': 1, 'lineno': 880, 'classname': 'T5Model', 'endline': 881, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 987, 'classname': 'T5ForConditionalGeneration', 'endline': 1003, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 1005, 'classname': 'T5ForConditionalGeneration', 'endline': 1006, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 1008, 'classname': 'T5ForConditionalGeneration', 'endline': 1011, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 1013, 'classname': 'T5ForConditionalGeneration', 'endline': 1014, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_encoder', 'complexity': 1, 'lineno': 1016, 'classname': 'T5ForConditionalGeneration', 'endline': 1017, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_decoder', 'complexity': 1, 'lineno': 1019, 'classname': 'T5ForConditionalGeneration', 'endline': 1020, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_albert.py': [{'type': 'method', 'rank': 'D', 'name': 'call', 'complexity': 21, 'lineno': 540, 'classname': 'TFAlbertMainLayer', 'endline': 631, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 19, 'lineno': 1161, 'classname': 'TFAlbertForMultipleChoice', 'endline': 1260, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 1054, 'classname': 'TFAlbertForQuestionAnswering', 'endline': 1132, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFAlbertForMultipleChoice', 'complexity': 8, 'lineno': 1140, 'endline': 1260, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1141, 'classname': 'TFAlbertForMultipleChoice', 'endline': 1147, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 1151, 'classname': 'TFAlbertForMultipleChoice', 'endline': 1157, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 19, 'lineno': 1161, 'classname': 'TFAlbertForMultipleChoice', 'endline': 1260, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 7, 'lineno': 417, 'classname': 'TFAlbertTransformer', 'endline': 458, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 375, 'classname': 'TFAlbertLayerGroup', 'endline': 399, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFAlbertTransformer', 'complexity': 6, 'lineno': 402, 'endline': 458, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 403, 'classname': 'TFAlbertTransformer', 'endline': 414, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 7, 'lineno': 417, 'classname': 'TFAlbertTransformer', 'endline': 458, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 884, 'classname': 'TFAlbertForSequenceClassification', 'endline': 950, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 971, 'classname': 'TFAlbertForTokenClassification', 'endline': 1035, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFAlbertForQuestionAnswering', 'complexity': 6, 'lineno': 1042, 'endline': 1132, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1043, 'classname': 'TFAlbertForQuestionAnswering', 'endline': 1049, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 1054, 'classname': 'TFAlbertForQuestionAnswering', 'endline': 1132, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_embedding', 'complexity': 5, 'lineno': 123, 'classname': 'TFAlbertEmbeddings', 'endline': 146, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFAlbertLayerGroup', 'complexity': 5, 'lineno': 367, 'endline': 399, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 368, 'classname': 'TFAlbertLayerGroup', 'endline': 372, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 375, 'classname': 'TFAlbertLayerGroup', 'endline': 399, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFAlbertMainLayer', 'complexity': 5, 'lineno': 505, 'endline': 631, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 508, 'classname': 'TFAlbertMainLayer', 'endline': 520, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 523, 'classname': 'TFAlbertMainLayer', 'endline': 524, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 526, 'classname': 'TFAlbertMainLayer', 'endline': 528, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 530, 'classname': 'TFAlbertMainLayer', 'endline': 531, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 533, 'classname': 'TFAlbertMainLayer', 'endline': 538, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'call', 'complexity': 21, 'lineno': 540, 'classname': 'TFAlbertMainLayer', 'endline': 631, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFAlbertForSequenceClassification', 'complexity': 5, 'lineno': 871, 'endline': 950, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 872, 'classname': 'TFAlbertForSequenceClassification', 'endline': 879, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 884, 'classname': 'TFAlbertForSequenceClassification', 'endline': 950, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFAlbertForTokenClassification', 'complexity': 5, 'lineno': 958, 'endline': 1035, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 959, 'classname': 'TFAlbertForTokenClassification', 'endline': 966, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 971, 'classname': 'TFAlbertForTokenClassification', 'endline': 1035, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFAlbertSelfAttention', 'complexity': 4, 'lineno': 162, 'endline': 236, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 163, 'classname': 'TFAlbertSelfAttention', 'endline': 186, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'transpose_for_scores', 'complexity': 1, 'lineno': 188, 'classname': 'TFAlbertSelfAttention', 'endline': 190, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 4, 'lineno': 192, 'classname': 'TFAlbertSelfAttention', 'endline': 236, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 4, 'lineno': 192, 'classname': 'TFAlbertSelfAttention', 'endline': 236, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 4, 'lineno': 271, 'classname': 'TFAlbertAttention', 'endline': 324, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFAlbertEmbeddings', 'complexity': 3, 'lineno': 62, 'endline': 159, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 66, 'classname': 'TFAlbertEmbeddings', 'endline': 87, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 89, 'classname': 'TFAlbertEmbeddings', 'endline': 99, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 101, 'classname': 'TFAlbertEmbeddings', 'endline': 121, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_embedding', 'complexity': 5, 'lineno': 123, 'classname': 'TFAlbertEmbeddings', 'endline': 146, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_linear', 'complexity': 1, 'lineno': 148, 'classname': 'TFAlbertEmbeddings', 'endline': 159, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 101, 'classname': 'TFAlbertEmbeddings', 'endline': 121, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 163, 'classname': 'TFAlbertSelfAttention', 'endline': 186, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFAlbertAttention', 'complexity': 3, 'lineno': 257, 'endline': 324, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 258, 'classname': 'TFAlbertAttention', 'endline': 266, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 268, 'classname': 'TFAlbertAttention', 'endline': 269, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 4, 'lineno': 271, 'classname': 'TFAlbertAttention', 'endline': 324, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFAlbertLayer', 'complexity': 3, 'lineno': 327, 'endline': 364, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 328, 'classname': 'TFAlbertLayer', 'endline': 347, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 349, 'classname': 'TFAlbertLayer', 'endline': 364, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFAlbertSelfOutput', 'complexity': 2, 'lineno': 239, 'endline': 254, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 240, 'classname': 'TFAlbertSelfOutput', 'endline': 246, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 248, 'classname': 'TFAlbertSelfOutput', 'endline': 254, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 328, 'classname': 'TFAlbertLayer', 'endline': 347, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 368, 'classname': 'TFAlbertLayerGroup', 'endline': 372, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 403, 'classname': 'TFAlbertTransformer', 'endline': 414, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFAlbertMLMHead', 'complexity': 2, 'lineno': 470, 'endline': 501, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 471, 'classname': 'TFAlbertMLMHead', 'endline': 487, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 489, 'classname': 'TFAlbertMLMHead', 'endline': 494, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 496, 'classname': 'TFAlbertMLMHead', 'endline': 501, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 471, 'classname': 'TFAlbertMLMHead', 'endline': 487, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFAlbertModel', 'complexity': 2, 'lineno': 717, 'endline': 750, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 718, 'classname': 'TFAlbertModel', 'endline': 720, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 724, 'classname': 'TFAlbertModel', 'endline': 750, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFAlbertForPreTraining', 'complexity': 2, 'lineno': 758, 'endline': 806, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 759, 'classname': 'TFAlbertForPreTraining', 'endline': 765, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 767, 'classname': 'TFAlbertForPreTraining', 'endline': 768, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 771, 'classname': 'TFAlbertForPreTraining', 'endline': 806, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFAlbertSOPHead', 'complexity': 2, 'lineno': 809, 'endline': 821, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 810, 'classname': 'TFAlbertSOPHead', 'endline': 815, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 818, 'classname': 'TFAlbertSOPHead', 'endline': 821, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFAlbertForMaskedLM', 'complexity': 2, 'lineno': 825, 'endline': 863, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 826, 'classname': 'TFAlbertForMaskedLM', 'endline': 830, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 832, 'classname': 'TFAlbertForMaskedLM', 'endline': 833, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 837, 'classname': 'TFAlbertForMaskedLM', 'endline': 863, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 66, 'classname': 'TFAlbertEmbeddings', 'endline': 87, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 89, 'classname': 'TFAlbertEmbeddings', 'endline': 99, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_linear', 'complexity': 1, 'lineno': 148, 'classname': 'TFAlbertEmbeddings', 'endline': 159, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'transpose_for_scores', 'complexity': 1, 'lineno': 188, 'classname': 'TFAlbertSelfAttention', 'endline': 190, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 240, 'classname': 'TFAlbertSelfOutput', 'endline': 246, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 248, 'classname': 'TFAlbertSelfOutput', 'endline': 254, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 258, 'classname': 'TFAlbertAttention', 'endline': 266, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 268, 'classname': 'TFAlbertAttention', 'endline': 269, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 349, 'classname': 'TFAlbertLayer', 'endline': 364, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFAlbertPreTrainedModel', 'complexity': 1, 'lineno': 461, 'endline': 467, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 489, 'classname': 'TFAlbertMLMHead', 'endline': 494, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 496, 'classname': 'TFAlbertMLMHead', 'endline': 501, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 508, 'classname': 'TFAlbertMainLayer', 'endline': 520, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 523, 'classname': 'TFAlbertMainLayer', 'endline': 524, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 526, 'classname': 'TFAlbertMainLayer', 'endline': 528, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 530, 'classname': 'TFAlbertMainLayer', 'endline': 531, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 533, 'classname': 'TFAlbertMainLayer', 'endline': 538, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 718, 'classname': 'TFAlbertModel', 'endline': 720, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 724, 'classname': 'TFAlbertModel', 'endline': 750, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 759, 'classname': 'TFAlbertForPreTraining', 'endline': 765, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 767, 'classname': 'TFAlbertForPreTraining', 'endline': 768, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 771, 'classname': 'TFAlbertForPreTraining', 'endline': 806, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 810, 'classname': 'TFAlbertSOPHead', 'endline': 815, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 818, 'classname': 'TFAlbertSOPHead', 'endline': 821, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 826, 'classname': 'TFAlbertForMaskedLM', 'endline': 830, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 832, 'classname': 'TFAlbertForMaskedLM', 'endline': 833, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 837, 'classname': 'TFAlbertForMaskedLM', 'endline': 863, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 872, 'classname': 'TFAlbertForSequenceClassification', 'endline': 879, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 959, 'classname': 'TFAlbertForTokenClassification', 'endline': 966, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1043, 'classname': 'TFAlbertForQuestionAnswering', 'endline': 1049, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1141, 'classname': 'TFAlbertForMultipleChoice', 'endline': 1147, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 1151, 'classname': 'TFAlbertForMultipleChoice', 'endline': 1157, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_auto.py': [{'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 339, 'classname': 'TFAutoModel', 'endline': 427, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 488, 'classname': 'TFAutoModelForPreTraining', 'endline': 578, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 655, 'classname': 'TFAutoModelWithLMHead', 'endline': 746, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 808, 'classname': 'TFAutoModelForMultipleChoice', 'endline': 894, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 964, 'classname': 'TFAutoModelForSequenceClassification', 'endline': 1053, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 1125, 'classname': 'TFAutoModelForQuestionAnswering', 'endline': 1215, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 1265, 'classname': 'TFAutoModelForTokenClassification', 'endline': 1346, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFAutoModel', 'complexity': 4, 'lineno': 267, 'endline': 427, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 292, 'classname': 'TFAutoModel', 'endline': 294, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 300, 'classname': 'TFAutoModel', 'endline': 334, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 339, 'classname': 'TFAutoModel', 'endline': 427, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 300, 'classname': 'TFAutoModel', 'endline': 334, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFAutoModelForPreTraining', 'complexity': 4, 'lineno': 432, 'endline': 578, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 441, 'classname': 'TFAutoModelForPreTraining', 'endline': 443, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 449, 'classname': 'TFAutoModelForPreTraining', 'endline': 483, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 488, 'classname': 'TFAutoModelForPreTraining', 'endline': 578, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 449, 'classname': 'TFAutoModelForPreTraining', 'endline': 483, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFAutoModelWithLMHead', 'complexity': 4, 'lineno': 583, 'endline': 746, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 608, 'classname': 'TFAutoModelWithLMHead', 'endline': 610, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 616, 'classname': 'TFAutoModelWithLMHead', 'endline': 650, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 655, 'classname': 'TFAutoModelWithLMHead', 'endline': 746, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 616, 'classname': 'TFAutoModelWithLMHead', 'endline': 650, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFAutoModelForMultipleChoice', 'complexity': 4, 'lineno': 751, 'endline': 894, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 767, 'classname': 'TFAutoModelForMultipleChoice', 'endline': 769, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 775, 'classname': 'TFAutoModelForMultipleChoice', 'endline': 803, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 808, 'classname': 'TFAutoModelForMultipleChoice', 'endline': 894, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 775, 'classname': 'TFAutoModelForMultipleChoice', 'endline': 803, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFAutoModelForSequenceClassification', 'complexity': 4, 'lineno': 899, 'endline': 1053, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 919, 'classname': 'TFAutoModelForSequenceClassification', 'endline': 921, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 927, 'classname': 'TFAutoModelForSequenceClassification', 'endline': 959, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 964, 'classname': 'TFAutoModelForSequenceClassification', 'endline': 1053, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 927, 'classname': 'TFAutoModelForSequenceClassification', 'endline': 959, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFAutoModelForQuestionAnswering', 'complexity': 4, 'lineno': 1058, 'endline': 1215, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1079, 'classname': 'TFAutoModelForQuestionAnswering', 'endline': 1081, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 1087, 'classname': 'TFAutoModelForQuestionAnswering', 'endline': 1120, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 1125, 'classname': 'TFAutoModelForQuestionAnswering', 'endline': 1215, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 1087, 'classname': 'TFAutoModelForQuestionAnswering', 'endline': 1120, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFAutoModelForTokenClassification', 'complexity': 4, 'lineno': 1220, 'endline': 1346, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1221, 'classname': 'TFAutoModelForTokenClassification', 'endline': 1223, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 1229, 'classname': 'TFAutoModelForTokenClassification', 'endline': 1260, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 5, 'lineno': 1265, 'classname': 'TFAutoModelForTokenClassification', 'endline': 1346, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 4, 'lineno': 1229, 'classname': 'TFAutoModelForTokenClassification', 'endline': 1260, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 292, 'classname': 'TFAutoModel', 'endline': 294, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 441, 'classname': 'TFAutoModelForPreTraining', 'endline': 443, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 608, 'classname': 'TFAutoModelWithLMHead', 'endline': 610, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 767, 'classname': 'TFAutoModelForMultipleChoice', 'endline': 769, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 919, 'classname': 'TFAutoModelForSequenceClassification', 'endline': 921, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1079, 'classname': 'TFAutoModelForQuestionAnswering', 'endline': 1081, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1221, 'classname': 'TFAutoModelForTokenClassification', 'endline': 1223, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_bert.py': [{'type': 'method', 'rank': 'D', 'name': 'call', 'complexity': 21, 'lineno': 527, 'classname': 'TFBertMainLayer', 'endline': 618, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 20, 'lineno': 1013, 'classname': 'TFBertForMultipleChoice', 'endline': 1117, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFBertForMultipleChoice', 'complexity': 8, 'lineno': 992, 'endline': 1117, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 993, 'classname': 'TFBertForMultipleChoice', 'endline': 999, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 1003, 'classname': 'TFBertForMultipleChoice', 'endline': 1009, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 20, 'lineno': 1013, 'classname': 'TFBertForMultipleChoice', 'endline': 1117, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 1222, 'classname': 'TFBertForQuestionAnswering', 'endline': 1300, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 7, 'lineno': 389, 'classname': 'TFBertEncoder', 'endline': 415, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFBertEncoder', 'complexity': 6, 'lineno': 384, 'endline': 415, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 385, 'classname': 'TFBertEncoder', 'endline': 387, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 7, 'lineno': 389, 'classname': 'TFBertEncoder', 'endline': 415, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'TFBertMainLayer', 'complexity': 6, 'lineno': 499, 'endline': 618, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 502, 'classname': 'TFBertMainLayer', 'endline': 511, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 513, 'classname': 'TFBertMainLayer', 'endline': 514, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 516, 'classname': 'TFBertMainLayer', 'endline': 518, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 520, 'classname': 'TFBertMainLayer', 'endline': 525, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'call', 'complexity': 21, 'lineno': 527, 'classname': 'TFBertMainLayer', 'endline': 618, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 918, 'classname': 'TFBertForSequenceClassification', 'endline': 984, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 1138, 'classname': 'TFBertForTokenClassification', 'endline': 1202, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFBertForQuestionAnswering', 'complexity': 6, 'lineno': 1210, 'endline': 1300, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1211, 'classname': 'TFBertForQuestionAnswering', 'endline': 1217, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 1222, 'classname': 'TFBertForQuestionAnswering', 'endline': 1300, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_embedding', 'complexity': 5, 'lineno': 172, 'classname': 'TFBertEmbeddings', 'endline': 195, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFBertForSequenceClassification', 'complexity': 5, 'lineno': 905, 'endline': 984, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 906, 'classname': 'TFBertForSequenceClassification', 'endline': 913, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 918, 'classname': 'TFBertForSequenceClassification', 'endline': 984, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFBertForTokenClassification', 'complexity': 5, 'lineno': 1125, 'endline': 1202, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1126, 'classname': 'TFBertForTokenClassification', 'endline': 1133, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 1138, 'classname': 'TFBertForTokenClassification', 'endline': 1202, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFBertSelfAttention', 'complexity': 4, 'lineno': 213, 'endline': 288, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 214, 'classname': 'TFBertSelfAttention', 'endline': 237, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'transpose_for_scores', 'complexity': 1, 'lineno': 239, 'classname': 'TFBertSelfAttention', 'endline': 241, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 4, 'lineno': 243, 'classname': 'TFBertSelfAttention', 'endline': 288, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 4, 'lineno': 243, 'classname': 'TFBertSelfAttention', 'endline': 288, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFBertEmbeddings', 'complexity': 3, 'lineno': 110, 'endline': 210, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 114, 'classname': 'TFBertEmbeddings', 'endline': 136, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 138, 'classname': 'TFBertEmbeddings', 'endline': 148, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 150, 'classname': 'TFBertEmbeddings', 'endline': 170, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_embedding', 'complexity': 5, 'lineno': 172, 'classname': 'TFBertEmbeddings', 'endline': 195, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_linear', 'complexity': 1, 'lineno': 197, 'classname': 'TFBertEmbeddings', 'endline': 210, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 150, 'classname': 'TFBertEmbeddings', 'endline': 170, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 214, 'classname': 'TFBertSelfAttention', 'endline': 237, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFBertIntermediate', 'complexity': 3, 'lineno': 329, 'endline': 343, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 330, 'classname': 'TFBertIntermediate', 'endline': 338, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 340, 'classname': 'TFBertIntermediate', 'endline': 343, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFBertPredictionHeadTransform', 'complexity': 3, 'lineno': 436, 'endline': 452, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 437, 'classname': 'TFBertPredictionHeadTransform', 'endline': 446, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 448, 'classname': 'TFBertPredictionHeadTransform', 'endline': 452, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFBertSelfOutput', 'complexity': 2, 'lineno': 291, 'endline': 306, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 292, 'classname': 'TFBertSelfOutput', 'endline': 298, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 300, 'classname': 'TFBertSelfOutput', 'endline': 306, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFBertAttention', 'complexity': 2, 'lineno': 309, 'endline': 326, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 310, 'classname': 'TFBertAttention', 'endline': 313, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 315, 'classname': 'TFBertAttention', 'endline': 316, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 318, 'classname': 'TFBertAttention', 'endline': 326, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 330, 'classname': 'TFBertIntermediate', 'endline': 338, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFBertOutput', 'complexity': 2, 'lineno': 346, 'endline': 361, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 347, 'classname': 'TFBertOutput', 'endline': 353, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 355, 'classname': 'TFBertOutput', 'endline': 361, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFBertLayer', 'complexity': 2, 'lineno': 364, 'endline': 381, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 365, 'classname': 'TFBertLayer', 'endline': 369, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 371, 'classname': 'TFBertLayer', 'endline': 381, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 385, 'classname': 'TFBertEncoder', 'endline': 387, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFBertPooler', 'complexity': 2, 'lineno': 418, 'endline': 433, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 419, 'classname': 'TFBertPooler', 'endline': 425, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 428, 'classname': 'TFBertPooler', 'endline': 433, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 437, 'classname': 'TFBertPredictionHeadTransform', 'endline': 446, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFBertLMPredictionHead', 'complexity': 2, 'lineno': 455, 'endline': 473, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 456, 'classname': 'TFBertLMPredictionHead', 'endline': 463, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 465, 'classname': 'TFBertLMPredictionHead', 'endline': 467, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 469, 'classname': 'TFBertLMPredictionHead', 'endline': 473, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFBertMLMHead', 'complexity': 2, 'lineno': 476, 'endline': 483, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 477, 'classname': 'TFBertMLMHead', 'endline': 479, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 481, 'classname': 'TFBertMLMHead', 'endline': 483, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFBertNSPHead', 'complexity': 2, 'lineno': 486, 'endline': 495, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 487, 'classname': 'TFBertNSPHead', 'endline': 490, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 493, 'classname': 'TFBertNSPHead', 'endline': 495, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFBertModel', 'complexity': 2, 'lineno': 707, 'endline': 740, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 708, 'classname': 'TFBertModel', 'endline': 710, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 714, 'classname': 'TFBertModel', 'endline': 740, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFBertForPreTraining', 'complexity': 2, 'lineno': 748, 'endline': 802, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 749, 'classname': 'TFBertForPreTraining', 'endline': 754, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 756, 'classname': 'TFBertForPreTraining', 'endline': 757, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 760, 'classname': 'TFBertForPreTraining', 'endline': 802, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFBertForMaskedLM', 'complexity': 2, 'lineno': 806, 'endline': 843, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 807, 'classname': 'TFBertForMaskedLM', 'endline': 811, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 813, 'classname': 'TFBertForMaskedLM', 'endline': 814, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 818, 'classname': 'TFBertForMaskedLM', 'endline': 843, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFBertForNextSentencePrediction', 'complexity': 2, 'lineno': 849, 'endline': 897, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 850, 'classname': 'TFBertForNextSentencePrediction', 'endline': 854, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 857, 'classname': 'TFBertForNextSentencePrediction', 'endline': 897, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'gelu', 'complexity': 1, 'lineno': 74, 'endline': 82, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'gelu_new', 'complexity': 1, 'lineno': 85, 'endline': 95, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'swish', 'complexity': 1, 'lineno': 98, 'endline': 99, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 114, 'classname': 'TFBertEmbeddings', 'endline': 136, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 138, 'classname': 'TFBertEmbeddings', 'endline': 148, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_linear', 'complexity': 1, 'lineno': 197, 'classname': 'TFBertEmbeddings', 'endline': 210, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'transpose_for_scores', 'complexity': 1, 'lineno': 239, 'classname': 'TFBertSelfAttention', 'endline': 241, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 292, 'classname': 'TFBertSelfOutput', 'endline': 298, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 300, 'classname': 'TFBertSelfOutput', 'endline': 306, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 310, 'classname': 'TFBertAttention', 'endline': 313, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 315, 'classname': 'TFBertAttention', 'endline': 316, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 318, 'classname': 'TFBertAttention', 'endline': 326, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 340, 'classname': 'TFBertIntermediate', 'endline': 343, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 347, 'classname': 'TFBertOutput', 'endline': 353, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 355, 'classname': 'TFBertOutput', 'endline': 361, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 365, 'classname': 'TFBertLayer', 'endline': 369, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 371, 'classname': 'TFBertLayer', 'endline': 381, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 419, 'classname': 'TFBertPooler', 'endline': 425, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 428, 'classname': 'TFBertPooler', 'endline': 433, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 448, 'classname': 'TFBertPredictionHeadTransform', 'endline': 452, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 456, 'classname': 'TFBertLMPredictionHead', 'endline': 463, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 465, 'classname': 'TFBertLMPredictionHead', 'endline': 467, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 469, 'classname': 'TFBertLMPredictionHead', 'endline': 473, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 477, 'classname': 'TFBertMLMHead', 'endline': 479, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 481, 'classname': 'TFBertMLMHead', 'endline': 483, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 487, 'classname': 'TFBertNSPHead', 'endline': 490, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 493, 'classname': 'TFBertNSPHead', 'endline': 495, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 502, 'classname': 'TFBertMainLayer', 'endline': 511, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 513, 'classname': 'TFBertMainLayer', 'endline': 514, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 516, 'classname': 'TFBertMainLayer', 'endline': 518, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 520, 'classname': 'TFBertMainLayer', 'endline': 525, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFBertPreTrainedModel', 'complexity': 1, 'lineno': 621, 'endline': 627, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 708, 'classname': 'TFBertModel', 'endline': 710, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 714, 'classname': 'TFBertModel', 'endline': 740, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 749, 'classname': 'TFBertForPreTraining', 'endline': 754, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 756, 'classname': 'TFBertForPreTraining', 'endline': 757, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 760, 'classname': 'TFBertForPreTraining', 'endline': 802, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 807, 'classname': 'TFBertForMaskedLM', 'endline': 811, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 813, 'classname': 'TFBertForMaskedLM', 'endline': 814, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 818, 'classname': 'TFBertForMaskedLM', 'endline': 843, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 850, 'classname': 'TFBertForNextSentencePrediction', 'endline': 854, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 857, 'classname': 'TFBertForNextSentencePrediction', 'endline': 897, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 906, 'classname': 'TFBertForSequenceClassification', 'endline': 913, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 993, 'classname': 'TFBertForMultipleChoice', 'endline': 999, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 1003, 'classname': 'TFBertForMultipleChoice', 'endline': 1009, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1126, 'classname': 'TFBertForTokenClassification', 'endline': 1133, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1211, 'classname': 'TFBertForQuestionAnswering', 'endline': 1217, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_camembert.py': [{'type': 'class', 'rank': 'A', 'name': 'TFCamembertModel', 'complexity': 1, 'lineno': 74, 'endline': 80, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'TFCamembertForMaskedLM', 'complexity': 1, 'lineno': 86, 'endline': 92, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'TFCamembertForSequenceClassification', 'complexity': 1, 'lineno': 100, 'endline': 106, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'TFCamembertForTokenClassification', 'complexity': 1, 'lineno': 114, 'endline': 120, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'TFCamembertForMultipleChoice', 'complexity': 1, 'lineno': 128, 'endline': 134, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'TFCamembertForQuestionAnswering', 'complexity': 1, 'lineno': 141, 'endline': 147, 'col_offset': 0, 'methods': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_ctrl.py': [{'type': 'method', 'rank': 'E', 'name': 'call', 'complexity': 40, 'lineno': 232, 'classname': 'TFCTRLMainLayer', 'endline': 391, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFCTRLMainLayer', 'complexity': 8, 'lineno': 184, 'endline': 391, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 187, 'classname': 'TFCTRLMainLayer', 'endline': 214, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 216, 'classname': 'TFCTRLMainLayer', 'endline': 217, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 219, 'classname': 'TFCTRLMainLayer', 'endline': 221, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 223, 'classname': 'TFCTRLMainLayer', 'endline': 224, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 226, 'classname': 'TFCTRLMainLayer', 'endline': 230, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'E', 'name': 'call', 'complexity': 40, 'lineno': 232, 'classname': 'TFCTRLMainLayer', 'endline': 391, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'scaled_dot_product_attention', 'complexity': 4, 'lineno': 63, 'endline': 85, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 4, 'lineno': 106, 'classname': 'TFMultiHeadAttention', 'endline': 140, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFMultiHeadAttention', 'complexity': 3, 'lineno': 88, 'endline': 140, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 89, 'classname': 'TFMultiHeadAttention', 'endline': 100, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'split_into_heads', 'complexity': 1, 'lineno': 102, 'classname': 'TFMultiHeadAttention', 'endline': 104, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 4, 'lineno': 106, 'classname': 'TFMultiHeadAttention', 'endline': 140, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFEncoderLayer', 'complexity': 2, 'lineno': 150, 'endline': 180, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 151, 'classname': 'TFEncoderLayer', 'endline': 161, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 163, 'classname': 'TFEncoderLayer', 'endline': 180, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 187, 'classname': 'TFCTRLMainLayer', 'endline': 214, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFCTRLModel', 'complexity': 2, 'lineno': 488, 'endline': 518, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 489, 'classname': 'TFCTRLModel', 'endline': 491, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 495, 'classname': 'TFCTRLModel', 'endline': 518, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFCTRLLMHead', 'complexity': 2, 'lineno': 521, 'endline': 537, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 522, 'classname': 'TFCTRLLMHead', 'endline': 528, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 530, 'classname': 'TFCTRLLMHead', 'endline': 532, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 534, 'classname': 'TFCTRLLMHead', 'endline': 537, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFCTRLLMHeadModel', 'complexity': 2, 'lineno': 545, 'endline': 593, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 546, 'classname': 'TFCTRLLMHeadModel', 'endline': 550, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 552, 'classname': 'TFCTRLLMHeadModel', 'endline': 553, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 555, 'classname': 'TFCTRLLMHeadModel', 'endline': 560, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 564, 'classname': 'TFCTRLLMHeadModel', 'endline': 593, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 555, 'classname': 'TFCTRLLMHeadModel', 'endline': 560, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'angle_defn', 'complexity': 1, 'lineno': 46, 'endline': 48, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'positional_encoding', 'complexity': 1, 'lineno': 51, 'endline': 60, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'point_wise_feed_forward_network', 'complexity': 1, 'lineno': 143, 'endline': 146, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 89, 'classname': 'TFMultiHeadAttention', 'endline': 100, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'split_into_heads', 'complexity': 1, 'lineno': 102, 'classname': 'TFMultiHeadAttention', 'endline': 104, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 151, 'classname': 'TFEncoderLayer', 'endline': 161, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 163, 'classname': 'TFEncoderLayer', 'endline': 180, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 216, 'classname': 'TFCTRLMainLayer', 'endline': 217, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 219, 'classname': 'TFCTRLMainLayer', 'endline': 221, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 223, 'classname': 'TFCTRLMainLayer', 'endline': 224, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 226, 'classname': 'TFCTRLMainLayer', 'endline': 230, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFCTRLPreTrainedModel', 'complexity': 1, 'lineno': 394, 'endline': 400, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 489, 'classname': 'TFCTRLModel', 'endline': 491, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 495, 'classname': 'TFCTRLModel', 'endline': 518, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 522, 'classname': 'TFCTRLLMHead', 'endline': 528, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 530, 'classname': 'TFCTRLLMHead', 'endline': 532, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 534, 'classname': 'TFCTRLLMHead', 'endline': 537, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 546, 'classname': 'TFCTRLLMHeadModel', 'endline': 550, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 552, 'classname': 'TFCTRLLMHeadModel', 'endline': 553, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 564, 'classname': 'TFCTRLLMHeadModel', 'endline': 593, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_distilbert.py': [{'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 18, 'lineno': 438, 'classname': 'TFDistilBertMainLayer', 'endline': 498, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 16, 'lineno': 881, 'classname': 'TFDistilBertForMultipleChoice', 'endline': 975, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 9, 'lineno': 363, 'classname': 'TFTransformer', 'endline': 412, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 996, 'classname': 'TFDistilBertForQuestionAnswering', 'endline': 1070, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFTransformer', 'complexity': 7, 'lineno': 356, 'endline': 412, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 357, 'classname': 'TFTransformer', 'endline': 361, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 9, 'lineno': 363, 'classname': 'TFTransformer', 'endline': 412, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'TFDistilBertForMultipleChoice', 'complexity': 7, 'lineno': 854, 'endline': 975, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 855, 'classname': 'TFDistilBertForMultipleChoice', 'endline': 867, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 871, 'classname': 'TFDistilBertForMultipleChoice', 'endline': 877, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 16, 'lineno': 881, 'classname': 'TFDistilBertForMultipleChoice', 'endline': 975, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 702, 'classname': 'TFDistilBertForSequenceClassification', 'endline': 765, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 786, 'classname': 'TFDistilBertForTokenClassification', 'endline': 846, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFDistilBertForQuestionAnswering', 'complexity': 6, 'lineno': 983, 'endline': 1070, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 984, 'classname': 'TFDistilBertForQuestionAnswering', 'endline': 992, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 996, 'classname': 'TFDistilBertForQuestionAnswering', 'endline': 1070, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_embedding', 'complexity': 5, 'lineno': 138, 'classname': 'TFEmbeddings', 'endline': 171, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFDistilBertMainLayer', 'complexity': 5, 'lineno': 416, 'endline': 498, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 419, 'classname': 'TFDistilBertMainLayer', 'endline': 426, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 428, 'classname': 'TFDistilBertMainLayer', 'endline': 429, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 431, 'classname': 'TFDistilBertMainLayer', 'endline': 433, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 435, 'classname': 'TFDistilBertMainLayer', 'endline': 436, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 18, 'lineno': 438, 'classname': 'TFDistilBertMainLayer', 'endline': 498, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFDistilBertForSequenceClassification', 'complexity': 5, 'lineno': 683, 'endline': 765, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 684, 'classname': 'TFDistilBertForSequenceClassification', 'endline': 698, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 702, 'classname': 'TFDistilBertForSequenceClassification', 'endline': 765, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFDistilBertForTokenClassification', 'complexity': 5, 'lineno': 773, 'endline': 846, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 774, 'classname': 'TFDistilBertForTokenClassification', 'endline': 781, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 786, 'classname': 'TFDistilBertForTokenClassification', 'endline': 846, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFTransformerBlock', 'complexity': 4, 'lineno': 303, 'endline': 353, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 304, 'classname': 'TFTransformerBlock', 'endline': 319, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 321, 'classname': 'TFTransformerBlock', 'endline': 353, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFEmbeddings', 'complexity': 3, 'lineno': 87, 'endline': 186, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 88, 'classname': 'TFEmbeddings', 'endline': 104, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 106, 'classname': 'TFEmbeddings', 'endline': 114, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 116, 'classname': 'TFEmbeddings', 'endline': 136, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_embedding', 'complexity': 5, 'lineno': 138, 'classname': 'TFEmbeddings', 'endline': 171, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_linear', 'complexity': 1, 'lineno': 173, 'classname': 'TFEmbeddings', 'endline': 186, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 116, 'classname': 'TFEmbeddings', 'endline': 136, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFMultiHeadSelfAttention', 'complexity': 3, 'lineno': 189, 'endline': 275, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 190, 'classname': 'TFMultiHeadSelfAttention', 'endline': 212, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 214, 'classname': 'TFMultiHeadSelfAttention', 'endline': 215, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 217, 'classname': 'TFMultiHeadSelfAttention', 'endline': 275, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'shape', 'complexity': 1, 'lineno': 243, 'endline': 245, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'unshape', 'complexity': 1, 'lineno': 247, 'endline': 249, 'col_offset': 8, 'closures': []}]}]}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 217, 'classname': 'TFMultiHeadSelfAttention', 'endline': 275, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'shape', 'complexity': 1, 'lineno': 243, 'endline': 245, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'unshape', 'complexity': 1, 'lineno': 247, 'endline': 249, 'col_offset': 8, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFFFN', 'complexity': 3, 'lineno': 278, 'endline': 300, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 279, 'classname': 'TFFFN', 'endline': 292, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 295, 'classname': 'TFFFN', 'endline': 300, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 279, 'classname': 'TFFFN', 'endline': 292, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 321, 'classname': 'TFTransformerBlock', 'endline': 353, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 190, 'classname': 'TFMultiHeadSelfAttention', 'endline': 212, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 304, 'classname': 'TFTransformerBlock', 'endline': 319, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 357, 'classname': 'TFTransformer', 'endline': 361, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFDistilBertModel', 'complexity': 2, 'lineno': 578, 'endline': 604, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 579, 'classname': 'TFDistilBertModel', 'endline': 581, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 585, 'classname': 'TFDistilBertModel', 'endline': 604, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFDistilBertLMHead', 'complexity': 2, 'lineno': 607, 'endline': 623, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 608, 'classname': 'TFDistilBertLMHead', 'endline': 614, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 616, 'classname': 'TFDistilBertLMHead', 'endline': 618, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 620, 'classname': 'TFDistilBertLMHead', 'endline': 623, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFDistilBertForMaskedLM', 'complexity': 2, 'lineno': 629, 'endline': 675, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 630, 'classname': 'TFDistilBertForMaskedLM', 'endline': 640, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 642, 'classname': 'TFDistilBertForMaskedLM', 'endline': 643, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 647, 'classname': 'TFDistilBertForMaskedLM', 'endline': 675, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 984, 'classname': 'TFDistilBertForQuestionAnswering', 'endline': 992, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'gelu', 'complexity': 1, 'lineno': 63, 'endline': 71, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'gelu_new', 'complexity': 1, 'lineno': 74, 'endline': 84, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 88, 'classname': 'TFEmbeddings', 'endline': 104, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 106, 'classname': 'TFEmbeddings', 'endline': 114, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_linear', 'complexity': 1, 'lineno': 173, 'classname': 'TFEmbeddings', 'endline': 186, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 214, 'classname': 'TFMultiHeadSelfAttention', 'endline': 215, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 295, 'classname': 'TFFFN', 'endline': 300, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 419, 'classname': 'TFDistilBertMainLayer', 'endline': 426, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 428, 'classname': 'TFDistilBertMainLayer', 'endline': 429, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 431, 'classname': 'TFDistilBertMainLayer', 'endline': 433, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 435, 'classname': 'TFDistilBertMainLayer', 'endline': 436, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFDistilBertPreTrainedModel', 'complexity': 1, 'lineno': 502, 'endline': 508, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 579, 'classname': 'TFDistilBertModel', 'endline': 581, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 585, 'classname': 'TFDistilBertModel', 'endline': 604, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 608, 'classname': 'TFDistilBertLMHead', 'endline': 614, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 616, 'classname': 'TFDistilBertLMHead', 'endline': 618, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 620, 'classname': 'TFDistilBertLMHead', 'endline': 623, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 630, 'classname': 'TFDistilBertForMaskedLM', 'endline': 640, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 642, 'classname': 'TFDistilBertForMaskedLM', 'endline': 643, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 647, 'classname': 'TFDistilBertForMaskedLM', 'endline': 675, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 684, 'classname': 'TFDistilBertForSequenceClassification', 'endline': 698, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 774, 'classname': 'TFDistilBertForTokenClassification', 'endline': 781, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 855, 'classname': 'TFDistilBertForMultipleChoice', 'endline': 867, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 871, 'classname': 'TFDistilBertForMultipleChoice', 'endline': 877, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_electra.py': [{'type': 'method', 'rank': 'D', 'name': 'call', 'complexity': 21, 'lineno': 235, 'classname': 'TFElectraMainLayer', 'endline': 302, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 677, 'classname': 'TFElectraForQuestionAnswering', 'endline': 754, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 595, 'classname': 'TFElectraForTokenClassification', 'endline': 657, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFElectraForQuestionAnswering', 'complexity': 6, 'lineno': 665, 'endline': 754, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 666, 'classname': 'TFElectraForQuestionAnswering', 'endline': 672, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 677, 'classname': 'TFElectraForQuestionAnswering', 'endline': 754, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_embedding', 'complexity': 5, 'lineno': 96, 'classname': 'TFElectraEmbeddings', 'endline': 119, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFElectraMainLayer', 'complexity': 5, 'lineno': 205, 'endline': 302, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 209, 'classname': 'TFElectraMainLayer', 'endline': 216, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 218, 'classname': 'TFElectraMainLayer', 'endline': 219, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 221, 'classname': 'TFElectraMainLayer', 'endline': 223, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 225, 'classname': 'TFElectraMainLayer', 'endline': 226, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 228, 'classname': 'TFElectraMainLayer', 'endline': 233, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'call', 'complexity': 21, 'lineno': 235, 'classname': 'TFElectraMainLayer', 'endline': 302, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFElectraForTokenClassification', 'complexity': 5, 'lineno': 583, 'endline': 657, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 584, 'classname': 'TFElectraForTokenClassification', 'endline': 590, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 595, 'classname': 'TFElectraForTokenClassification', 'endline': 657, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFElectraEmbeddings', 'complexity': 3, 'lineno': 34, 'endline': 134, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 38, 'classname': 'TFElectraEmbeddings', 'endline': 60, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 62, 'classname': 'TFElectraEmbeddings', 'endline': 72, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 74, 'classname': 'TFElectraEmbeddings', 'endline': 94, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_embedding', 'complexity': 5, 'lineno': 96, 'classname': 'TFElectraEmbeddings', 'endline': 119, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_linear', 'complexity': 1, 'lineno': 121, 'classname': 'TFElectraEmbeddings', 'endline': 134, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 74, 'classname': 'TFElectraEmbeddings', 'endline': 94, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFElectraPreTrainedModel', 'complexity': 3, 'lineno': 168, 'endline': 201, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'get_extended_attention_mask', 'complexity': 2, 'lineno': 173, 'classname': 'TFElectraPreTrainedModel', 'endline': 193, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_head_mask', 'complexity': 2, 'lineno': 195, 'classname': 'TFElectraPreTrainedModel', 'endline': 201, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFElectraDiscriminatorPredictions', 'complexity': 2, 'lineno': 137, 'endline': 150, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 138, 'classname': 'TFElectraDiscriminatorPredictions', 'endline': 143, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 145, 'classname': 'TFElectraDiscriminatorPredictions', 'endline': 150, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFElectraGeneratorPredictions', 'complexity': 2, 'lineno': 153, 'endline': 165, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 154, 'classname': 'TFElectraGeneratorPredictions', 'endline': 158, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 160, 'classname': 'TFElectraGeneratorPredictions', 'endline': 165, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'get_extended_attention_mask', 'complexity': 2, 'lineno': 173, 'classname': 'TFElectraPreTrainedModel', 'endline': 193, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_head_mask', 'complexity': 2, 'lineno': 195, 'classname': 'TFElectraPreTrainedModel', 'endline': 201, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 209, 'classname': 'TFElectraMainLayer', 'endline': 216, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFElectraModel', 'complexity': 2, 'lineno': 381, 'endline': 407, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 382, 'classname': 'TFElectraModel', 'endline': 384, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 388, 'classname': 'TFElectraModel', 'endline': 407, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFElectraForPreTraining', 'complexity': 2, 'lineno': 418, 'endline': 483, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 419, 'classname': 'TFElectraForPreTraining', 'endline': 423, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 426, 'classname': 'TFElectraForPreTraining', 'endline': 483, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFElectraMaskedLMHead', 'complexity': 2, 'lineno': 486, 'endline': 499, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 487, 'classname': 'TFElectraMaskedLMHead', 'endline': 490, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 492, 'classname': 'TFElectraMaskedLMHead', 'endline': 494, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 496, 'classname': 'TFElectraMaskedLMHead', 'endline': 499, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFElectraForMaskedLM', 'complexity': 2, 'lineno': 509, 'endline': 574, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 510, 'classname': 'TFElectraForMaskedLM', 'endline': 520, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 522, 'classname': 'TFElectraForMaskedLM', 'endline': 523, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 527, 'classname': 'TFElectraForMaskedLM', 'endline': 574, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 510, 'classname': 'TFElectraForMaskedLM', 'endline': 520, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 38, 'classname': 'TFElectraEmbeddings', 'endline': 60, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 62, 'classname': 'TFElectraEmbeddings', 'endline': 72, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_linear', 'complexity': 1, 'lineno': 121, 'classname': 'TFElectraEmbeddings', 'endline': 134, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 138, 'classname': 'TFElectraDiscriminatorPredictions', 'endline': 143, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 145, 'classname': 'TFElectraDiscriminatorPredictions', 'endline': 150, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 154, 'classname': 'TFElectraGeneratorPredictions', 'endline': 158, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 160, 'classname': 'TFElectraGeneratorPredictions', 'endline': 165, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 218, 'classname': 'TFElectraMainLayer', 'endline': 219, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 221, 'classname': 'TFElectraMainLayer', 'endline': 223, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 225, 'classname': 'TFElectraMainLayer', 'endline': 226, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 228, 'classname': 'TFElectraMainLayer', 'endline': 233, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 382, 'classname': 'TFElectraModel', 'endline': 384, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 388, 'classname': 'TFElectraModel', 'endline': 407, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 419, 'classname': 'TFElectraForPreTraining', 'endline': 423, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 426, 'classname': 'TFElectraForPreTraining', 'endline': 483, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 487, 'classname': 'TFElectraMaskedLMHead', 'endline': 490, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 492, 'classname': 'TFElectraMaskedLMHead', 'endline': 494, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 496, 'classname': 'TFElectraMaskedLMHead', 'endline': 499, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 522, 'classname': 'TFElectraForMaskedLM', 'endline': 523, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 527, 'classname': 'TFElectraForMaskedLM', 'endline': 574, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 584, 'classname': 'TFElectraForTokenClassification', 'endline': 590, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 666, 'classname': 'TFElectraForQuestionAnswering', 'endline': 672, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_flaubert.py': [{'type': 'method', 'rank': 'E', 'name': 'call', 'complexity': 40, 'lineno': 127, 'classname': 'TFFlaubertMainLayer', 'endline': 310, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'D', 'name': 'TFFlaubertMainLayer', 'complexity': 22, 'lineno': 121, 'endline': 310, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 122, 'classname': 'TFFlaubertMainLayer', 'endline': 125, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'E', 'name': 'call', 'complexity': 40, 'lineno': 127, 'classname': 'TFFlaubertMainLayer', 'endline': 310, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFFlaubertModel', 'complexity': 2, 'lineno': 112, 'endline': 117, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 115, 'classname': 'TFFlaubertModel', 'endline': 117, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFFlaubertWithLMHeadModel', 'complexity': 2, 'lineno': 318, 'endline': 323, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 321, 'classname': 'TFFlaubertWithLMHeadModel', 'endline': 323, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFFlaubertForSequenceClassification', 'complexity': 2, 'lineno': 331, 'endline': 336, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 334, 'classname': 'TFFlaubertForSequenceClassification', 'endline': 336, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFFlaubertForQuestionAnsweringSimple', 'complexity': 2, 'lineno': 344, 'endline': 349, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 347, 'classname': 'TFFlaubertForQuestionAnsweringSimple', 'endline': 349, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFFlaubertForTokenClassification', 'complexity': 2, 'lineno': 357, 'endline': 360, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 358, 'classname': 'TFFlaubertForTokenClassification', 'endline': 360, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFFlaubertForMultipleChoice', 'complexity': 2, 'lineno': 368, 'endline': 371, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 369, 'classname': 'TFFlaubertForMultipleChoice', 'endline': 371, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 115, 'classname': 'TFFlaubertModel', 'endline': 117, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 122, 'classname': 'TFFlaubertMainLayer', 'endline': 125, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 321, 'classname': 'TFFlaubertWithLMHeadModel', 'endline': 323, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 334, 'classname': 'TFFlaubertForSequenceClassification', 'endline': 336, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 347, 'classname': 'TFFlaubertForQuestionAnsweringSimple', 'endline': 349, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 358, 'classname': 'TFFlaubertForTokenClassification', 'endline': 360, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 369, 'classname': 'TFFlaubertForMultipleChoice', 'endline': 371, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_gpt2.py': [{'type': 'method', 'rank': 'E', 'name': 'call', 'complexity': 35, 'lineno': 252, 'classname': 'TFGPT2MainLayer', 'endline': 396, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 19, 'lineno': 597, 'classname': 'TFGPT2DoubleHeadsModel', 'endline': 727, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFGPT2MainLayer', 'complexity': 9, 'lineno': 213, 'endline': 396, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 216, 'classname': 'TFGPT2MainLayer', 'endline': 237, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 239, 'classname': 'TFGPT2MainLayer', 'endline': 240, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 242, 'classname': 'TFGPT2MainLayer', 'endline': 244, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 246, 'classname': 'TFGPT2MainLayer', 'endline': 250, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'E', 'name': 'call', 'complexity': 35, 'lineno': 252, 'classname': 'TFGPT2MainLayer', 'endline': 396, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'TFGPT2DoubleHeadsModel', 'complexity': 8, 'lineno': 584, 'endline': 727, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 585, 'classname': 'TFGPT2DoubleHeadsModel', 'endline': 590, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 593, 'classname': 'TFGPT2DoubleHeadsModel', 'endline': 594, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 19, 'lineno': 597, 'classname': 'TFGPT2DoubleHeadsModel', 'endline': 727, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_attn', 'complexity': 5, 'lineno': 97, 'classname': 'TFAttention', 'endline': 125, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFAttention', 'complexity': 3, 'lineno': 66, 'endline': 166, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 67, 'classname': 'TFAttention', 'endline': 82, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 84, 'classname': 'TFAttention', 'endline': 85, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'causal_attention_mask', 'complexity': 1, 'lineno': 88, 'classname': 'TFAttention', 'endline': 95, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_attn', 'complexity': 5, 'lineno': 97, 'classname': 'TFAttention', 'endline': 125, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'merge_heads', 'complexity': 1, 'lineno': 127, 'classname': 'TFAttention', 'endline': 131, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'split_heads', 'complexity': 1, 'lineno': 133, 'classname': 'TFAttention', 'endline': 137, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 139, 'classname': 'TFAttention', 'endline': 166, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 139, 'classname': 'TFAttention', 'endline': 166, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 67, 'classname': 'TFAttention', 'endline': 82, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFMLP', 'complexity': 2, 'lineno': 169, 'endline': 182, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 170, 'classname': 'TFMLP', 'endline': 176, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 178, 'classname': 'TFMLP', 'endline': 182, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFBlock', 'complexity': 2, 'lineno': 185, 'endline': 209, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 186, 'classname': 'TFBlock', 'endline': 192, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 194, 'classname': 'TFBlock', 'endline': 209, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 216, 'classname': 'TFGPT2MainLayer', 'endline': 237, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFGPT2Model', 'complexity': 2, 'lineno': 489, 'endline': 519, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 490, 'classname': 'TFGPT2Model', 'endline': 492, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 496, 'classname': 'TFGPT2Model', 'endline': 519, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFGPT2LMHeadModel', 'complexity': 2, 'lineno': 527, 'endline': 573, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 528, 'classname': 'TFGPT2LMHeadModel', 'endline': 530, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 532, 'classname': 'TFGPT2LMHeadModel', 'endline': 533, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 535, 'classname': 'TFGPT2LMHeadModel', 'endline': 540, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 544, 'classname': 'TFGPT2LMHeadModel', 'endline': 573, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 535, 'classname': 'TFGPT2LMHeadModel', 'endline': 540, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'gelu', 'complexity': 1, 'lineno': 53, 'endline': 63, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 84, 'classname': 'TFAttention', 'endline': 85, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'causal_attention_mask', 'complexity': 1, 'lineno': 88, 'classname': 'TFAttention', 'endline': 95, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'merge_heads', 'complexity': 1, 'lineno': 127, 'classname': 'TFAttention', 'endline': 131, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'split_heads', 'complexity': 1, 'lineno': 133, 'classname': 'TFAttention', 'endline': 137, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 170, 'classname': 'TFMLP', 'endline': 176, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 178, 'classname': 'TFMLP', 'endline': 182, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 186, 'classname': 'TFBlock', 'endline': 192, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 194, 'classname': 'TFBlock', 'endline': 209, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 239, 'classname': 'TFGPT2MainLayer', 'endline': 240, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 242, 'classname': 'TFGPT2MainLayer', 'endline': 244, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 246, 'classname': 'TFGPT2MainLayer', 'endline': 250, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFGPT2PreTrainedModel', 'complexity': 1, 'lineno': 399, 'endline': 405, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 490, 'classname': 'TFGPT2Model', 'endline': 492, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 496, 'classname': 'TFGPT2Model', 'endline': 519, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 528, 'classname': 'TFGPT2LMHeadModel', 'endline': 530, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 532, 'classname': 'TFGPT2LMHeadModel', 'endline': 533, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 544, 'classname': 'TFGPT2LMHeadModel', 'endline': 573, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 585, 'classname': 'TFGPT2DoubleHeadsModel', 'endline': 590, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 593, 'classname': 'TFGPT2DoubleHeadsModel', 'endline': 594, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_mobilebert.py': [{'type': 'method', 'rank': 'D', 'name': 'call', 'complexity': 21, 'lineno': 657, 'classname': 'TFMobileBertMainLayer', 'endline': 748, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 20, 'lineno': 1247, 'classname': 'TFMobileBertForMultipleChoice', 'endline': 1351, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_embedding', 'complexity': 8, 'lineno': 154, 'classname': 'TFMobileBertEmbeddings', 'endline': 198, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 1140, 'classname': 'TFMobileBertForQuestionAnswering', 'endline': 1218, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFMobileBertForMultipleChoice', 'complexity': 8, 'lineno': 1226, 'endline': 1351, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1227, 'classname': 'TFMobileBertForMultipleChoice', 'endline': 1233, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 1237, 'classname': 'TFMobileBertForMultipleChoice', 'endline': 1243, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 20, 'lineno': 1247, 'classname': 'TFMobileBertForMultipleChoice', 'endline': 1351, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 7, 'lineno': 519, 'classname': 'TFMobileBertEncoder', 'endline': 545, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFMobileBertEncoder', 'complexity': 6, 'lineno': 514, 'endline': 545, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 515, 'classname': 'TFMobileBertEncoder', 'endline': 517, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 7, 'lineno': 519, 'classname': 'TFMobileBertEncoder', 'endline': 545, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'TFMobileBertMainLayer', 'complexity': 6, 'lineno': 631, 'endline': 748, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 634, 'classname': 'TFMobileBertMainLayer', 'endline': 642, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 644, 'classname': 'TFMobileBertMainLayer', 'endline': 645, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 647, 'classname': 'TFMobileBertMainLayer', 'endline': 648, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 650, 'classname': 'TFMobileBertMainLayer', 'endline': 655, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'call', 'complexity': 21, 'lineno': 657, 'classname': 'TFMobileBertMainLayer', 'endline': 748, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 1054, 'classname': 'TFMobileBertForSequenceClassification', 'endline': 1120, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFMobileBertForQuestionAnswering', 'complexity': 6, 'lineno': 1128, 'endline': 1218, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1129, 'classname': 'TFMobileBertForQuestionAnswering', 'endline': 1135, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 1140, 'classname': 'TFMobileBertForQuestionAnswering', 'endline': 1218, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 1372, 'classname': 'TFMobileBertForTokenClassification', 'endline': 1436, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertLayer', 'complexity': 5, 'lineno': 463, 'endline': 511, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 4, 'lineno': 464, 'classname': 'TFMobileBertLayer', 'endline': 477, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 4, 'lineno': 480, 'classname': 'TFMobileBertLayer', 'endline': 511, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertForSequenceClassification', 'complexity': 5, 'lineno': 1041, 'endline': 1120, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1042, 'classname': 'TFMobileBertForSequenceClassification', 'endline': 1049, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 1054, 'classname': 'TFMobileBertForSequenceClassification', 'endline': 1120, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertForTokenClassification', 'complexity': 5, 'lineno': 1359, 'endline': 1436, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1360, 'classname': 'TFMobileBertForTokenClassification', 'endline': 1367, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 1372, 'classname': 'TFMobileBertForTokenClassification', 'endline': 1436, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertEmbeddings', 'complexity': 4, 'lineno': 86, 'endline': 213, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 90, 'classname': 'TFMobileBertEmbeddings', 'endline': 118, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 120, 'classname': 'TFMobileBertEmbeddings', 'endline': 130, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 132, 'classname': 'TFMobileBertEmbeddings', 'endline': 152, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_embedding', 'complexity': 8, 'lineno': 154, 'classname': 'TFMobileBertEmbeddings', 'endline': 198, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_linear', 'complexity': 1, 'lineno': 200, 'classname': 'TFMobileBertEmbeddings', 'endline': 213, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertSelfAttention', 'complexity': 4, 'lineno': 216, 'endline': 291, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 217, 'classname': 'TFMobileBertSelfAttention', 'endline': 240, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'transpose_for_scores', 'complexity': 1, 'lineno': 242, 'classname': 'TFMobileBertSelfAttention', 'endline': 244, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 4, 'lineno': 246, 'classname': 'TFMobileBertSelfAttention', 'endline': 291, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 4, 'lineno': 246, 'classname': 'TFMobileBertSelfAttention', 'endline': 291, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFBottleneck', 'complexity': 4, 'lineno': 401, 'endline': 434, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 402, 'classname': 'TFBottleneck', 'endline': 408, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 410, 'classname': 'TFBottleneck', 'endline': 434, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 4, 'lineno': 464, 'classname': 'TFMobileBertLayer', 'endline': 477, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 4, 'lineno': 480, 'classname': 'TFMobileBertLayer', 'endline': 511, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 132, 'classname': 'TFMobileBertEmbeddings', 'endline': 152, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 217, 'classname': 'TFMobileBertSelfAttention', 'endline': 240, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertSelfOutput', 'complexity': 3, 'lineno': 294, 'endline': 313, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 295, 'classname': 'TFMobileBertSelfOutput', 'endline': 305, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 2, 'lineno': 307, 'classname': 'TFMobileBertSelfOutput', 'endline': 313, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertOutput', 'complexity': 3, 'lineno': 359, 'endline': 384, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 360, 'classname': 'TFMobileBertOutput', 'endline': 372, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 2, 'lineno': 374, 'classname': 'TFMobileBertOutput', 'endline': 384, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 410, 'classname': 'TFBottleneck', 'endline': 434, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertPooler', 'complexity': 3, 'lineno': 548, 'endline': 568, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 549, 'classname': 'TFMobileBertPooler', 'endline': 557, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 2, 'lineno': 560, 'classname': 'TFMobileBertPooler', 'endline': 568, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertPredictionHeadTransform', 'complexity': 3, 'lineno': 571, 'endline': 587, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 572, 'classname': 'TFMobileBertPredictionHeadTransform', 'endline': 581, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 583, 'classname': 'TFMobileBertPredictionHeadTransform', 'endline': 587, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFLayerNorm', 'complexity': 2, 'lineno': 59, 'endline': 61, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 60, 'classname': 'TFLayerNorm', 'endline': 61, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFNoNorm', 'complexity': 2, 'lineno': 64, 'endline': 74, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 65, 'classname': 'TFNoNorm', 'endline': 67, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 69, 'classname': 'TFNoNorm', 'endline': 71, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 73, 'classname': 'TFNoNorm', 'endline': 74, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 295, 'classname': 'TFMobileBertSelfOutput', 'endline': 305, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 2, 'lineno': 307, 'classname': 'TFMobileBertSelfOutput', 'endline': 313, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertAttention', 'complexity': 2, 'lineno': 316, 'endline': 333, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 317, 'classname': 'TFMobileBertAttention', 'endline': 320, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 322, 'classname': 'TFMobileBertAttention', 'endline': 323, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 325, 'classname': 'TFMobileBertAttention', 'endline': 333, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertIntermediate', 'complexity': 2, 'lineno': 336, 'endline': 339, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 337, 'classname': 'TFMobileBertIntermediate', 'endline': 339, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFOutputBottleneck', 'complexity': 2, 'lineno': 342, 'endline': 356, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 343, 'classname': 'TFOutputBottleneck', 'endline': 349, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 351, 'classname': 'TFOutputBottleneck', 'endline': 356, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 360, 'classname': 'TFMobileBertOutput', 'endline': 372, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 2, 'lineno': 374, 'classname': 'TFMobileBertOutput', 'endline': 384, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFBottleneckLayer', 'complexity': 2, 'lineno': 387, 'endline': 398, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 388, 'classname': 'TFBottleneckLayer', 'endline': 392, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 395, 'classname': 'TFBottleneckLayer', 'endline': 398, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 402, 'classname': 'TFBottleneck', 'endline': 408, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFFFNOutput', 'complexity': 2, 'lineno': 437, 'endline': 448, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 438, 'classname': 'TFFFNOutput', 'endline': 442, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 445, 'classname': 'TFFFNOutput', 'endline': 448, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFFFNLayer', 'complexity': 2, 'lineno': 451, 'endline': 460, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 452, 'classname': 'TFFFNLayer', 'endline': 455, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 457, 'classname': 'TFFFNLayer', 'endline': 460, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 515, 'classname': 'TFMobileBertEncoder', 'endline': 517, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 549, 'classname': 'TFMobileBertPooler', 'endline': 557, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 2, 'lineno': 560, 'classname': 'TFMobileBertPooler', 'endline': 568, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 572, 'classname': 'TFMobileBertPredictionHeadTransform', 'endline': 581, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertLMPredictionHead', 'complexity': 2, 'lineno': 590, 'endline': 617, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 591, 'classname': 'TFMobileBertLMPredictionHead', 'endline': 595, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 597, 'classname': 'TFMobileBertLMPredictionHead', 'endline': 611, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 613, 'classname': 'TFMobileBertLMPredictionHead', 'endline': 617, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertMLMHead', 'complexity': 2, 'lineno': 620, 'endline': 627, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 621, 'classname': 'TFMobileBertMLMHead', 'endline': 623, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 625, 'classname': 'TFMobileBertMLMHead', 'endline': 627, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertModel', 'complexity': 2, 'lineno': 835, 'endline': 868, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 836, 'classname': 'TFMobileBertModel', 'endline': 838, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 842, 'classname': 'TFMobileBertModel', 'endline': 868, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertForPreTraining', 'complexity': 2, 'lineno': 876, 'endline': 928, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 877, 'classname': 'TFMobileBertForPreTraining', 'endline': 881, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 883, 'classname': 'TFMobileBertForPreTraining', 'endline': 884, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 887, 'classname': 'TFMobileBertForPreTraining', 'endline': 928, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertForMaskedLM', 'complexity': 2, 'lineno': 932, 'endline': 969, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 933, 'classname': 'TFMobileBertForMaskedLM', 'endline': 937, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 939, 'classname': 'TFMobileBertForMaskedLM', 'endline': 940, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 944, 'classname': 'TFMobileBertForMaskedLM', 'endline': 969, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertOnlyNSPHead', 'complexity': 2, 'lineno': 972, 'endline': 979, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 973, 'classname': 'TFMobileBertOnlyNSPHead', 'endline': 975, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 977, 'classname': 'TFMobileBertOnlyNSPHead', 'endline': 979, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertForNextSentencePrediction', 'complexity': 2, 'lineno': 986, 'endline': 1033, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 987, 'classname': 'TFMobileBertForNextSentencePrediction', 'endline': 991, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 994, 'classname': 'TFMobileBertForNextSentencePrediction', 'endline': 1033, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'mish', 'complexity': 1, 'lineno': 55, 'endline': 56, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 60, 'classname': 'TFLayerNorm', 'endline': 61, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 65, 'classname': 'TFNoNorm', 'endline': 67, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 69, 'classname': 'TFNoNorm', 'endline': 71, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 73, 'classname': 'TFNoNorm', 'endline': 74, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 90, 'classname': 'TFMobileBertEmbeddings', 'endline': 118, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 120, 'classname': 'TFMobileBertEmbeddings', 'endline': 130, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_linear', 'complexity': 1, 'lineno': 200, 'classname': 'TFMobileBertEmbeddings', 'endline': 213, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'transpose_for_scores', 'complexity': 1, 'lineno': 242, 'classname': 'TFMobileBertSelfAttention', 'endline': 244, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 317, 'classname': 'TFMobileBertAttention', 'endline': 320, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 322, 'classname': 'TFMobileBertAttention', 'endline': 323, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 325, 'classname': 'TFMobileBertAttention', 'endline': 333, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 337, 'classname': 'TFMobileBertIntermediate', 'endline': 339, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 343, 'classname': 'TFOutputBottleneck', 'endline': 349, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 351, 'classname': 'TFOutputBottleneck', 'endline': 356, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 388, 'classname': 'TFBottleneckLayer', 'endline': 392, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 395, 'classname': 'TFBottleneckLayer', 'endline': 398, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 438, 'classname': 'TFFFNOutput', 'endline': 442, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 445, 'classname': 'TFFFNOutput', 'endline': 448, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 452, 'classname': 'TFFFNLayer', 'endline': 455, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 457, 'classname': 'TFFFNLayer', 'endline': 460, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 583, 'classname': 'TFMobileBertPredictionHeadTransform', 'endline': 587, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 591, 'classname': 'TFMobileBertLMPredictionHead', 'endline': 595, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 597, 'classname': 'TFMobileBertLMPredictionHead', 'endline': 611, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 613, 'classname': 'TFMobileBertLMPredictionHead', 'endline': 617, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 621, 'classname': 'TFMobileBertMLMHead', 'endline': 623, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 625, 'classname': 'TFMobileBertMLMHead', 'endline': 627, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 634, 'classname': 'TFMobileBertMainLayer', 'endline': 642, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 644, 'classname': 'TFMobileBertMainLayer', 'endline': 645, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 647, 'classname': 'TFMobileBertMainLayer', 'endline': 648, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 650, 'classname': 'TFMobileBertMainLayer', 'endline': 655, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFMobileBertPreTrainedModel', 'complexity': 1, 'lineno': 751, 'endline': 757, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 836, 'classname': 'TFMobileBertModel', 'endline': 838, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 842, 'classname': 'TFMobileBertModel', 'endline': 868, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 877, 'classname': 'TFMobileBertForPreTraining', 'endline': 881, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 883, 'classname': 'TFMobileBertForPreTraining', 'endline': 884, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 887, 'classname': 'TFMobileBertForPreTraining', 'endline': 928, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 933, 'classname': 'TFMobileBertForMaskedLM', 'endline': 937, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 939, 'classname': 'TFMobileBertForMaskedLM', 'endline': 940, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 944, 'classname': 'TFMobileBertForMaskedLM', 'endline': 969, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 973, 'classname': 'TFMobileBertOnlyNSPHead', 'endline': 975, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 977, 'classname': 'TFMobileBertOnlyNSPHead', 'endline': 979, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 987, 'classname': 'TFMobileBertForNextSentencePrediction', 'endline': 991, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 994, 'classname': 'TFMobileBertForNextSentencePrediction', 'endline': 1033, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1042, 'classname': 'TFMobileBertForSequenceClassification', 'endline': 1049, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1129, 'classname': 'TFMobileBertForQuestionAnswering', 'endline': 1135, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1227, 'classname': 'TFMobileBertForMultipleChoice', 'endline': 1233, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 1237, 'classname': 'TFMobileBertForMultipleChoice', 'endline': 1243, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1360, 'classname': 'TFMobileBertForTokenClassification', 'endline': 1367, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_openai.py': [{'type': 'method', 'rank': 'D', 'name': 'call', 'complexity': 30, 'lineno': 242, 'classname': 'TFOpenAIGPTMainLayer', 'endline': 362, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 17, 'lineno': 541, 'classname': 'TFOpenAIGPTDoubleHeadsModel', 'endline': 661, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFOpenAIGPTMainLayer', 'complexity': 8, 'lineno': 206, 'endline': 362, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 209, 'classname': 'TFOpenAIGPTMainLayer', 'endline': 227, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 229, 'classname': 'TFOpenAIGPTMainLayer', 'endline': 230, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 232, 'classname': 'TFOpenAIGPTMainLayer', 'endline': 234, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 236, 'classname': 'TFOpenAIGPTMainLayer', 'endline': 240, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'call', 'complexity': 30, 'lineno': 242, 'classname': 'TFOpenAIGPTMainLayer', 'endline': 362, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'TFOpenAIGPTDoubleHeadsModel', 'complexity': 7, 'lineno': 528, 'endline': 661, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 529, 'classname': 'TFOpenAIGPTDoubleHeadsModel', 'endline': 534, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 537, 'classname': 'TFOpenAIGPTDoubleHeadsModel', 'endline': 538, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 17, 'lineno': 541, 'classname': 'TFOpenAIGPTDoubleHeadsModel', 'endline': 661, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_attn', 'complexity': 5, 'lineno': 104, 'classname': 'TFAttention', 'endline': 132, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFAttention', 'complexity': 2, 'lineno': 73, 'endline': 163, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 74, 'classname': 'TFAttention', 'endline': 89, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 91, 'classname': 'TFAttention', 'endline': 92, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'causal_attention_mask', 'complexity': 1, 'lineno': 95, 'classname': 'TFAttention', 'endline': 102, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_attn', 'complexity': 5, 'lineno': 104, 'classname': 'TFAttention', 'endline': 132, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'merge_heads', 'complexity': 1, 'lineno': 134, 'classname': 'TFAttention', 'endline': 138, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'split_heads', 'complexity': 1, 'lineno': 140, 'classname': 'TFAttention', 'endline': 144, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 146, 'classname': 'TFAttention', 'endline': 163, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 74, 'classname': 'TFAttention', 'endline': 89, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFMLP', 'complexity': 2, 'lineno': 166, 'endline': 179, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 167, 'classname': 'TFMLP', 'endline': 173, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 175, 'classname': 'TFMLP', 'endline': 179, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFBlock', 'complexity': 2, 'lineno': 182, 'endline': 202, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 183, 'classname': 'TFBlock', 'endline': 189, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 191, 'classname': 'TFBlock', 'endline': 202, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 209, 'classname': 'TFOpenAIGPTMainLayer', 'endline': 227, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFOpenAIGPTModel', 'complexity': 2, 'lineno': 448, 'endline': 474, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 449, 'classname': 'TFOpenAIGPTModel', 'endline': 451, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 455, 'classname': 'TFOpenAIGPTModel', 'endline': 474, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFOpenAIGPTLMHeadModel', 'complexity': 2, 'lineno': 482, 'endline': 517, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 483, 'classname': 'TFOpenAIGPTLMHeadModel', 'endline': 485, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 487, 'classname': 'TFOpenAIGPTLMHeadModel', 'endline': 488, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 492, 'classname': 'TFOpenAIGPTLMHeadModel', 'endline': 517, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'gelu', 'complexity': 1, 'lineno': 49, 'endline': 59, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'swish', 'complexity': 1, 'lineno': 62, 'endline': 63, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 91, 'classname': 'TFAttention', 'endline': 92, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'causal_attention_mask', 'complexity': 1, 'lineno': 95, 'classname': 'TFAttention', 'endline': 102, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'merge_heads', 'complexity': 1, 'lineno': 134, 'classname': 'TFAttention', 'endline': 138, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'split_heads', 'complexity': 1, 'lineno': 140, 'classname': 'TFAttention', 'endline': 144, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 146, 'classname': 'TFAttention', 'endline': 163, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 167, 'classname': 'TFMLP', 'endline': 173, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 175, 'classname': 'TFMLP', 'endline': 179, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 183, 'classname': 'TFBlock', 'endline': 189, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 191, 'classname': 'TFBlock', 'endline': 202, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 229, 'classname': 'TFOpenAIGPTMainLayer', 'endline': 230, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 232, 'classname': 'TFOpenAIGPTMainLayer', 'endline': 234, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 236, 'classname': 'TFOpenAIGPTMainLayer', 'endline': 240, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFOpenAIGPTPreTrainedModel', 'complexity': 1, 'lineno': 365, 'endline': 371, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 449, 'classname': 'TFOpenAIGPTModel', 'endline': 451, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 455, 'classname': 'TFOpenAIGPTModel', 'endline': 474, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 483, 'classname': 'TFOpenAIGPTLMHeadModel', 'endline': 485, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 487, 'classname': 'TFOpenAIGPTLMHeadModel', 'endline': 488, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 492, 'classname': 'TFOpenAIGPTLMHeadModel', 'endline': 517, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 529, 'classname': 'TFOpenAIGPTDoubleHeadsModel', 'endline': 534, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 537, 'classname': 'TFOpenAIGPTDoubleHeadsModel', 'endline': 538, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_pytorch_utils.py': [{'type': 'function', 'rank': 'D', 'name': 'load_pytorch_weights_in_tf2_model', 'complexity': 22, 'lineno': 107, 'endline': 223, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'C', 'name': 'load_tf2_weights_in_pytorch_model', 'complexity': 16, 'lineno': 274, 'endline': 372, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'convert_tf_weight_name_to_pt_weight_name', 'complexity': 8, 'lineno': 29, 'endline': 65, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'load_tf2_checkpoint_in_pytorch_model', 'complexity': 4, 'lineno': 231, 'endline': 263, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'load_pytorch_checkpoint_in_tf2_model', 'complexity': 3, 'lineno': 73, 'endline': 93, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'load_pytorch_model_in_tf2_model', 'complexity': 1, 'lineno': 97, 'endline': 103, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'load_tf2_model_in_pytorch_model', 'complexity': 1, 'lineno': 266, 'endline': 271, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_roberta.py': [{'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 19, 'lineno': 434, 'classname': 'TFRobertaForMultipleChoice', 'endline': 533, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFRobertaForMultipleChoice', 'complexity': 8, 'lineno': 413, 'endline': 533, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 414, 'classname': 'TFRobertaForMultipleChoice', 'endline': 420, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 424, 'classname': 'TFRobertaForMultipleChoice', 'endline': 430, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 19, 'lineno': 434, 'classname': 'TFRobertaForMultipleChoice', 'endline': 533, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 637, 'classname': 'TFRobertaForQuestionAnswering', 'endline': 715, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 347, 'classname': 'TFRobertaForSequenceClassification', 'endline': 405, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 554, 'classname': 'TFRobertaForTokenClassification', 'endline': 618, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFRobertaForQuestionAnswering', 'complexity': 6, 'lineno': 625, 'endline': 715, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 626, 'classname': 'TFRobertaForQuestionAnswering', 'endline': 632, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 637, 'classname': 'TFRobertaForQuestionAnswering', 'endline': 715, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFRobertaForSequenceClassification', 'complexity': 5, 'lineno': 337, 'endline': 405, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 338, 'classname': 'TFRobertaForSequenceClassification', 'endline': 343, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 347, 'classname': 'TFRobertaForSequenceClassification', 'endline': 405, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFRobertaForTokenClassification', 'complexity': 5, 'lineno': 541, 'endline': 618, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 542, 'classname': 'TFRobertaForTokenClassification', 'endline': 549, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 554, 'classname': 'TFRobertaForTokenClassification', 'endline': 618, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_embedding', 'complexity': 3, 'lineno': 88, 'classname': 'TFRobertaEmbeddings', 'endline': 99, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFRobertaEmbeddings', 'complexity': 2, 'lineno': 57, 'endline': 99, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 62, 'classname': 'TFRobertaEmbeddings', 'endline': 64, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_position_ids_from_input_ids', 'complexity': 1, 'lineno': 66, 'classname': 'TFRobertaEmbeddings', 'endline': 75, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_position_ids_from_inputs_embeds', 'complexity': 1, 'lineno': 77, 'classname': 'TFRobertaEmbeddings', 'endline': 86, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_embedding', 'complexity': 3, 'lineno': 88, 'classname': 'TFRobertaEmbeddings', 'endline': 99, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFRobertaMainLayer', 'complexity': 2, 'lineno': 103, 'endline': 110, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 108, 'classname': 'TFRobertaMainLayer', 'endline': 110, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFRobertaModel', 'complexity': 2, 'lineno': 199, 'endline': 232, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 200, 'classname': 'TFRobertaModel', 'endline': 202, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 206, 'classname': 'TFRobertaModel', 'endline': 232, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFRobertaLMHead', 'complexity': 2, 'lineno': 235, 'endline': 263, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 238, 'classname': 'TFRobertaLMHead', 'endline': 249, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 251, 'classname': 'TFRobertaLMHead', 'endline': 253, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 255, 'classname': 'TFRobertaLMHead', 'endline': 263, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFRobertaForMaskedLM', 'complexity': 2, 'lineno': 267, 'endline': 304, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 268, 'classname': 'TFRobertaForMaskedLM', 'endline': 272, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 274, 'classname': 'TFRobertaForMaskedLM', 'endline': 275, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 279, 'classname': 'TFRobertaForMaskedLM', 'endline': 304, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFRobertaClassificationHead', 'complexity': 2, 'lineno': 307, 'endline': 329, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 310, 'classname': 'TFRobertaClassificationHead', 'endline': 320, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 323, 'classname': 'TFRobertaClassificationHead', 'endline': 329, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 62, 'classname': 'TFRobertaEmbeddings', 'endline': 64, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_position_ids_from_input_ids', 'complexity': 1, 'lineno': 66, 'classname': 'TFRobertaEmbeddings', 'endline': 75, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_position_ids_from_inputs_embeds', 'complexity': 1, 'lineno': 77, 'classname': 'TFRobertaEmbeddings', 'endline': 86, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 108, 'classname': 'TFRobertaMainLayer', 'endline': 110, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFRobertaPreTrainedModel', 'complexity': 1, 'lineno': 113, 'endline': 119, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 200, 'classname': 'TFRobertaModel', 'endline': 202, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 206, 'classname': 'TFRobertaModel', 'endline': 232, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 238, 'classname': 'TFRobertaLMHead', 'endline': 249, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 251, 'classname': 'TFRobertaLMHead', 'endline': 253, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 255, 'classname': 'TFRobertaLMHead', 'endline': 263, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 268, 'classname': 'TFRobertaForMaskedLM', 'endline': 272, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 274, 'classname': 'TFRobertaForMaskedLM', 'endline': 275, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 279, 'classname': 'TFRobertaForMaskedLM', 'endline': 304, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 310, 'classname': 'TFRobertaClassificationHead', 'endline': 320, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 323, 'classname': 'TFRobertaClassificationHead', 'endline': 329, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 338, 'classname': 'TFRobertaForSequenceClassification', 'endline': 343, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 414, 'classname': 'TFRobertaForMultipleChoice', 'endline': 420, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 424, 'classname': 'TFRobertaForMultipleChoice', 'endline': 430, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 542, 'classname': 'TFRobertaForTokenClassification', 'endline': 549, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 626, 'classname': 'TFRobertaForQuestionAnswering', 'endline': 632, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_t5.py': [{'type': 'method', 'rank': 'F', 'name': 'call', 'complexity': 50, 'lineno': 553, 'classname': 'TFT5MainLayer', 'endline': 751, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 19, 'lineno': 196, 'classname': 'TFT5Attention', 'endline': 302, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'shape', 'complexity': 1, 'lineno': 234, 'endline': 236, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'unshape', 'complexity': 1, 'lineno': 238, 'endline': 240, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 10, 'lineno': 400, 'classname': 'TFT5Block', 'endline': 478, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFT5MainLayer', 'complexity': 9, 'lineno': 516, 'endline': 751, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 519, 'classname': 'TFT5MainLayer', 'endline': 536, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 538, 'classname': 'TFT5MainLayer', 'endline': 539, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 541, 'classname': 'TFT5MainLayer', 'endline': 542, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_embed_tokens', 'complexity': 1, 'lineno': 544, 'classname': 'TFT5MainLayer', 'endline': 545, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 547, 'classname': 'TFT5MainLayer', 'endline': 548, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 550, 'classname': 'TFT5MainLayer', 'endline': 551, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'F', 'name': 'call', 'complexity': 50, 'lineno': 553, 'classname': 'TFT5MainLayer', 'endline': 751, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 911, 'classname': 'TFT5Model', 'endline': 1006, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 1053, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1162, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFT5Block', 'complexity': 7, 'lineno': 383, 'endline': 478, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 384, 'classname': 'TFT5Block', 'endline': 398, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 10, 'lineno': 400, 'classname': 'TFT5Block', 'endline': 478, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'TFT5Attention', 'complexity': 6, 'lineno': 107, 'endline': 302, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 110, 'classname': 'TFT5Attention', 'endline': 133, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 135, 'classname': 'TFT5Attention', 'endline': 136, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_relative_position_bucket', 'complexity': 2, 'lineno': 139, 'classname': 'TFT5Attention', 'endline': 182, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'compute_bias', 'complexity': 1, 'lineno': 184, 'classname': 'TFT5Attention', 'endline': 194, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 19, 'lineno': 196, 'classname': 'TFT5Attention', 'endline': 302, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'shape', 'complexity': 1, 'lineno': 234, 'endline': 236, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'unshape', 'complexity': 1, 'lineno': 238, 'endline': 240, 'col_offset': 8, 'closures': []}]}]}, {'type': 'method', 'rank': 'B', 'name': '_reorder_cache', 'complexity': 6, 'lineno': 1182, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1206, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': '_NoLayerEmbedTokens', 'complexity': 3, 'lineno': 481, 'endline': 508, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 488, 'classname': '_NoLayerEmbedTokens', 'endline': 490, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 2, 'lineno': 492, 'classname': '_NoLayerEmbedTokens', 'endline': 499, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__call__', 'complexity': 2, 'lineno': 501, 'classname': '_NoLayerEmbedTokens', 'endline': 508, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFT5Model', 'complexity': 3, 'lineno': 869, 'endline': 1006, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 870, 'classname': 'TFT5Model', 'endline': 886, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 888, 'classname': 'TFT5Model', 'endline': 889, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 891, 'classname': 'TFT5Model', 'endline': 892, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 894, 'classname': 'TFT5Model', 'endline': 902, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_encoder', 'complexity': 1, 'lineno': 904, 'classname': 'TFT5Model', 'endline': 905, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_decoder', 'complexity': 1, 'lineno': 907, 'classname': 'TFT5Model', 'endline': 908, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 911, 'classname': 'TFT5Model', 'endline': 1006, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFT5ForConditionalGeneration', 'complexity': 3, 'lineno': 1010, 'endline': 1206, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1011, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1029, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 1031, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1032, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 1034, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1035, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 1037, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1044, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_encoder', 'complexity': 1, 'lineno': 1046, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1047, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_decoder', 'complexity': 1, 'lineno': 1049, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1050, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 1053, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1162, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 3, 'lineno': 1164, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1179, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_reorder_cache', 'complexity': 6, 'lineno': 1182, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1206, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 3, 'lineno': 1164, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1179, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFT5LayerNorm', 'complexity': 2, 'lineno': 58, 'endline': 74, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 59, 'classname': 'TFT5LayerNorm', 'endline': 64, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 66, 'classname': 'TFT5LayerNorm', 'endline': 69, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 71, 'classname': 'TFT5LayerNorm', 'endline': 74, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFT5DenseReluDense', 'complexity': 2, 'lineno': 77, 'endline': 90, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 78, 'classname': 'TFT5DenseReluDense', 'endline': 83, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 85, 'classname': 'TFT5DenseReluDense', 'endline': 90, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFT5LayerFF', 'complexity': 2, 'lineno': 93, 'endline': 104, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 94, 'classname': 'TFT5LayerFF', 'endline': 98, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 100, 'classname': 'TFT5LayerFF', 'endline': 104, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 110, 'classname': 'TFT5Attention', 'endline': 133, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_relative_position_bucket', 'complexity': 2, 'lineno': 139, 'classname': 'TFT5Attention', 'endline': 182, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFT5LayerSelfAttention', 'complexity': 2, 'lineno': 305, 'endline': 339, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 306, 'classname': 'TFT5LayerSelfAttention', 'endline': 312, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 314, 'classname': 'TFT5LayerSelfAttention', 'endline': 339, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFT5LayerCrossAttention', 'complexity': 2, 'lineno': 342, 'endline': 380, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 343, 'classname': 'TFT5LayerCrossAttention', 'endline': 349, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 351, 'classname': 'TFT5LayerCrossAttention', 'endline': 380, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 384, 'classname': 'TFT5Block', 'endline': 398, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 2, 'lineno': 492, 'classname': '_NoLayerEmbedTokens', 'endline': 499, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__call__', 'complexity': 2, 'lineno': 501, 'classname': '_NoLayerEmbedTokens', 'endline': 508, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 519, 'classname': 'TFT5MainLayer', 'endline': 536, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFT5PreTrainedModel', 'complexity': 2, 'lineno': 761, 'endline': 778, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 770, 'classname': 'TFT5PreTrainedModel', 'endline': 778, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 59, 'classname': 'TFT5LayerNorm', 'endline': 64, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 66, 'classname': 'TFT5LayerNorm', 'endline': 69, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 71, 'classname': 'TFT5LayerNorm', 'endline': 74, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 78, 'classname': 'TFT5DenseReluDense', 'endline': 83, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 85, 'classname': 'TFT5DenseReluDense', 'endline': 90, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 94, 'classname': 'TFT5LayerFF', 'endline': 98, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 100, 'classname': 'TFT5LayerFF', 'endline': 104, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 135, 'classname': 'TFT5Attention', 'endline': 136, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'compute_bias', 'complexity': 1, 'lineno': 184, 'classname': 'TFT5Attention', 'endline': 194, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 306, 'classname': 'TFT5LayerSelfAttention', 'endline': 312, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 314, 'classname': 'TFT5LayerSelfAttention', 'endline': 339, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 343, 'classname': 'TFT5LayerCrossAttention', 'endline': 349, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 351, 'classname': 'TFT5LayerCrossAttention', 'endline': 380, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 488, 'classname': '_NoLayerEmbedTokens', 'endline': 490, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 538, 'classname': 'TFT5MainLayer', 'endline': 539, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 541, 'classname': 'TFT5MainLayer', 'endline': 542, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_embed_tokens', 'complexity': 1, 'lineno': 544, 'classname': 'TFT5MainLayer', 'endline': 545, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 547, 'classname': 'TFT5MainLayer', 'endline': 548, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 550, 'classname': 'TFT5MainLayer', 'endline': 551, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 770, 'classname': 'TFT5PreTrainedModel', 'endline': 778, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 870, 'classname': 'TFT5Model', 'endline': 886, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 888, 'classname': 'TFT5Model', 'endline': 889, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 891, 'classname': 'TFT5Model', 'endline': 892, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 894, 'classname': 'TFT5Model', 'endline': 902, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_encoder', 'complexity': 1, 'lineno': 904, 'classname': 'TFT5Model', 'endline': 905, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_decoder', 'complexity': 1, 'lineno': 907, 'classname': 'TFT5Model', 'endline': 908, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1011, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1029, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 1031, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1032, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 1034, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1035, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 1037, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1044, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_encoder', 'complexity': 1, 'lineno': 1046, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1047, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_decoder', 'complexity': 1, 'lineno': 1049, 'classname': 'TFT5ForConditionalGeneration', 'endline': 1050, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_transfo_xl.py': [{'type': 'method', 'rank': 'D', 'name': 'call', 'complexity': 30, 'lineno': 525, 'classname': 'TFTransfoXLMainLayer', 'endline': 651, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 11, 'lineno': 806, 'classname': 'TFTransfoXLLMHeadModel', 'endline': 873, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 178, 'classname': 'TFRelPartialLearnableMultiHeadAttn', 'endline': 255, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 6, 'lineno': 393, 'classname': 'TFTransfoXLMainLayer', 'endline': 458, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFRelPartialLearnableMultiHeadAttn', 'complexity': 5, 'lineno': 106, 'endline': 255, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 107, 'classname': 'TFRelPartialLearnableMultiHeadAttn', 'endline': 155, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 3, 'lineno': 158, 'classname': 'TFRelPartialLearnableMultiHeadAttn', 'endline': 166, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_rel_shift', 'complexity': 1, 'lineno': 168, 'classname': 'TFRelPartialLearnableMultiHeadAttn', 'endline': 176, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 178, 'classname': 'TFRelPartialLearnableMultiHeadAttn', 'endline': 255, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFTransfoXLMainLayer', 'complexity': 5, 'lineno': 390, 'endline': 651, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 6, 'lineno': 393, 'classname': 'TFTransfoXLMainLayer', 'endline': 458, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 2, 'lineno': 460, 'classname': 'TFTransfoXLMainLayer', 'endline': 468, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 470, 'classname': 'TFTransfoXLMainLayer', 'endline': 471, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 473, 'classname': 'TFTransfoXLMainLayer', 'endline': 474, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 476, 'classname': 'TFTransfoXLMainLayer', 'endline': 477, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'backward_compatible', 'complexity': 1, 'lineno': 479, 'classname': 'TFTransfoXLMainLayer', 'endline': 480, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'reset_length', 'complexity': 1, 'lineno': 482, 'classname': 'TFTransfoXLMainLayer', 'endline': 485, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 487, 'classname': 'TFTransfoXLMainLayer', 'endline': 488, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'init_mems', 'complexity': 3, 'lineno': 490, 'classname': 'TFTransfoXLMainLayer', 'endline': 499, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_update_mems', 'complexity': 4, 'lineno': 501, 'classname': 'TFTransfoXLMainLayer', 'endline': 523, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'call', 'complexity': 30, 'lineno': 525, 'classname': 'TFTransfoXLMainLayer', 'endline': 651, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFAdaptiveEmbedding', 'complexity': 4, 'lineno': 317, 'endline': 386, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 318, 'classname': 'TFAdaptiveEmbedding', 'endline': 346, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 2, 'lineno': 350, 'classname': 'TFAdaptiveEmbedding', 'endline': 361, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 363, 'classname': 'TFAdaptiveEmbedding', 'endline': 386, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_update_mems', 'complexity': 4, 'lineno': 501, 'classname': 'TFTransfoXLMainLayer', 'endline': 523, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFTransfoXLLMHeadModel', 'complexity': 4, 'lineno': 778, 'endline': 882, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 779, 'classname': 'TFTransfoXLLMHeadModel', 'endline': 788, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 2, 'lineno': 791, 'classname': 'TFTransfoXLLMHeadModel', 'endline': 796, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'reset_length', 'complexity': 1, 'lineno': 798, 'classname': 'TFTransfoXLLMHeadModel', 'endline': 799, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'init_mems', 'complexity': 1, 'lineno': 801, 'classname': 'TFTransfoXLLMHeadModel', 'endline': 802, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 11, 'lineno': 806, 'classname': 'TFTransfoXLLMHeadModel', 'endline': 873, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 875, 'classname': 'TFTransfoXLLMHeadModel', 'endline': 882, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFPositionalEmbedding', 'complexity': 3, 'lineno': 47, 'endline': 60, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 48, 'classname': 'TFPositionalEmbedding', 'endline': 51, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 2, 'lineno': 53, 'classname': 'TFPositionalEmbedding', 'endline': 60, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFPositionwiseFF', 'complexity': 3, 'lineno': 63, 'endline': 103, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 64, 'classname': 'TFPositionwiseFF', 'endline': 80, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 2, 'lineno': 82, 'classname': 'TFPositionwiseFF', 'endline': 103, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 107, 'classname': 'TFRelPartialLearnableMultiHeadAttn', 'endline': 155, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 3, 'lineno': 158, 'classname': 'TFRelPartialLearnableMultiHeadAttn', 'endline': 166, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 318, 'classname': 'TFAdaptiveEmbedding', 'endline': 346, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 363, 'classname': 'TFAdaptiveEmbedding', 'endline': 386, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'init_mems', 'complexity': 3, 'lineno': 490, 'classname': 'TFTransfoXLMainLayer', 'endline': 499, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 2, 'lineno': 53, 'classname': 'TFPositionalEmbedding', 'endline': 60, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 2, 'lineno': 82, 'classname': 'TFPositionwiseFF', 'endline': 103, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFRelPartialLearnableDecoderLayer', 'complexity': 2, 'lineno': 258, 'endline': 314, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 259, 'classname': 'TFRelPartialLearnableDecoderLayer', 'endline': 302, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 305, 'classname': 'TFRelPartialLearnableDecoderLayer', 'endline': 314, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 2, 'lineno': 350, 'classname': 'TFAdaptiveEmbedding', 'endline': 361, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 2, 'lineno': 460, 'classname': 'TFTransfoXLMainLayer', 'endline': 468, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFTransfoXLModel', 'complexity': 2, 'lineno': 721, 'endline': 751, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 722, 'classname': 'TFTransfoXLModel', 'endline': 724, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 728, 'classname': 'TFTransfoXLModel', 'endline': 751, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFTransfoXLMHead', 'complexity': 2, 'lineno': 754, 'endline': 770, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 755, 'classname': 'TFTransfoXLMHead', 'endline': 761, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 763, 'classname': 'TFTransfoXLMHead', 'endline': 765, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 767, 'classname': 'TFTransfoXLMHead', 'endline': 770, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 779, 'classname': 'TFTransfoXLLMHeadModel', 'endline': 788, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 2, 'lineno': 791, 'classname': 'TFTransfoXLLMHeadModel', 'endline': 796, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 875, 'classname': 'TFTransfoXLLMHeadModel', 'endline': 882, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 48, 'classname': 'TFPositionalEmbedding', 'endline': 51, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 64, 'classname': 'TFPositionwiseFF', 'endline': 80, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_rel_shift', 'complexity': 1, 'lineno': 168, 'classname': 'TFRelPartialLearnableMultiHeadAttn', 'endline': 176, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 259, 'classname': 'TFRelPartialLearnableDecoderLayer', 'endline': 302, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 305, 'classname': 'TFRelPartialLearnableDecoderLayer', 'endline': 314, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 470, 'classname': 'TFTransfoXLMainLayer', 'endline': 471, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 473, 'classname': 'TFTransfoXLMainLayer', 'endline': 474, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 476, 'classname': 'TFTransfoXLMainLayer', 'endline': 477, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'backward_compatible', 'complexity': 1, 'lineno': 479, 'classname': 'TFTransfoXLMainLayer', 'endline': 480, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'reset_length', 'complexity': 1, 'lineno': 482, 'classname': 'TFTransfoXLMainLayer', 'endline': 485, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 487, 'classname': 'TFTransfoXLMainLayer', 'endline': 488, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFTransfoXLPreTrainedModel', 'complexity': 1, 'lineno': 654, 'endline': 660, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 722, 'classname': 'TFTransfoXLModel', 'endline': 724, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 728, 'classname': 'TFTransfoXLModel', 'endline': 751, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 755, 'classname': 'TFTransfoXLMHead', 'endline': 761, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 763, 'classname': 'TFTransfoXLMHead', 'endline': 765, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 767, 'classname': 'TFTransfoXLMHead', 'endline': 770, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'reset_length', 'complexity': 1, 'lineno': 798, 'classname': 'TFTransfoXLLMHeadModel', 'endline': 799, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'init_mems', 'complexity': 1, 'lineno': 801, 'classname': 'TFTransfoXLLMHeadModel', 'endline': 802, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_transfo_xl_utilities.py': [{'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 13, 'lineno': 117, 'classname': 'TFAdaptiveSoftmaxMask', 'endline': 178, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'build', 'complexity': 6, 'lineno': 45, 'classname': 'TFAdaptiveSoftmaxMask', 'endline': 101, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFAdaptiveSoftmaxMask', 'complexity': 5, 'lineno': 25, 'endline': 178, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 26, 'classname': 'TFAdaptiveSoftmaxMask', 'endline': 43, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'build', 'complexity': 6, 'lineno': 45, 'classname': 'TFAdaptiveSoftmaxMask', 'endline': 101, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_logit', 'complexity': 2, 'lineno': 104, 'classname': 'TFAdaptiveSoftmaxMask', 'endline': 108, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_gather_logprob', 'complexity': 1, 'lineno': 111, 'classname': 'TFAdaptiveSoftmaxMask', 'endline': 115, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 13, 'lineno': 117, 'classname': 'TFAdaptiveSoftmaxMask', 'endline': 178, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_logit', 'complexity': 2, 'lineno': 104, 'classname': 'TFAdaptiveSoftmaxMask', 'endline': 108, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 26, 'classname': 'TFAdaptiveSoftmaxMask', 'endline': 43, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_gather_logprob', 'complexity': 1, 'lineno': 111, 'classname': 'TFAdaptiveSoftmaxMask', 'endline': 115, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_utils.py': [{'type': 'method', 'rank': 'D', 'name': 'from_pretrained', 'complexity': 25, 'lineno': 333, 'classname': 'TFPreTrainedModel', 'endline': 540, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'C', 'name': 'TFSequenceSummary', 'complexity': 16, 'lineno': 641, 'endline': 745, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'C', 'name': '__init__', 'complexity': 14, 'lineno': 657, 'classname': 'TFSequenceSummary', 'endline': 687, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 16, 'lineno': 689, 'classname': 'TFSequenceSummary', 'endline': 745, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 16, 'lineno': 689, 'classname': 'TFSequenceSummary', 'endline': 745, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '__init__', 'complexity': 14, 'lineno': 657, 'classname': 'TFSequenceSummary', 'endline': 687, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'keras_serializable', 'complexity': 5, 'lineno': 50, 'endline': 107, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'B', 'name': 'wrapped_init', 'complexity': 7, 'lineno': 73, 'endline': 88, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'get_config', 'complexity': 1, 'lineno': 96, 'endline': 100, 'col_offset': 8, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'cast_bool_to_primitive', 'complexity': 4, 'lineno': 765, 'endline': 783, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFModelUtilsMixin', 'complexity': 4, 'lineno': 35, 'endline': 47, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'num_parameters', 'complexity': 3, 'lineno': 40, 'classname': 'TFModelUtilsMixin', 'endline': 47, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFPreTrainedModel', 'complexity': 4, 'lineno': 148, 'endline': 540, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 168, 'classname': 'TFPreTrainedModel', 'endline': 174, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 176, 'classname': 'TFPreTrainedModel', 'endline': 187, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 2, 'lineno': 189, 'classname': 'TFPreTrainedModel', 'endline': 201, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 2, 'lineno': 203, 'classname': 'TFPreTrainedModel', 'endline': 215, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 217, 'classname': 'TFPreTrainedModel', 'endline': 225, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'resize_token_embeddings', 'complexity': 2, 'lineno': 227, 'classname': 'TFPreTrainedModel', 'endline': 244, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 246, 'classname': 'TFPreTrainedModel', 'endline': 255, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_get_word_embeddings', 'complexity': 3, 'lineno': 257, 'classname': 'TFPreTrainedModel', 'endline': 265, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_get_resized_embeddings', 'complexity': 3, 'lineno': 267, 'classname': 'TFPreTrainedModel', 'endline': 304, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 306, 'classname': 'TFPreTrainedModel', 'endline': 313, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_pretrained', 'complexity': 2, 'lineno': 315, 'classname': 'TFPreTrainedModel', 'endline': 330, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'from_pretrained', 'complexity': 25, 'lineno': 333, 'classname': 'TFPreTrainedModel', 'endline': 540, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'shape_list', 'complexity': 3, 'lineno': 748, 'endline': 752, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_parameters', 'complexity': 3, 'lineno': 40, 'classname': 'TFModelUtilsMixin', 'endline': 47, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFSequenceClassificationLoss', 'complexity': 3, 'lineno': 133, 'endline': 142, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'compute_loss', 'complexity': 2, 'lineno': 134, 'classname': 'TFSequenceClassificationLoss', 'endline': 142, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_get_word_embeddings', 'complexity': 3, 'lineno': 257, 'classname': 'TFPreTrainedModel', 'endline': 265, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_get_resized_embeddings', 'complexity': 3, 'lineno': 267, 'classname': 'TFPreTrainedModel', 'endline': 304, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 600, 'classname': 'TFSharedEmbeddings', 'endline': 620, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFQuestionAnsweringLoss', 'complexity': 2, 'lineno': 110, 'endline': 118, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'compute_loss', 'complexity': 1, 'lineno': 111, 'classname': 'TFQuestionAnsweringLoss', 'endline': 118, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFTokenClassificationLoss', 'complexity': 2, 'lineno': 121, 'endline': 130, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'compute_loss', 'complexity': 1, 'lineno': 122, 'classname': 'TFTokenClassificationLoss', 'endline': 130, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'compute_loss', 'complexity': 2, 'lineno': 134, 'classname': 'TFSequenceClassificationLoss', 'endline': 142, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 176, 'classname': 'TFPreTrainedModel', 'endline': 187, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 2, 'lineno': 189, 'classname': 'TFPreTrainedModel', 'endline': 201, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 2, 'lineno': 203, 'classname': 'TFPreTrainedModel', 'endline': 215, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'resize_token_embeddings', 'complexity': 2, 'lineno': 227, 'classname': 'TFPreTrainedModel', 'endline': 244, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_pretrained', 'complexity': 2, 'lineno': 315, 'classname': 'TFPreTrainedModel', 'endline': 330, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFConv1D', 'complexity': 2, 'lineno': 543, 'endline': 567, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 544, 'classname': 'TFConv1D', 'endline': 551, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 553, 'classname': 'TFConv1D', 'endline': 557, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 559, 'classname': 'TFConv1D', 'endline': 567, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFSharedEmbeddings', 'complexity': 2, 'lineno': 570, 'endline': 638, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 574, 'classname': 'TFSharedEmbeddings', 'endline': 578, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 580, 'classname': 'TFSharedEmbeddings', 'endline': 588, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_config', 'complexity': 1, 'lineno': 590, 'classname': 'TFSharedEmbeddings', 'endline': 598, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 3, 'lineno': 600, 'classname': 'TFSharedEmbeddings', 'endline': 620, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_embedding', 'complexity': 1, 'lineno': 622, 'classname': 'TFSharedEmbeddings', 'endline': 624, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_linear', 'complexity': 1, 'lineno': 626, 'classname': 'TFSharedEmbeddings', 'endline': 638, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 574, 'classname': 'TFSharedEmbeddings', 'endline': 578, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'get_initializer', 'complexity': 1, 'lineno': 755, 'endline': 762, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'compute_loss', 'complexity': 1, 'lineno': 111, 'classname': 'TFQuestionAnsweringLoss', 'endline': 118, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'compute_loss', 'complexity': 1, 'lineno': 122, 'classname': 'TFTokenClassificationLoss', 'endline': 130, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 168, 'classname': 'TFPreTrainedModel', 'endline': 174, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 217, 'classname': 'TFPreTrainedModel', 'endline': 225, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 246, 'classname': 'TFPreTrainedModel', 'endline': 255, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 306, 'classname': 'TFPreTrainedModel', 'endline': 313, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 544, 'classname': 'TFConv1D', 'endline': 551, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 553, 'classname': 'TFConv1D', 'endline': 557, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 559, 'classname': 'TFConv1D', 'endline': 567, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 580, 'classname': 'TFSharedEmbeddings', 'endline': 588, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_config', 'complexity': 1, 'lineno': 590, 'classname': 'TFSharedEmbeddings', 'endline': 598, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_embedding', 'complexity': 1, 'lineno': 622, 'classname': 'TFSharedEmbeddings', 'endline': 624, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_linear', 'complexity': 1, 'lineno': 626, 'classname': 'TFSharedEmbeddings', 'endline': 638, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_xlm.py': [{'type': 'method', 'rank': 'F', 'name': 'call', 'complexity': 41, 'lineno': 330, 'classname': 'TFXLMMainLayer', 'endline': 501, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'call', 'complexity': 22, 'lineno': 842, 'classname': 'TFXLMForMultipleChoice', 'endline': 950, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 12, 'lineno': 137, 'classname': 'TFMultiHeadAttention', 'endline': 200, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'shape', 'complexity': 1, 'lineno': 154, 'endline': 156, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'unshape', 'complexity': 1, 'lineno': 158, 'endline': 160, 'col_offset': 8, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'TFXLMMainLayer', 'complexity': 10, 'lineno': 220, 'endline': 501, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 10, 'lineno': 223, 'classname': 'TFXLMMainLayer', 'endline': 311, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 313, 'classname': 'TFXLMMainLayer', 'endline': 314, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 316, 'classname': 'TFXLMMainLayer', 'endline': 318, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 320, 'classname': 'TFXLMMainLayer', 'endline': 321, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 323, 'classname': 'TFXLMMainLayer', 'endline': 328, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'F', 'name': 'call', 'complexity': 41, 'lineno': 330, 'classname': 'TFXLMMainLayer', 'endline': 501, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 10, 'lineno': 223, 'classname': 'TFXLMMainLayer', 'endline': 311, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFXLMForMultipleChoice', 'complexity': 9, 'lineno': 824, 'endline': 950, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 825, 'classname': 'TFXLMForMultipleChoice', 'endline': 829, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 832, 'classname': 'TFXLMForMultipleChoice', 'endline': 838, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'call', 'complexity': 22, 'lineno': 842, 'classname': 'TFXLMForMultipleChoice', 'endline': 950, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 1059, 'classname': 'TFXLMForQuestionAnsweringSimple', 'endline': 1145, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFMultiHeadAttention', 'complexity': 6, 'lineno': 116, 'endline': 200, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 120, 'classname': 'TFMultiHeadAttention', 'endline': 132, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 134, 'classname': 'TFMultiHeadAttention', 'endline': 135, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 12, 'lineno': 137, 'classname': 'TFMultiHeadAttention', 'endline': 200, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'shape', 'complexity': 1, 'lineno': 154, 'endline': 156, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'unshape', 'complexity': 1, 'lineno': 158, 'endline': 160, 'col_offset': 8, 'closures': []}]}]}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 746, 'classname': 'TFXLMForSequenceClassification', 'endline': 816, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 971, 'classname': 'TFXLMForTokenClassification', 'endline': 1041, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFXLMForQuestionAnsweringSimple', 'complexity': 6, 'lineno': 1049, 'endline': 1145, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1050, 'classname': 'TFXLMForQuestionAnsweringSimple', 'endline': 1054, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 1059, 'classname': 'TFXLMForQuestionAnsweringSimple', 'endline': 1145, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFXLMForSequenceClassification', 'complexity': 5, 'lineno': 736, 'endline': 816, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 737, 'classname': 'TFXLMForSequenceClassification', 'endline': 742, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 746, 'classname': 'TFXLMForSequenceClassification', 'endline': 816, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFXLMForTokenClassification', 'complexity': 5, 'lineno': 958, 'endline': 1041, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 959, 'classname': 'TFXLMForTokenClassification', 'endline': 966, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 971, 'classname': 'TFXLMForTokenClassification', 'endline': 1041, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'get_masks', 'complexity': 4, 'lineno': 85, 'endline': 113, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFXLMPreTrainedModel', 'complexity': 4, 'lineno': 504, 'endline': 521, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 3, 'lineno': 513, 'classname': 'TFXLMPreTrainedModel', 'endline': 521, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'create_sinusoidal_embeddings', 'complexity': 3, 'lineno': 68, 'endline': 71, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFTransformerFFN', 'complexity': 3, 'lineno': 203, 'endline': 216, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 204, 'classname': 'TFTransformerFFN', 'endline': 209, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 211, 'classname': 'TFTransformerFFN', 'endline': 216, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 3, 'lineno': 513, 'classname': 'TFXLMPreTrainedModel', 'endline': 521, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 120, 'classname': 'TFMultiHeadAttention', 'endline': 132, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 204, 'classname': 'TFTransformerFFN', 'endline': 209, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFXLMModel', 'complexity': 2, 'lineno': 612, 'endline': 638, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 613, 'classname': 'TFXLMModel', 'endline': 615, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 619, 'classname': 'TFXLMModel', 'endline': 638, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFXLMPredLayer', 'complexity': 2, 'lineno': 641, 'endline': 671, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 646, 'classname': 'TFXLMPredLayer', 'endline': 654, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 663, 'classname': 'TFXLMPredLayer', 'endline': 666, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 668, 'classname': 'TFXLMPredLayer', 'endline': 671, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 646, 'classname': 'TFXLMPredLayer', 'endline': 654, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFXLMWithLMHeadModel', 'complexity': 2, 'lineno': 679, 'endline': 728, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 680, 'classname': 'TFXLMWithLMHeadModel', 'endline': 683, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 685, 'classname': 'TFXLMWithLMHeadModel', 'endline': 686, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 688, 'classname': 'TFXLMWithLMHeadModel', 'endline': 700, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 704, 'classname': 'TFXLMWithLMHeadModel', 'endline': 728, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 688, 'classname': 'TFXLMWithLMHeadModel', 'endline': 700, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'gelu', 'complexity': 1, 'lineno': 74, 'endline': 82, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 134, 'classname': 'TFMultiHeadAttention', 'endline': 135, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 211, 'classname': 'TFTransformerFFN', 'endline': 216, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 313, 'classname': 'TFXLMMainLayer', 'endline': 314, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 316, 'classname': 'TFXLMMainLayer', 'endline': 318, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 320, 'classname': 'TFXLMMainLayer', 'endline': 321, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 323, 'classname': 'TFXLMMainLayer', 'endline': 328, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 613, 'classname': 'TFXLMModel', 'endline': 615, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 619, 'classname': 'TFXLMModel', 'endline': 638, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 663, 'classname': 'TFXLMPredLayer', 'endline': 666, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 668, 'classname': 'TFXLMPredLayer', 'endline': 671, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 680, 'classname': 'TFXLMWithLMHeadModel', 'endline': 683, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 685, 'classname': 'TFXLMWithLMHeadModel', 'endline': 686, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 704, 'classname': 'TFXLMWithLMHeadModel', 'endline': 728, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 737, 'classname': 'TFXLMForSequenceClassification', 'endline': 742, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 825, 'classname': 'TFXLMForMultipleChoice', 'endline': 829, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 832, 'classname': 'TFXLMForMultipleChoice', 'endline': 838, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 959, 'classname': 'TFXLMForTokenClassification', 'endline': 966, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1050, 'classname': 'TFXLMForQuestionAnsweringSimple', 'endline': 1054, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_xlm_roberta.py': [{'type': 'class', 'rank': 'A', 'name': 'TFXLMRobertaModel', 'complexity': 1, 'lineno': 74, 'endline': 80, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'TFXLMRobertaForMaskedLM', 'complexity': 1, 'lineno': 86, 'endline': 92, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'TFXLMRobertaForSequenceClassification', 'complexity': 1, 'lineno': 100, 'endline': 106, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'TFXLMRobertaForTokenClassification', 'complexity': 1, 'lineno': 114, 'endline': 120, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'TFXLMRobertaForQuestionAnswering', 'complexity': 1, 'lineno': 127, 'endline': 133, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'TFXLMRobertaForMultipleChoice', 'complexity': 1, 'lineno': 141, 'endline': 147, 'col_offset': 0, 'methods': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_xlnet.py': [{'type': 'method', 'rank': 'F', 'name': 'call', 'complexity': 73, 'lineno': 514, 'classname': 'TFXLNetMainLayer', 'endline': 735, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'call', 'complexity': 24, 'lineno': 1096, 'classname': 'TFXLNetForMultipleChoice', 'endline': 1214, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'relative_positional_encoding', 'complexity': 14, 'lineno': 466, 'classname': 'TFXLNetMainLayer', 'endline': 512, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 13, 'lineno': 204, 'classname': 'TFXLNetRelativeAttention', 'endline': 302, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFXLNetMainLayer', 'complexity': 10, 'lineno': 370, 'endline': 735, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 373, 'classname': 'TFXLNetMainLayer', 'endline': 393, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 395, 'classname': 'TFXLNetMainLayer', 'endline': 396, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 398, 'classname': 'TFXLNetMainLayer', 'endline': 400, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 402, 'classname': 'TFXLNetMainLayer', 'endline': 405, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 408, 'classname': 'TFXLNetMainLayer', 'endline': 409, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 411, 'classname': 'TFXLNetMainLayer', 'endline': 412, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_mask', 'complexity': 2, 'lineno': 414, 'classname': 'TFXLNetMainLayer', 'endline': 441, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'cache_mem', 'complexity': 4, 'lineno': 443, 'classname': 'TFXLNetMainLayer', 'endline': 453, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'positional_embedding', 'complexity': 2, 'lineno': 456, 'classname': 'TFXLNetMainLayer', 'endline': 464, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'relative_positional_encoding', 'complexity': 14, 'lineno': 466, 'classname': 'TFXLNetMainLayer', 'endline': 512, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'F', 'name': 'call', 'complexity': 73, 'lineno': 514, 'classname': 'TFXLNetMainLayer', 'endline': 735, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'TFXLNetForMultipleChoice', 'complexity': 10, 'lineno': 1073, 'endline': 1214, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1074, 'classname': 'TFXLNetForMultipleChoice', 'endline': 1082, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 1086, 'classname': 'TFXLNetForMultipleChoice', 'endline': 1092, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'call', 'complexity': 24, 'lineno': 1096, 'classname': 'TFXLNetForMultipleChoice', 'endline': 1214, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 1326, 'classname': 'TFXLNetForQuestionAnsweringSimple', 'endline': 1420, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'rel_attn_core', 'complexity': 6, 'lineno': 144, 'classname': 'TFXLNetRelativeAttention', 'endline': 187, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 989, 'classname': 'TFXLNetForSequenceClassification', 'endline': 1065, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 1234, 'classname': 'TFXLNetForTokenClassification', 'endline': 1308, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TFXLNetForQuestionAnsweringSimple', 'complexity': 6, 'lineno': 1316, 'endline': 1420, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1317, 'classname': 'TFXLNetForQuestionAnsweringSimple', 'endline': 1321, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 8, 'lineno': 1326, 'classname': 'TFXLNetForQuestionAnsweringSimple', 'endline': 1420, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFXLNetForSequenceClassification', 'complexity': 5, 'lineno': 974, 'endline': 1065, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 975, 'classname': 'TFXLNetForSequenceClassification', 'endline': 984, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 989, 'classname': 'TFXLNetForSequenceClassification', 'endline': 1065, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFXLNetForTokenClassification', 'complexity': 5, 'lineno': 1222, 'endline': 1308, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1223, 'classname': 'TFXLNetForTokenClassification', 'endline': 1229, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'call', 'complexity': 6, 'lineno': 1234, 'classname': 'TFXLNetForTokenClassification', 'endline': 1308, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFXLNetRelativeAttention', 'complexity': 4, 'lineno': 79, 'endline': 302, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 80, 'classname': 'TFXLNetRelativeAttention', 'endline': 96, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 98, 'classname': 'TFXLNetRelativeAttention', 'endline': 127, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 129, 'classname': 'TFXLNetRelativeAttention', 'endline': 130, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'rel_shift', 'complexity': 1, 'lineno': 132, 'classname': 'TFXLNetRelativeAttention', 'endline': 142, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'rel_attn_core', 'complexity': 6, 'lineno': 144, 'classname': 'TFXLNetRelativeAttention', 'endline': 187, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'post_attention', 'complexity': 2, 'lineno': 189, 'classname': 'TFXLNetRelativeAttention', 'endline': 202, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'call', 'complexity': 13, 'lineno': 204, 'classname': 'TFXLNetRelativeAttention', 'endline': 302, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'cache_mem', 'complexity': 4, 'lineno': 443, 'classname': 'TFXLNetMainLayer', 'endline': 453, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFXLNetFeedForward', 'complexity': 3, 'lineno': 305, 'endline': 329, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 306, 'classname': 'TFXLNetFeedForward', 'endline': 319, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 321, 'classname': 'TFXLNetFeedForward', 'endline': 329, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFXLNetLayer', 'complexity': 3, 'lineno': 332, 'endline': 348, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 333, 'classname': 'TFXLNetLayer', 'endline': 337, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 2, 'lineno': 339, 'classname': 'TFXLNetLayer', 'endline': 348, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 80, 'classname': 'TFXLNetRelativeAttention', 'endline': 96, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'post_attention', 'complexity': 2, 'lineno': 189, 'classname': 'TFXLNetRelativeAttention', 'endline': 202, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 306, 'classname': 'TFXLNetFeedForward', 'endline': 319, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 2, 'lineno': 339, 'classname': 'TFXLNetLayer', 'endline': 348, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFXLNetLMHead', 'complexity': 2, 'lineno': 351, 'endline': 366, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 352, 'classname': 'TFXLNetLMHead', 'endline': 357, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 359, 'classname': 'TFXLNetLMHead', 'endline': 361, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 363, 'classname': 'TFXLNetLMHead', 'endline': 366, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 373, 'classname': 'TFXLNetMainLayer', 'endline': 393, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_mask', 'complexity': 2, 'lineno': 414, 'classname': 'TFXLNetMainLayer', 'endline': 441, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'positional_embedding', 'complexity': 2, 'lineno': 456, 'classname': 'TFXLNetMainLayer', 'endline': 464, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFXLNetModel', 'complexity': 2, 'lineno': 836, 'endline': 866, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 837, 'classname': 'TFXLNetModel', 'endline': 839, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 843, 'classname': 'TFXLNetModel', 'endline': 866, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TFXLNetLMHeadModel', 'complexity': 2, 'lineno': 874, 'endline': 966, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 875, 'classname': 'TFXLNetLMHeadModel', 'endline': 878, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 880, 'classname': 'TFXLNetLMHeadModel', 'endline': 881, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 883, 'classname': 'TFXLNetLMHeadModel', 'endline': 912, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 915, 'classname': 'TFXLNetLMHeadModel', 'endline': 966, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 883, 'classname': 'TFXLNetLMHeadModel', 'endline': 912, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'gelu', 'complexity': 1, 'lineno': 59, 'endline': 65, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'swish', 'complexity': 1, 'lineno': 68, 'endline': 69, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 98, 'classname': 'TFXLNetRelativeAttention', 'endline': 127, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 129, 'classname': 'TFXLNetRelativeAttention', 'endline': 130, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'rel_shift', 'complexity': 1, 'lineno': 132, 'classname': 'TFXLNetRelativeAttention', 'endline': 142, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 321, 'classname': 'TFXLNetFeedForward', 'endline': 329, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 333, 'classname': 'TFXLNetLayer', 'endline': 337, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 352, 'classname': 'TFXLNetLMHead', 'endline': 357, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 359, 'classname': 'TFXLNetLMHead', 'endline': 361, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 363, 'classname': 'TFXLNetLMHead', 'endline': 366, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 395, 'classname': 'TFXLNetMainLayer', 'endline': 396, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 398, 'classname': 'TFXLNetMainLayer', 'endline': 400, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build', 'complexity': 1, 'lineno': 402, 'classname': 'TFXLNetMainLayer', 'endline': 405, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 408, 'classname': 'TFXLNetMainLayer', 'endline': 409, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 411, 'classname': 'TFXLNetMainLayer', 'endline': 412, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFXLNetPreTrainedModel', 'complexity': 1, 'lineno': 738, 'endline': 744, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 837, 'classname': 'TFXLNetModel', 'endline': 839, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 843, 'classname': 'TFXLNetModel', 'endline': 866, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 875, 'classname': 'TFXLNetLMHeadModel', 'endline': 878, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 880, 'classname': 'TFXLNetLMHeadModel', 'endline': 881, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'call', 'complexity': 1, 'lineno': 915, 'classname': 'TFXLNetLMHeadModel', 'endline': 966, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 975, 'classname': 'TFXLNetForSequenceClassification', 'endline': 984, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1074, 'classname': 'TFXLNetForMultipleChoice', 'endline': 1082, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 1086, 'classname': 'TFXLNetForMultipleChoice', 'endline': 1092, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1223, 'classname': 'TFXLNetForTokenClassification', 'endline': 1229, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1317, 'classname': 'TFXLNetForQuestionAnsweringSimple', 'endline': 1321, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_transfo_xl.py': [{'type': 'method', 'rank': 'D', 'name': '_init_weights', 'complexity': 28, 'lineno': 472, 'classname': 'TransfoXLPreTrainedModel', 'endline': 511, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'forward', 'complexity': 24, 'lineno': 755, 'classname': 'TransfoXLModel', 'endline': 887, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'C', 'name': 'load_tf_weights_in_transfo_xl', 'complexity': 16, 'lineno': 112, 'endline': 167, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 13, 'lineno': 282, 'classname': 'RelPartialLearnableMultiHeadAttn', 'endline': 368, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'tie_weights', 'complexity': 12, 'lineno': 911, 'classname': 'TransfoXLLMHeadModel', 'endline': 930, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'build_tf_to_pytorch_map', 'complexity': 9, 'lineno': 45, 'endline': 109, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'RelPartialLearnableMultiHeadAttn', 'complexity': 7, 'lineno': 226, 'endline': 368, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 227, 'classname': 'RelPartialLearnableMultiHeadAttn', 'endline': 268, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_rel_shift', 'complexity': 1, 'lineno': 270, 'classname': 'RelPartialLearnableMultiHeadAttn', 'endline': 280, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 13, 'lineno': 282, 'classname': 'RelPartialLearnableMultiHeadAttn', 'endline': 368, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 7, 'lineno': 637, 'classname': 'TransfoXLModel', 'endline': 697, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'AdaptiveEmbedding', 'complexity': 6, 'lineno': 394, 'endline': 451, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 4, 'lineno': 395, 'classname': 'AdaptiveEmbedding', 'endline': 420, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 422, 'classname': 'AdaptiveEmbedding', 'endline': 451, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'TransfoXLPreTrainedModel', 'complexity': 6, 'lineno': 454, 'endline': 590, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '_init_weight', 'complexity': 3, 'lineno': 463, 'classname': 'TransfoXLPreTrainedModel', 'endline': 467, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_init_bias', 'complexity': 1, 'lineno': 469, 'classname': 'TransfoXLPreTrainedModel', 'endline': 470, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': '_init_weights', 'complexity': 28, 'lineno': 472, 'classname': 'TransfoXLPreTrainedModel', 'endline': 511, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'resize_token_embeddings', 'complexity': 3, 'lineno': 513, 'classname': 'TransfoXLPreTrainedModel', 'endline': 549, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_get_new_num_tokens_layer', 'complexity': 5, 'lineno': 551, 'classname': 'TransfoXLPreTrainedModel', 'endline': 562, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_get_embedding_shapes', 'complexity': 2, 'lineno': 564, 'classname': 'TransfoXLPreTrainedModel', 'endline': 566, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 2, 'lineno': 568, 'classname': 'TransfoXLPreTrainedModel', 'endline': 577, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_cutoffs', 'complexity': 2, 'lineno': 579, 'classname': 'TransfoXLPreTrainedModel', 'endline': 590, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 422, 'classname': 'AdaptiveEmbedding', 'endline': 451, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_get_new_num_tokens_layer', 'complexity': 5, 'lineno': 551, 'classname': 'TransfoXLPreTrainedModel', 'endline': 562, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TransfoXLModel', 'complexity': 5, 'lineno': 636, 'endline': 887, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 7, 'lineno': 637, 'classname': 'TransfoXLModel', 'endline': 697, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 699, 'classname': 'TransfoXLModel', 'endline': 700, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 702, 'classname': 'TransfoXLModel', 'endline': 703, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'backward_compatible', 'complexity': 1, 'lineno': 705, 'classname': 'TransfoXLModel', 'endline': 706, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'reset_length', 'complexity': 1, 'lineno': 708, 'classname': 'TransfoXLModel', 'endline': 711, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 713, 'classname': 'TransfoXLModel', 'endline': 715, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'init_mems', 'complexity': 3, 'lineno': 717, 'classname': 'TransfoXLModel', 'endline': 727, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_update_mems', 'complexity': 4, 'lineno': 729, 'classname': 'TransfoXLModel', 'endline': 751, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'forward', 'complexity': 24, 'lineno': 755, 'classname': 'TransfoXLModel', 'endline': 887, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 4, 'lineno': 395, 'classname': 'AdaptiveEmbedding', 'endline': 420, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_update_mems', 'complexity': 4, 'lineno': 729, 'classname': 'TransfoXLModel', 'endline': 751, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TransfoXLLMHeadModel', 'complexity': 4, 'lineno': 895, 'endline': 1035, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 896, 'classname': 'TransfoXLLMHeadModel', 'endline': 909, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'tie_weights', 'complexity': 12, 'lineno': 911, 'classname': 'TransfoXLLMHeadModel', 'endline': 930, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'reset_length', 'complexity': 1, 'lineno': 932, 'classname': 'TransfoXLLMHeadModel', 'endline': 933, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'init_mems', 'complexity': 1, 'lineno': 935, 'classname': 'TransfoXLLMHeadModel', 'endline': 936, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 940, 'classname': 'TransfoXLLMHeadModel', 'endline': 1008, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 2, 'lineno': 1010, 'classname': 'TransfoXLLMHeadModel', 'endline': 1016, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 1018, 'classname': 'TransfoXLLMHeadModel', 'endline': 1028, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_cutoffs', 'complexity': 1, 'lineno': 1030, 'classname': 'TransfoXLLMHeadModel', 'endline': 1035, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 940, 'classname': 'TransfoXLLMHeadModel', 'endline': 1008, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'PositionalEmbedding', 'complexity': 3, 'lineno': 170, 'endline': 186, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 171, 'classname': 'PositionalEmbedding', 'endline': 177, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 179, 'classname': 'PositionalEmbedding', 'endline': 186, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'PositionwiseFF', 'complexity': 3, 'lineno': 189, 'endline': 223, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 190, 'classname': 'PositionwiseFF', 'endline': 207, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 209, 'classname': 'PositionwiseFF', 'endline': 223, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 227, 'classname': 'RelPartialLearnableMultiHeadAttn', 'endline': 268, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_init_weight', 'complexity': 3, 'lineno': 463, 'classname': 'TransfoXLPreTrainedModel', 'endline': 467, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'resize_token_embeddings', 'complexity': 3, 'lineno': 513, 'classname': 'TransfoXLPreTrainedModel', 'endline': 549, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'init_mems', 'complexity': 3, 'lineno': 717, 'classname': 'TransfoXLModel', 'endline': 727, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 179, 'classname': 'PositionalEmbedding', 'endline': 186, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 209, 'classname': 'PositionwiseFF', 'endline': 223, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'RelPartialLearnableDecoderLayer', 'complexity': 2, 'lineno': 371, 'endline': 391, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 372, 'classname': 'RelPartialLearnableDecoderLayer', 'endline': 379, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 382, 'classname': 'RelPartialLearnableDecoderLayer', 'endline': 391, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_get_embedding_shapes', 'complexity': 2, 'lineno': 564, 'classname': 'TransfoXLPreTrainedModel', 'endline': 566, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 2, 'lineno': 568, 'classname': 'TransfoXLPreTrainedModel', 'endline': 577, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_cutoffs', 'complexity': 2, 'lineno': 579, 'classname': 'TransfoXLPreTrainedModel', 'endline': 590, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 896, 'classname': 'TransfoXLLMHeadModel', 'endline': 909, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 2, 'lineno': 1010, 'classname': 'TransfoXLLMHeadModel', 'endline': 1016, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 1018, 'classname': 'TransfoXLLMHeadModel', 'endline': 1028, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 171, 'classname': 'PositionalEmbedding', 'endline': 177, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 190, 'classname': 'PositionwiseFF', 'endline': 207, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_rel_shift', 'complexity': 1, 'lineno': 270, 'classname': 'RelPartialLearnableMultiHeadAttn', 'endline': 280, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 372, 'classname': 'RelPartialLearnableDecoderLayer', 'endline': 379, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 382, 'classname': 'RelPartialLearnableDecoderLayer', 'endline': 391, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_init_bias', 'complexity': 1, 'lineno': 469, 'classname': 'TransfoXLPreTrainedModel', 'endline': 470, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 699, 'classname': 'TransfoXLModel', 'endline': 700, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 702, 'classname': 'TransfoXLModel', 'endline': 703, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'backward_compatible', 'complexity': 1, 'lineno': 705, 'classname': 'TransfoXLModel', 'endline': 706, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'reset_length', 'complexity': 1, 'lineno': 708, 'classname': 'TransfoXLModel', 'endline': 711, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 713, 'classname': 'TransfoXLModel', 'endline': 715, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'reset_length', 'complexity': 1, 'lineno': 932, 'classname': 'TransfoXLLMHeadModel', 'endline': 933, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'init_mems', 'complexity': 1, 'lineno': 935, 'classname': 'TransfoXLLMHeadModel', 'endline': 936, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_cutoffs', 'complexity': 1, 'lineno': 1030, 'classname': 'TransfoXLLMHeadModel', 'endline': 1035, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_transfo_xl_utilities.py': [{'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 19, 'lineno': 86, 'classname': 'ProjectedAdaptiveLogSoftmax', 'endline': 191, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'ProjectedAdaptiveLogSoftmax', 'complexity': 9, 'lineno': 30, 'endline': 249, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 6, 'lineno': 31, 'classname': 'ProjectedAdaptiveLogSoftmax', 'endline': 70, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_compute_logit', 'complexity': 2, 'lineno': 72, 'classname': 'ProjectedAdaptiveLogSoftmax', 'endline': 84, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 19, 'lineno': 86, 'classname': 'ProjectedAdaptiveLogSoftmax', 'endline': 191, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'log_prob', 'complexity': 7, 'lineno': 193, 'classname': 'ProjectedAdaptiveLogSoftmax', 'endline': 249, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'log_prob', 'complexity': 7, 'lineno': 193, 'classname': 'ProjectedAdaptiveLogSoftmax', 'endline': 249, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 6, 'lineno': 31, 'classname': 'ProjectedAdaptiveLogSoftmax', 'endline': 70, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_compute_logit', 'complexity': 2, 'lineno': 72, 'classname': 'ProjectedAdaptiveLogSoftmax', 'endline': 84, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_utils.py': [{'type': 'method', 'rank': 'F', 'name': 'from_pretrained', 'complexity': 43, 'lineno': 510, 'classname': 'PreTrainedModel', 'endline': 803, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'load', 'complexity': 4, 'lineno': 727, 'endline': 734, 'col_offset': 12, 'closures': []}]}, {'type': 'method', 'rank': 'C', 'name': '__init__', 'complexity': 12, 'lineno': 1076, 'classname': 'SequenceSummary', 'endline': 1103, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'C', 'name': 'SequenceSummary', 'complexity': 11, 'lineno': 1060, 'endline': 1134, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'C', 'name': '__init__', 'complexity': 12, 'lineno': 1076, 'classname': 'SequenceSummary', 'endline': 1103, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 7, 'lineno': 1105, 'classname': 'SequenceSummary', 'endline': 1134, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 9, 'lineno': 993, 'classname': 'SQuADHead', 'endline': 1057, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'apply_chunking_to_forward', 'complexity': 8, 'lineno': 1199, 'endline': 1259, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 7, 'lineno': 1105, 'classname': 'SequenceSummary', 'endline': 1134, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'PreTrainedModel', 'complexity': 6, 'lineno': 265, 'endline': 803, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 285, 'classname': 'PreTrainedModel', 'endline': 291, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 293, 'classname': 'PreTrainedModel', 'endline': 304, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'base_model', 'complexity': 1, 'lineno': 307, 'classname': 'PreTrainedModel', 'endline': 308, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 2, 'lineno': 310, 'classname': 'PreTrainedModel', 'endline': 322, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 2, 'lineno': 324, 'classname': 'PreTrainedModel', 'endline': 336, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 338, 'classname': 'PreTrainedModel', 'endline': 346, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 2, 'lineno': 348, 'classname': 'PreTrainedModel', 'endline': 356, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tie_or_clone_weights', 'complexity': 5, 'lineno': 358, 'classname': 'PreTrainedModel', 'endline': 374, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'resize_token_embeddings', 'complexity': 2, 'lineno': 376, 'classname': 'PreTrainedModel', 'endline': 401, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 403, 'classname': 'PreTrainedModel', 'endline': 407, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_get_resized_embeddings', 'complexity': 3, 'lineno': 409, 'classname': 'PreTrainedModel', 'endline': 445, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'init_weights', 'complexity': 2, 'lineno': 447, 'classname': 'PreTrainedModel', 'endline': 457, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 459, 'classname': 'PreTrainedModel', 'endline': 472, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_pretrained', 'complexity': 5, 'lineno': 474, 'classname': 'PreTrainedModel', 'endline': 507, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'F', 'name': 'from_pretrained', 'complexity': 43, 'lineno': 510, 'classname': 'PreTrainedModel', 'endline': 803, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'load', 'complexity': 4, 'lineno': 727, 'endline': 734, 'col_offset': 12, 'closures': []}]}]}, {'type': 'class', 'rank': 'B', 'name': 'SQuADHead', 'complexity': 6, 'lineno': 943, 'endline': 1057, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 984, 'classname': 'SQuADHead', 'endline': 991, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 9, 'lineno': 993, 'classname': 'SQuADHead', 'endline': 1057, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'prune_layer', 'complexity': 5, 'lineno': 1186, 'endline': 1196, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'invert_attention_mask', 'complexity': 5, 'lineno': 162, 'classname': 'ModuleUtilsMixin', 'endline': 186, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tie_or_clone_weights', 'complexity': 5, 'lineno': 358, 'classname': 'PreTrainedModel', 'endline': 374, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_pretrained', 'complexity': 5, 'lineno': 474, 'classname': 'PreTrainedModel', 'endline': 507, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 860, 'classname': 'PoolerEndLogits', 'endline': 893, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'find_pruneable_heads_and_indices', 'complexity': 4, 'lineno': 59, 'endline': 70, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'prune_linear_layer', 'complexity': 4, 'lineno': 1137, 'endline': 1159, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ModuleUtilsMixin', 'complexity': 4, 'lineno': 73, 'endline': 262, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'num_parameters', 'complexity': 3, 'lineno': 78, 'classname': 'ModuleUtilsMixin', 'endline': 83, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_hook_rss_memory_pre_forward', 'complexity': 2, 'lineno': 86, 'classname': 'ModuleUtilsMixin', 'endline': 95, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_hook_rss_memory_post_forward', 'complexity': 3, 'lineno': 98, 'classname': 'ModuleUtilsMixin', 'endline': 109, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'add_memory_hooks', 'complexity': 2, 'lineno': 111, 'classname': 'ModuleUtilsMixin', 'endline': 118, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'reset_memory_hooks_state', 'complexity': 2, 'lineno': 120, 'classname': 'ModuleUtilsMixin', 'endline': 124, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'device', 'complexity': 2, 'lineno': 127, 'classname': 'ModuleUtilsMixin', 'endline': 142, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'find_tensor_attributes', 'complexity': 3, 'lineno': 136, 'endline': 138, 'col_offset': 12, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'dtype', 'complexity': 2, 'lineno': 145, 'classname': 'ModuleUtilsMixin', 'endline': 160, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'find_tensor_attributes', 'complexity': 3, 'lineno': 154, 'endline': 156, 'col_offset': 12, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'invert_attention_mask', 'complexity': 5, 'lineno': 162, 'classname': 'ModuleUtilsMixin', 'endline': 186, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_extended_attention_mask', 'complexity': 4, 'lineno': 188, 'classname': 'ModuleUtilsMixin', 'endline': 230, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_head_mask', 'complexity': 3, 'lineno': 232, 'classname': 'ModuleUtilsMixin', 'endline': 251, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_head_mask_to_5d', 'complexity': 4, 'lineno': 253, 'classname': 'ModuleUtilsMixin', 'endline': 262, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'get_extended_attention_mask', 'complexity': 4, 'lineno': 188, 'classname': 'ModuleUtilsMixin', 'endline': 230, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_head_mask_to_5d', 'complexity': 4, 'lineno': 253, 'classname': 'ModuleUtilsMixin', 'endline': 262, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'PoolerEndLogits', 'complexity': 4, 'lineno': 849, 'endline': 893, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 853, 'classname': 'PoolerEndLogits', 'endline': 858, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 860, 'classname': 'PoolerEndLogits', 'endline': 893, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'PoolerAnswerClass', 'complexity': 4, 'lineno': 896, 'endline': 940, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 899, 'classname': 'PoolerAnswerClass', 'endline': 903, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 905, 'classname': 'PoolerAnswerClass', 'endline': 940, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 905, 'classname': 'PoolerAnswerClass', 'endline': 940, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_parameters', 'complexity': 3, 'lineno': 78, 'classname': 'ModuleUtilsMixin', 'endline': 83, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_hook_rss_memory_post_forward', 'complexity': 3, 'lineno': 98, 'classname': 'ModuleUtilsMixin', 'endline': 109, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_head_mask', 'complexity': 3, 'lineno': 232, 'classname': 'ModuleUtilsMixin', 'endline': 251, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_get_resized_embeddings', 'complexity': 3, 'lineno': 409, 'classname': 'PreTrainedModel', 'endline': 445, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'PoolerStartLogits', 'complexity': 3, 'lineno': 825, 'endline': 846, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 828, 'classname': 'PoolerStartLogits', 'endline': 830, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 832, 'classname': 'PoolerStartLogits', 'endline': 846, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 832, 'classname': 'PoolerStartLogits', 'endline': 846, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'prune_conv1d_layer', 'complexity': 2, 'lineno': 1162, 'endline': 1183, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'Identity', 'complexity': 2, 'lineno': 48, 'endline': 56, 'col_offset': 4, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 52, 'classname': 'Identity', 'endline': 53, 'col_offset': 8, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 55, 'classname': 'Identity', 'endline': 56, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_hook_rss_memory_pre_forward', 'complexity': 2, 'lineno': 86, 'classname': 'ModuleUtilsMixin', 'endline': 95, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'add_memory_hooks', 'complexity': 2, 'lineno': 111, 'classname': 'ModuleUtilsMixin', 'endline': 118, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'reset_memory_hooks_state', 'complexity': 2, 'lineno': 120, 'classname': 'ModuleUtilsMixin', 'endline': 124, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'device', 'complexity': 2, 'lineno': 127, 'classname': 'ModuleUtilsMixin', 'endline': 142, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'find_tensor_attributes', 'complexity': 3, 'lineno': 136, 'endline': 138, 'col_offset': 12, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'dtype', 'complexity': 2, 'lineno': 145, 'classname': 'ModuleUtilsMixin', 'endline': 160, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'find_tensor_attributes', 'complexity': 3, 'lineno': 154, 'endline': 156, 'col_offset': 12, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 293, 'classname': 'PreTrainedModel', 'endline': 304, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 2, 'lineno': 310, 'classname': 'PreTrainedModel', 'endline': 322, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 2, 'lineno': 324, 'classname': 'PreTrainedModel', 'endline': 336, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tie_weights', 'complexity': 2, 'lineno': 348, 'classname': 'PreTrainedModel', 'endline': 356, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'resize_token_embeddings', 'complexity': 2, 'lineno': 376, 'classname': 'PreTrainedModel', 'endline': 401, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'init_weights', 'complexity': 2, 'lineno': 447, 'classname': 'PreTrainedModel', 'endline': 457, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 459, 'classname': 'PreTrainedModel', 'endline': 472, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'Conv1D', 'complexity': 2, 'lineno': 806, 'endline': 822, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 807, 'classname': 'Conv1D', 'endline': 816, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 818, 'classname': 'Conv1D', 'endline': 822, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 52, 'classname': 'Identity', 'endline': 53, 'col_offset': 8, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 55, 'classname': 'Identity', 'endline': 56, 'col_offset': 8, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 1, 'lineno': 285, 'classname': 'PreTrainedModel', 'endline': 291, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'base_model', 'complexity': 1, 'lineno': 307, 'classname': 'PreTrainedModel', 'endline': 308, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 338, 'classname': 'PreTrainedModel', 'endline': 346, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resize_token_embeddings', 'complexity': 1, 'lineno': 403, 'classname': 'PreTrainedModel', 'endline': 407, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 807, 'classname': 'Conv1D', 'endline': 816, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 818, 'classname': 'Conv1D', 'endline': 822, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 828, 'classname': 'PoolerStartLogits', 'endline': 830, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 853, 'classname': 'PoolerEndLogits', 'endline': 858, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 899, 'classname': 'PoolerAnswerClass', 'endline': 903, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 984, 'classname': 'SQuADHead', 'endline': 991, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_xlm.py': [{'type': 'method', 'rank': 'D', 'name': 'forward', 'complexity': 28, 'lineno': 401, 'classname': 'XLMModel', 'endline': 550, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 12, 'lineno': 126, 'classname': 'MultiHeadAttention', 'endline': 187, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'shape', 'complexity': 1, 'lineno': 142, 'endline': 144, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'unshape', 'complexity': 1, 'lineno': 146, 'endline': 148, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '_init_weights', 'complexity': 10, 'lineno': 228, 'classname': 'XLMPreTrainedModel', 'endline': 240, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 10, 'lineno': 317, 'classname': 'XLMModel', 'endline': 383, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'XLMModel', 'complexity': 9, 'lineno': 316, 'endline': 550, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 10, 'lineno': 317, 'classname': 'XLMModel', 'endline': 383, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 385, 'classname': 'XLMModel', 'endline': 386, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 388, 'classname': 'XLMModel', 'endline': 389, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 391, 'classname': 'XLMModel', 'endline': 397, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'forward', 'complexity': 28, 'lineno': 401, 'classname': 'XLMModel', 'endline': 550, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'B', 'name': 'get_masks', 'complexity': 6, 'lineno': 68, 'endline': 90, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'MultiHeadAttention', 'complexity': 6, 'lineno': 93, 'endline': 187, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 97, 'classname': 'MultiHeadAttention', 'endline': 109, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 111, 'classname': 'MultiHeadAttention', 'endline': 124, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 12, 'lineno': 126, 'classname': 'MultiHeadAttention', 'endline': 187, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'shape', 'complexity': 1, 'lineno': 142, 'endline': 144, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'unshape', 'complexity': 1, 'lineno': 146, 'endline': 148, 'col_offset': 8, 'closures': []}]}]}, {'type': 'class', 'rank': 'B', 'name': 'XLMPreTrainedModel', 'complexity': 6, 'lineno': 206, 'endline': 240, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 215, 'classname': 'XLMPreTrainedModel', 'endline': 216, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 3, 'lineno': 219, 'classname': 'XLMPreTrainedModel', 'endline': 226, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_init_weights', 'complexity': 10, 'lineno': 228, 'classname': 'XLMPreTrainedModel', 'endline': 240, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 794, 'classname': 'XLMForQuestionAnsweringSimple', 'endline': 884, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'XLMPredLayer', 'complexity': 4, 'lineno': 553, 'endline': 593, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 558, 'classname': 'XLMPredLayer', 'endline': 573, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 576, 'classname': 'XLMPredLayer', 'endline': 593, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 4, 'lineno': 576, 'classname': 'XLMPredLayer', 'endline': 593, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'XLMForQuestionAnsweringSimple', 'complexity': 4, 'lineno': 783, 'endline': 884, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 784, 'classname': 'XLMForQuestionAnsweringSimple', 'endline': 790, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 794, 'classname': 'XLMForQuestionAnsweringSimple', 'endline': 884, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'create_sinusoidal_embeddings', 'complexity': 3, 'lineno': 60, 'endline': 65, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TransformerFFN', 'complexity': 3, 'lineno': 190, 'endline': 203, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 191, 'classname': 'TransformerFFN', 'endline': 196, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 198, 'classname': 'TransformerFFN', 'endline': 203, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'dummy_inputs', 'complexity': 3, 'lineno': 219, 'classname': 'XLMPreTrainedModel', 'endline': 226, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'XLMForSequenceClassification', 'complexity': 3, 'lineno': 694, 'endline': 775, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 695, 'classname': 'XLMForSequenceClassification', 'endline': 702, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 706, 'classname': 'XLMForSequenceClassification', 'endline': 775, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 706, 'classname': 'XLMForSequenceClassification', 'endline': 775, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'XLMForTokenClassification', 'complexity': 3, 'lineno': 1014, 'endline': 1097, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1015, 'classname': 'XLMForTokenClassification', 'endline': 1023, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1027, 'classname': 'XLMForTokenClassification', 'endline': 1097, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1027, 'classname': 'XLMForTokenClassification', 'endline': 1097, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 97, 'classname': 'MultiHeadAttention', 'endline': 109, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 2, 'lineno': 111, 'classname': 'MultiHeadAttention', 'endline': 124, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 191, 'classname': 'TransformerFFN', 'endline': 196, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 2, 'lineno': 391, 'classname': 'XLMModel', 'endline': 397, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 558, 'classname': 'XLMPredLayer', 'endline': 573, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'XLMWithLMHeadModel', 'complexity': 2, 'lineno': 601, 'endline': 686, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 602, 'classname': 'XLMWithLMHeadModel', 'endline': 607, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 609, 'classname': 'XLMWithLMHeadModel', 'endline': 610, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 612, 'classname': 'XLMWithLMHeadModel', 'endline': 623, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 627, 'classname': 'XLMWithLMHeadModel', 'endline': 686, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 612, 'classname': 'XLMWithLMHeadModel', 'endline': 623, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'XLMForQuestionAnswering', 'complexity': 2, 'lineno': 892, 'endline': 1006, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 893, 'classname': 'XLMForQuestionAnswering', 'endline': 899, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 902, 'classname': 'XLMForQuestionAnswering', 'endline': 1006, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 198, 'classname': 'TransformerFFN', 'endline': 203, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 215, 'classname': 'XLMPreTrainedModel', 'endline': 216, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 385, 'classname': 'XLMModel', 'endline': 386, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 388, 'classname': 'XLMModel', 'endline': 389, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 602, 'classname': 'XLMWithLMHeadModel', 'endline': 607, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 609, 'classname': 'XLMWithLMHeadModel', 'endline': 610, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 627, 'classname': 'XLMWithLMHeadModel', 'endline': 686, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 695, 'classname': 'XLMForSequenceClassification', 'endline': 702, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 784, 'classname': 'XLMForQuestionAnsweringSimple', 'endline': 790, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 893, 'classname': 'XLMForQuestionAnswering', 'endline': 899, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 902, 'classname': 'XLMForQuestionAnswering', 'endline': 1006, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1015, 'classname': 'XLMForTokenClassification', 'endline': 1023, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_xlm_roberta.py': [{'type': 'class', 'rank': 'A', 'name': 'XLMRobertaModel', 'complexity': 1, 'lineno': 65, 'endline': 71, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'XLMRobertaForMaskedLM', 'complexity': 1, 'lineno': 77, 'endline': 83, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'XLMRobertaForSequenceClassification', 'complexity': 1, 'lineno': 91, 'endline': 97, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'XLMRobertaForMultipleChoice', 'complexity': 1, 'lineno': 105, 'endline': 111, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'XLMRobertaForTokenClassification', 'complexity': 1, 'lineno': 119, 'endline': 125, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'XLMRobertaForQuestionAnswering', 'complexity': 1, 'lineno': 133, 'endline': 139, 'col_offset': 0, 'methods': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_xlnet.py': [{'type': 'method', 'rank': 'F', 'name': 'forward', 'complexity': 62, 'lineno': 755, 'classname': 'XLNetModel', 'endline': 976, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'C', 'name': 'load_tf_weights_in_xlnet', 'complexity': 16, 'lineno': 127, 'endline': 186, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 13, 'lineno': 319, 'classname': 'XLNetRelativeAttention', 'endline': 451, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'C', 'name': 'build_tf_xlnet_to_pytorch_map', 'complexity': 11, 'lineno': 44, 'endline': 124, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'XLNetModel', 'complexity': 10, 'lineno': 632, 'endline': 976, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 633, 'classname': 'XLNetModel', 'endline': 650, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 652, 'classname': 'XLNetModel', 'endline': 653, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 655, 'classname': 'XLNetModel', 'endline': 656, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 658, 'classname': 'XLNetModel', 'endline': 659, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_mask', 'complexity': 2, 'lineno': 661, 'classname': 'XLNetModel', 'endline': 689, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'cache_mem', 'complexity': 4, 'lineno': 691, 'classname': 'XLNetModel', 'endline': 701, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'positional_embedding', 'complexity': 2, 'lineno': 704, 'classname': 'XLNetModel', 'endline': 712, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'relative_positional_encoding', 'complexity': 7, 'lineno': 714, 'classname': 'XLNetModel', 'endline': 751, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'F', 'name': 'forward', 'complexity': 62, 'lineno': 755, 'classname': 'XLNetModel', 'endline': 976, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'XLNetPreTrainedModel', 'complexity': 9, 'lineno': 519, 'endline': 554, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '_init_weights', 'complexity': 8, 'lineno': 528, 'classname': 'XLNetPreTrainedModel', 'endline': 554, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 9, 'lineno': 1573, 'classname': 'XLNetForQuestionAnswering', 'endline': 1735, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_init_weights', 'complexity': 8, 'lineno': 528, 'classname': 'XLNetPreTrainedModel', 'endline': 554, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 1352, 'classname': 'XLNetForMultipleChoice', 'endline': 1439, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'relative_positional_encoding', 'complexity': 7, 'lineno': 714, 'classname': 'XLNetModel', 'endline': 751, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'rel_attn_core', 'complexity': 6, 'lineno': 255, 'classname': 'XLNetRelativeAttention', 'endline': 305, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'XLNetForMultipleChoice', 'complexity': 6, 'lineno': 1340, 'endline': 1439, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1341, 'classname': 'XLNetForMultipleChoice', 'endline': 1348, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 8, 'lineno': 1352, 'classname': 'XLNetForMultipleChoice', 'endline': 1439, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'XLNetForQuestionAnswering', 'complexity': 6, 'lineno': 1559, 'endline': 1735, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1560, 'classname': 'XLNetForQuestionAnswering', 'endline': 1570, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'forward', 'complexity': 9, 'lineno': 1573, 'classname': 'XLNetForQuestionAnswering', 'endline': 1735, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 1459, 'classname': 'XLNetForQuestionAnsweringSimple', 'endline': 1551, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'XLNetRelativeAttention', 'complexity': 4, 'lineno': 195, 'endline': 451, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 196, 'classname': 'XLNetRelativeAttention', 'endline': 222, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 224, 'classname': 'XLNetRelativeAttention', 'endline': 225, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'rel_shift', 'complexity': 1, 'lineno': 228, 'classname': 'XLNetRelativeAttention', 'endline': 238, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'rel_shift_bnij', 'complexity': 1, 'lineno': 241, 'classname': 'XLNetRelativeAttention', 'endline': 253, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'rel_attn_core', 'complexity': 6, 'lineno': 255, 'classname': 'XLNetRelativeAttention', 'endline': 305, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'post_attention', 'complexity': 2, 'lineno': 307, 'classname': 'XLNetRelativeAttention', 'endline': 317, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'forward', 'complexity': 13, 'lineno': 319, 'classname': 'XLNetRelativeAttention', 'endline': 451, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'cache_mem', 'complexity': 4, 'lineno': 691, 'classname': 'XLNetModel', 'endline': 701, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'XLNetForQuestionAnsweringSimple', 'complexity': 4, 'lineno': 1447, 'endline': 1551, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1448, 'classname': 'XLNetForQuestionAnsweringSimple', 'endline': 1455, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 5, 'lineno': 1459, 'classname': 'XLNetForQuestionAnsweringSimple', 'endline': 1551, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'XLNetFeedForward', 'complexity': 3, 'lineno': 454, 'endline': 474, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 455, 'classname': 'XLNetFeedForward', 'endline': 464, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 466, 'classname': 'XLNetFeedForward', 'endline': 474, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'XLNetLayer', 'complexity': 3, 'lineno': 477, 'endline': 516, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 478, 'classname': 'XLNetLayer', 'endline': 482, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 484, 'classname': 'XLNetLayer', 'endline': 516, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'XLNetForSequenceClassification', 'complexity': 3, 'lineno': 1144, 'endline': 1233, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1145, 'classname': 'XLNetForSequenceClassification', 'endline': 1153, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1157, 'classname': 'XLNetForSequenceClassification', 'endline': 1233, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1157, 'classname': 'XLNetForSequenceClassification', 'endline': 1233, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'XLNetForTokenClassification', 'complexity': 3, 'lineno': 1241, 'endline': 1332, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1242, 'classname': 'XLNetForTokenClassification', 'endline': 1249, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1253, 'classname': 'XLNetForTokenClassification', 'endline': 1332, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 1253, 'classname': 'XLNetForTokenClassification', 'endline': 1332, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 196, 'classname': 'XLNetRelativeAttention', 'endline': 222, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'post_attention', 'complexity': 2, 'lineno': 307, 'classname': 'XLNetRelativeAttention', 'endline': 317, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 455, 'classname': 'XLNetFeedForward', 'endline': 464, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 484, 'classname': 'XLNetLayer', 'endline': 516, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 633, 'classname': 'XLNetModel', 'endline': 650, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_mask', 'complexity': 2, 'lineno': 661, 'classname': 'XLNetModel', 'endline': 689, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'positional_embedding', 'complexity': 2, 'lineno': 704, 'classname': 'XLNetModel', 'endline': 712, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'XLNetLMHeadModel', 'complexity': 2, 'lineno': 984, 'endline': 1136, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 985, 'classname': 'XLNetLMHeadModel', 'endline': 993, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 995, 'classname': 'XLNetLMHeadModel', 'endline': 996, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 998, 'classname': 'XLNetLMHeadModel', 'endline': 1029, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 1032, 'classname': 'XLNetLMHeadModel', 'endline': 1136, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'prepare_inputs_for_generation', 'complexity': 2, 'lineno': 998, 'classname': 'XLNetLMHeadModel', 'endline': 1029, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 2, 'lineno': 1032, 'classname': 'XLNetLMHeadModel', 'endline': 1136, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prune_heads', 'complexity': 1, 'lineno': 224, 'classname': 'XLNetRelativeAttention', 'endline': 225, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'rel_shift', 'complexity': 1, 'lineno': 228, 'classname': 'XLNetRelativeAttention', 'endline': 238, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'rel_shift_bnij', 'complexity': 1, 'lineno': 241, 'classname': 'XLNetRelativeAttention', 'endline': 253, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 1, 'lineno': 466, 'classname': 'XLNetFeedForward', 'endline': 474, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 478, 'classname': 'XLNetLayer', 'endline': 482, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_input_embeddings', 'complexity': 1, 'lineno': 652, 'classname': 'XLNetModel', 'endline': 653, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_input_embeddings', 'complexity': 1, 'lineno': 655, 'classname': 'XLNetModel', 'endline': 656, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prune_heads', 'complexity': 1, 'lineno': 658, 'classname': 'XLNetModel', 'endline': 659, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 985, 'classname': 'XLNetLMHeadModel', 'endline': 993, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_output_embeddings', 'complexity': 1, 'lineno': 995, 'classname': 'XLNetLMHeadModel', 'endline': 996, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1145, 'classname': 'XLNetForSequenceClassification', 'endline': 1153, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1242, 'classname': 'XLNetForTokenClassification', 'endline': 1249, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1341, 'classname': 'XLNetForMultipleChoice', 'endline': 1348, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1448, 'classname': 'XLNetForQuestionAnsweringSimple', 'endline': 1455, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1560, 'classname': 'XLNetForQuestionAnswering', 'endline': 1570, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\optimization.py': [{'type': 'method', 'rank': 'B', 'name': 'step', 'complexity': 9, 'lineno': 208, 'classname': 'AdamW', 'endline': 267, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'AdamW', 'complexity': 8, 'lineno': 168, 'endline': 267, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 5, 'lineno': 188, 'classname': 'AdamW', 'endline': 206, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'step', 'complexity': 9, 'lineno': 208, 'classname': 'AdamW', 'endline': 267, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 5, 'lineno': 188, 'classname': 'AdamW', 'endline': 206, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'get_constant_schedule', 'complexity': 1, 'lineno': 29, 'endline': 42, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'get_constant_schedule_with_warmup', 'complexity': 1, 'lineno': 45, 'endline': 67, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'lr_lambda', 'complexity': 2, 'lineno': 62, 'endline': 65, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'get_linear_schedule_with_warmup', 'complexity': 1, 'lineno': 70, 'endline': 96, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'lr_lambda', 'complexity': 2, 'lineno': 89, 'endline': 93, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'get_cosine_schedule_with_warmup', 'complexity': 1, 'lineno': 99, 'endline': 130, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'lr_lambda', 'complexity': 2, 'lineno': 124, 'endline': 128, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'get_cosine_with_hard_restarts_schedule_with_warmup', 'complexity': 1, 'lineno': 133, 'endline': 165, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'lr_lambda', 'complexity': 3, 'lineno': 157, 'endline': 163, 'col_offset': 4, 'closures': []}]}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\optimization_tf.py': [{'type': 'method', 'rank': 'B', 'name': '_do_use_weight_decay', 'complexity': 8, 'lineno': 250, 'classname': 'AdamWeightDecay', 'endline': 264, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__call__', 'complexity': 8, 'lineno': 305, 'classname': 'GradientAccumulator', 'endline': 329, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'GradientAccumulator', 'complexity': 5, 'lineno': 268, 'endline': 338, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 280, 'classname': 'GradientAccumulator', 'endline': 283, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'step', 'complexity': 2, 'lineno': 286, 'classname': 'GradientAccumulator', 'endline': 296, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'gradients', 'complexity': 4, 'lineno': 299, 'classname': 'GradientAccumulator', 'endline': 303, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__call__', 'complexity': 8, 'lineno': 305, 'classname': 'GradientAccumulator', 'endline': 329, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'reset', 'complexity': 4, 'lineno': 331, 'classname': 'GradientAccumulator', 'endline': 338, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_get_lr', 'complexity': 4, 'lineno': 220, 'classname': 'AdamWeightDecay', 'endline': 231, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'gradients', 'complexity': 4, 'lineno': 299, 'classname': 'GradientAccumulator', 'endline': 303, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'reset', 'complexity': 4, 'lineno': 331, 'classname': 'GradientAccumulator', 'endline': 338, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'create_optimizer', 'complexity': 3, 'lineno': 82, 'endline': 135, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AdamWeightDecay', 'complexity': 3, 'lineno': 138, 'endline': 264, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 177, 'classname': 'AdamWeightDecay', 'endline': 193, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 1, 'lineno': 196, 'classname': 'AdamWeightDecay', 'endline': 199, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prepare_local', 'complexity': 1, 'lineno': 201, 'classname': 'AdamWeightDecay', 'endline': 204, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_decay_weights_op', 'complexity': 2, 'lineno': 207, 'classname': 'AdamWeightDecay', 'endline': 214, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'apply_gradients', 'complexity': 1, 'lineno': 216, 'classname': 'AdamWeightDecay', 'endline': 218, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_get_lr', 'complexity': 4, 'lineno': 220, 'classname': 'AdamWeightDecay', 'endline': 231, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resource_apply_dense', 'complexity': 1, 'lineno': 233, 'classname': 'AdamWeightDecay', 'endline': 237, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resource_apply_sparse', 'complexity': 1, 'lineno': 239, 'classname': 'AdamWeightDecay', 'endline': 243, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_config', 'complexity': 1, 'lineno': 245, 'classname': 'AdamWeightDecay', 'endline': 248, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_do_use_weight_decay', 'complexity': 8, 'lineno': 250, 'classname': 'AdamWeightDecay', 'endline': 264, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'WarmUp', 'complexity': 2, 'lineno': 24, 'endline': 78, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 42, 'classname': 'WarmUp', 'endline': 55, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__call__', 'complexity': 2, 'lineno': 57, 'classname': 'WarmUp', 'endline': 69, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_config', 'complexity': 1, 'lineno': 72, 'classname': 'WarmUp', 'endline': 78, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__call__', 'complexity': 2, 'lineno': 57, 'classname': 'WarmUp', 'endline': 69, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_decay_weights_op', 'complexity': 2, 'lineno': 207, 'classname': 'AdamWeightDecay', 'endline': 214, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'step', 'complexity': 2, 'lineno': 286, 'classname': 'GradientAccumulator', 'endline': 296, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 42, 'classname': 'WarmUp', 'endline': 55, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_config', 'complexity': 1, 'lineno': 72, 'classname': 'WarmUp', 'endline': 78, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 177, 'classname': 'AdamWeightDecay', 'endline': 193, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_config', 'complexity': 1, 'lineno': 196, 'classname': 'AdamWeightDecay', 'endline': 199, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_prepare_local', 'complexity': 1, 'lineno': 201, 'classname': 'AdamWeightDecay', 'endline': 204, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'apply_gradients', 'complexity': 1, 'lineno': 216, 'classname': 'AdamWeightDecay', 'endline': 218, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resource_apply_dense', 'complexity': 1, 'lineno': 233, 'classname': 'AdamWeightDecay', 'endline': 237, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_resource_apply_sparse', 'complexity': 1, 'lineno': 239, 'classname': 'AdamWeightDecay', 'endline': 243, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_config', 'complexity': 1, 'lineno': 245, 'classname': 'AdamWeightDecay', 'endline': 248, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 280, 'classname': 'GradientAccumulator', 'endline': 283, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\pipelines.py': [{'type': 'class', 'rank': 'D', 'name': 'QuestionAnsweringArgumentHandler', 'complexity': 22, 'lineno': 1081, 'endline': 1140, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'D', 'name': '__call__', 'complexity': 21, 'lineno': 1090, 'classname': 'QuestionAnsweringArgumentHandler', 'endline': 1140, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'D', 'name': '__call__', 'complexity': 21, 'lineno': 1090, 'classname': 'QuestionAnsweringArgumentHandler', 'endline': 1140, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'C', 'name': 'pipeline', 'complexity': 18, 'lineno': 1744, 'endline': 1886, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '__call__', 'complexity': 17, 'lineno': 640, 'classname': 'TextGenerationPipeline', 'endline': 724, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '__call__', 'complexity': 17, 'lineno': 1466, 'classname': 'SummarizationPipeline', 'endline': 1552, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '__call__', 'complexity': 15, 'lineno': 980, 'classname': 'TokenClassificationPipeline', 'endline': 1059, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '__call__', 'complexity': 15, 'lineno': 1223, 'classname': 'QuestionAnsweringPipeline', 'endline': 1327, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'C', 'name': 'TranslationPipeline', 'complexity': 14, 'lineno': 1555, 'endline': 1664, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'C', 'name': '__call__', 'complexity': 13, 'lineno': 1594, 'classname': 'TranslationPipeline', 'endline': 1664, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'C', 'name': '__call__', 'complexity': 13, 'lineno': 1594, 'classname': 'TranslationPipeline', 'endline': 1664, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'C', 'name': 'TextGenerationPipeline', 'complexity': 11, 'lineno': 574, 'endline': 724, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '_parse_and_tokenize', 'complexity': 2, 'lineno': 620, 'classname': 'TextGenerationPipeline', 'endline': 638, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '__call__', 'complexity': 17, 'lineno': 640, 'classname': 'TextGenerationPipeline', 'endline': 724, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 10, 'lineno': 177, 'classname': 'PipelineDataFormat', 'endline': 194, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'SummarizationPipeline', 'complexity': 10, 'lineno': 1414, 'endline': 1552, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1462, 'classname': 'SummarizationPipeline', 'endline': 1464, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '__call__', 'complexity': 17, 'lineno': 1466, 'classname': 'SummarizationPipeline', 'endline': 1552, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'B', 'name': 'get_framework', 'complexity': 9, 'lineno': 70, 'endline': 87, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 9, 'lineno': 384, 'classname': 'Pipeline', 'endline': 414, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'handle_args', 'complexity': 8, 'lineno': 127, 'classname': 'DefaultArgumentHandler', 'endline': 151, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TokenClassificationPipeline', 'complexity': 7, 'lineno': 913, 'endline': 1075, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 952, 'classname': 'TokenClassificationPipeline', 'endline': 978, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '__call__', 'complexity': 15, 'lineno': 980, 'classname': 'TokenClassificationPipeline', 'endline': 1059, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'group_entities', 'complexity': 3, 'lineno': 1061, 'classname': 'TokenClassificationPipeline', 'endline': 1075, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'QuestionAnsweringPipeline', 'complexity': 7, 'lineno': 1143, 'endline': 1410, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1182, 'classname': 'QuestionAnsweringPipeline', 'endline': 1200, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_sample', 'complexity': 3, 'lineno': 1204, 'classname': 'QuestionAnsweringPipeline', 'endline': 1221, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '__call__', 'complexity': 15, 'lineno': 1223, 'classname': 'QuestionAnsweringPipeline', 'endline': 1327, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'decode', 'complexity': 5, 'lineno': 1329, 'classname': 'QuestionAnsweringPipeline', 'endline': 1367, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'span_to_answer', 'complexity': 6, 'lineno': 1369, 'classname': 'QuestionAnsweringPipeline', 'endline': 1410, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'DefaultArgumentHandler', 'complexity': 6, 'lineno': 112, 'endline': 160, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'handle_kwargs', 'complexity': 2, 'lineno': 118, 'classname': 'DefaultArgumentHandler', 'endline': 124, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'handle_args', 'complexity': 8, 'lineno': 127, 'classname': 'DefaultArgumentHandler', 'endline': 151, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__call__', 'complexity': 4, 'lineno': 153, 'classname': 'DefaultArgumentHandler', 'endline': 160, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '__call__', 'complexity': 6, 'lineno': 860, 'classname': 'FillMaskPipeline', 'endline': 910, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'span_to_answer', 'complexity': 6, 'lineno': 1369, 'classname': 'QuestionAnsweringPipeline', 'endline': 1410, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__iter__', 'complexity': 5, 'lineno': 289, 'classname': 'PipedPipelineDataFormat', 'endline': 303, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__call__', 'complexity': 5, 'lineno': 769, 'classname': 'TextClassificationPipeline', 'endline': 779, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'decode', 'complexity': 5, 'lineno': 1329, 'classname': 'QuestionAnsweringPipeline', 'endline': 1367, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__call__', 'complexity': 4, 'lineno': 153, 'classname': 'DefaultArgumentHandler', 'endline': 160, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'PipelineDataFormat', 'complexity': 4, 'lineno': 163, 'endline': 234, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 10, 'lineno': 177, 'classname': 'PipelineDataFormat', 'endline': 194, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__iter__', 'complexity': 1, 'lineno': 197, 'classname': 'PipelineDataFormat', 'endline': 198, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save', 'complexity': 1, 'lineno': 201, 'classname': 'PipelineDataFormat', 'endline': 207, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_binary', 'complexity': 1, 'lineno': 209, 'classname': 'PipelineDataFormat', 'endline': 221, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_str', 'complexity': 4, 'lineno': 224, 'classname': 'PipelineDataFormat', 'endline': 234, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'from_str', 'complexity': 4, 'lineno': 224, 'classname': 'PipelineDataFormat', 'endline': 234, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__iter__', 'complexity': 4, 'lineno': 243, 'classname': 'CsvPipelineDataFormat', 'endline': 250, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__iter__', 'complexity': 4, 'lineno': 269, 'classname': 'JsonPipelineDataFormat', 'endline': 274, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'PipedPipelineDataFormat', 'complexity': 4, 'lineno': 281, 'endline': 315, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__iter__', 'complexity': 5, 'lineno': 289, 'classname': 'PipedPipelineDataFormat', 'endline': 303, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save', 'complexity': 1, 'lineno': 305, 'classname': 'PipedPipelineDataFormat', 'endline': 306, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_binary', 'complexity': 2, 'lineno': 308, 'classname': 'PipedPipelineDataFormat', 'endline': 315, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'device_placement', 'complexity': 4, 'lineno': 443, 'classname': 'Pipeline', 'endline': 462, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TextClassificationPipeline', 'complexity': 4, 'lineno': 727, 'endline': 779, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 764, 'classname': 'TextClassificationPipeline', 'endline': 767, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__call__', 'complexity': 5, 'lineno': 769, 'classname': 'TextClassificationPipeline', 'endline': 779, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'FillMaskPipeline', 'complexity': 4, 'lineno': 783, 'endline': 910, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 821, 'classname': 'FillMaskPipeline', 'endline': 843, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'ensure_exactly_one_mask_token', 'complexity': 3, 'lineno': 845, 'classname': 'FillMaskPipeline', 'endline': 857, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__call__', 'complexity': 6, 'lineno': 860, 'classname': 'FillMaskPipeline', 'endline': 910, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'CsvPipelineDataFormat', 'complexity': 3, 'lineno': 237, 'endline': 257, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 238, 'classname': 'CsvPipelineDataFormat', 'endline': 241, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__iter__', 'complexity': 4, 'lineno': 243, 'classname': 'CsvPipelineDataFormat', 'endline': 250, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save', 'complexity': 2, 'lineno': 252, 'classname': 'CsvPipelineDataFormat', 'endline': 257, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'JsonPipelineDataFormat', 'complexity': 3, 'lineno': 260, 'endline': 278, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 261, 'classname': 'JsonPipelineDataFormat', 'endline': 267, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__iter__', 'complexity': 4, 'lineno': 269, 'classname': 'JsonPipelineDataFormat', 'endline': 274, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save', 'complexity': 1, 'lineno': 276, 'classname': 'JsonPipelineDataFormat', 'endline': 278, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'Pipeline', 'complexity': 3, 'lineno': 332, 'endline': 510, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 9, 'lineno': 384, 'classname': 'Pipeline', 'endline': 414, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_pretrained', 'complexity': 3, 'lineno': 416, 'classname': 'Pipeline', 'endline': 428, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'transform', 'complexity': 1, 'lineno': 430, 'classname': 'Pipeline', 'endline': 434, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'predict', 'complexity': 1, 'lineno': 436, 'classname': 'Pipeline', 'endline': 440, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'device_placement', 'complexity': 4, 'lineno': 443, 'classname': 'Pipeline', 'endline': 462, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'ensure_tensor_on_device', 'complexity': 2, 'lineno': 464, 'classname': 'Pipeline', 'endline': 470, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_parse_and_tokenize', 'complexity': 1, 'lineno': 472, 'classname': 'Pipeline', 'endline': 482, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__call__', 'complexity': 1, 'lineno': 484, 'classname': 'Pipeline', 'endline': 486, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_forward', 'complexity': 3, 'lineno': 488, 'classname': 'Pipeline', 'endline': 510, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'save_pretrained', 'complexity': 3, 'lineno': 416, 'classname': 'Pipeline', 'endline': 428, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_forward', 'complexity': 3, 'lineno': 488, 'classname': 'Pipeline', 'endline': 510, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'ensure_exactly_one_mask_token', 'complexity': 3, 'lineno': 845, 'classname': 'FillMaskPipeline', 'endline': 857, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'group_entities', 'complexity': 3, 'lineno': 1061, 'classname': 'TokenClassificationPipeline', 'endline': 1075, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_sample', 'complexity': 3, 'lineno': 1204, 'classname': 'QuestionAnsweringPipeline', 'endline': 1221, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'PipelineException', 'complexity': 2, 'lineno': 90, 'endline': 99, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 95, 'classname': 'PipelineException', 'endline': 99, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'ArgumentHandler', 'complexity': 2, 'lineno': 102, 'endline': 109, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__call__', 'complexity': 1, 'lineno': 108, 'classname': 'ArgumentHandler', 'endline': 109, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'handle_kwargs', 'complexity': 2, 'lineno': 118, 'classname': 'DefaultArgumentHandler', 'endline': 124, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save', 'complexity': 2, 'lineno': 252, 'classname': 'CsvPipelineDataFormat', 'endline': 257, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_binary', 'complexity': 2, 'lineno': 308, 'classname': 'PipedPipelineDataFormat', 'endline': 315, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': '_ScikitCompat', 'complexity': 2, 'lineno': 318, 'endline': 329, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'transform', 'complexity': 1, 'lineno': 324, 'classname': '_ScikitCompat', 'endline': 325, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'predict', 'complexity': 1, 'lineno': 328, 'classname': '_ScikitCompat', 'endline': 329, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'ensure_tensor_on_device', 'complexity': 2, 'lineno': 464, 'classname': 'Pipeline', 'endline': 470, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'FeatureExtractionPipeline', 'complexity': 2, 'lineno': 513, 'endline': 571, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 549, 'classname': 'FeatureExtractionPipeline', 'endline': 567, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__call__', 'complexity': 1, 'lineno': 570, 'classname': 'FeatureExtractionPipeline', 'endline': 571, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_parse_and_tokenize', 'complexity': 2, 'lineno': 620, 'classname': 'TextGenerationPipeline', 'endline': 638, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 95, 'classname': 'PipelineException', 'endline': 99, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__call__', 'complexity': 1, 'lineno': 108, 'classname': 'ArgumentHandler', 'endline': 109, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__iter__', 'complexity': 1, 'lineno': 197, 'classname': 'PipelineDataFormat', 'endline': 198, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save', 'complexity': 1, 'lineno': 201, 'classname': 'PipelineDataFormat', 'endline': 207, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_binary', 'complexity': 1, 'lineno': 209, 'classname': 'PipelineDataFormat', 'endline': 221, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 238, 'classname': 'CsvPipelineDataFormat', 'endline': 241, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 261, 'classname': 'JsonPipelineDataFormat', 'endline': 267, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save', 'complexity': 1, 'lineno': 276, 'classname': 'JsonPipelineDataFormat', 'endline': 278, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save', 'complexity': 1, 'lineno': 305, 'classname': 'PipedPipelineDataFormat', 'endline': 306, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'transform', 'complexity': 1, 'lineno': 324, 'classname': '_ScikitCompat', 'endline': 325, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'predict', 'complexity': 1, 'lineno': 328, 'classname': '_ScikitCompat', 'endline': 329, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'transform', 'complexity': 1, 'lineno': 430, 'classname': 'Pipeline', 'endline': 434, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'predict', 'complexity': 1, 'lineno': 436, 'classname': 'Pipeline', 'endline': 440, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_parse_and_tokenize', 'complexity': 1, 'lineno': 472, 'classname': 'Pipeline', 'endline': 482, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__call__', 'complexity': 1, 'lineno': 484, 'classname': 'Pipeline', 'endline': 486, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 549, 'classname': 'FeatureExtractionPipeline', 'endline': 567, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__call__', 'complexity': 1, 'lineno': 570, 'classname': 'FeatureExtractionPipeline', 'endline': 571, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 764, 'classname': 'TextClassificationPipeline', 'endline': 767, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 821, 'classname': 'FillMaskPipeline', 'endline': 843, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 952, 'classname': 'TokenClassificationPipeline', 'endline': 978, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1182, 'classname': 'QuestionAnsweringPipeline', 'endline': 1200, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 1462, 'classname': 'SummarizationPipeline', 'endline': 1464, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\testing_utils.py': [{'type': 'function', 'rank': 'A', 'name': 'parse_flag_from_env', 'complexity': 4, 'lineno': 13, 'endline': 26, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'parse_int_from_env', 'complexity': 4, 'lineno': 29, 'endline': 39, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'require_multigpu', 'complexity': 3, 'lineno': 97, 'endline': 113, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'slow', 'complexity': 2, 'lineno': 47, 'endline': 57, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'custom_tokenizers', 'complexity': 2, 'lineno': 60, 'endline': 70, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'require_torch', 'complexity': 2, 'lineno': 73, 'endline': 82, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'require_tf', 'complexity': 2, 'lineno': 85, 'endline': 94, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_albert.py': [{'type': 'method', 'rank': 'B', 'name': '_tokenize', 'complexity': 9, 'lineno': 199, 'classname': 'AlbertTokenizer', 'endline': 221, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'preprocess_text', 'complexity': 6, 'lineno': 184, 'classname': 'AlbertTokenizer', 'endline': 197, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 5, 'lineno': 261, 'classname': 'AlbertTokenizer', 'endline': 290, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'AlbertTokenizer', 'complexity': 3, 'lineno': 57, 'endline': 342, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 114, 'classname': 'AlbertTokenizer', 'endline': 155, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 158, 'classname': 'AlbertTokenizer', 'endline': 159, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 2, 'lineno': 161, 'classname': 'AlbertTokenizer', 'endline': 164, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getstate__', 'complexity': 1, 'lineno': 166, 'classname': 'AlbertTokenizer', 'endline': 169, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__setstate__', 'complexity': 2, 'lineno': 171, 'classname': 'AlbertTokenizer', 'endline': 182, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'preprocess_text', 'complexity': 6, 'lineno': 184, 'classname': 'AlbertTokenizer', 'endline': 197, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_tokenize', 'complexity': 9, 'lineno': 199, 'classname': 'AlbertTokenizer', 'endline': 221, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 223, 'classname': 'AlbertTokenizer', 'endline': 225, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 227, 'classname': 'AlbertTokenizer', 'endline': 229, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 231, 'classname': 'AlbertTokenizer', 'endline': 233, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 235, 'classname': 'AlbertTokenizer', 'endline': 259, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 5, 'lineno': 261, 'classname': 'AlbertTokenizer', 'endline': 290, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 292, 'classname': 'AlbertTokenizer', 'endline': 321, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 3, 'lineno': 323, 'classname': 'AlbertTokenizer', 'endline': 342, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 3, 'lineno': 323, 'classname': 'AlbertTokenizer', 'endline': 342, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 114, 'classname': 'AlbertTokenizer', 'endline': 155, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 2, 'lineno': 161, 'classname': 'AlbertTokenizer', 'endline': 164, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__setstate__', 'complexity': 2, 'lineno': 171, 'classname': 'AlbertTokenizer', 'endline': 182, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 235, 'classname': 'AlbertTokenizer', 'endline': 259, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 292, 'classname': 'AlbertTokenizer', 'endline': 321, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 158, 'classname': 'AlbertTokenizer', 'endline': 159, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getstate__', 'complexity': 1, 'lineno': 166, 'classname': 'AlbertTokenizer', 'endline': 169, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 223, 'classname': 'AlbertTokenizer', 'endline': 225, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 227, 'classname': 'AlbertTokenizer', 'endline': 229, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 231, 'classname': 'AlbertTokenizer', 'endline': 233, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_auto.py': [{'type': 'method', 'rank': 'B', 'name': 'from_pretrained', 'complexity': 8, 'lineno': 139, 'classname': 'AutoTokenizer', 'endline': 222, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'AutoTokenizer', 'complexity': 6, 'lineno': 103, 'endline': 222, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 132, 'classname': 'AutoTokenizer', 'endline': 134, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'from_pretrained', 'complexity': 8, 'lineno': 139, 'classname': 'AutoTokenizer', 'endline': 222, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 132, 'classname': 'AutoTokenizer', 'endline': 134, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_bart.py': [{'type': 'class', 'rank': 'A', 'name': 'BartTokenizer', 'complexity': 4, 'lineno': 40, 'endline': 45, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'BartTokenizerFast', 'complexity': 4, 'lineno': 49, 'endline': 54, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'MBartTokenizer', 'complexity': 4, 'lineno': 62, 'endline': 178, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 113, 'classname': 'MBartTokenizer', 'endline': 117, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 119, 'classname': 'MBartTokenizer', 'endline': 125, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_lang', 'complexity': 1, 'lineno': 127, 'classname': 'MBartTokenizer', 'endline': 129, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_translation_batch', 'complexity': 4, 'lineno': 131, 'classname': 'MBartTokenizer', 'endline': 178, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'prepare_translation_batch', 'complexity': 4, 'lineno': 131, 'classname': 'MBartTokenizer', 'endline': 178, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 113, 'classname': 'MBartTokenizer', 'endline': 117, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 119, 'classname': 'MBartTokenizer', 'endline': 125, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_lang', 'complexity': 1, 'lineno': 127, 'classname': 'MBartTokenizer', 'endline': 129, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_bert.py': [{'type': 'method', 'rank': 'C', 'name': '_is_chinese_char', 'complexity': 17, 'lineno': 452, 'classname': 'BasicTokenizer', 'endline': 474, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'tokenize', 'complexity': 9, 'lineno': 498, 'classname': 'WordpieceTokenizer', 'endline': 547, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'BasicTokenizer', 'complexity': 7, 'lineno': 351, 'endline': 487, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 354, 'classname': 'BasicTokenizer', 'endline': 372, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'tokenize', 'complexity': 6, 'lineno': 374, 'classname': 'BasicTokenizer', 'endline': 404, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_run_strip_accents', 'complexity': 3, 'lineno': 406, 'classname': 'BasicTokenizer', 'endline': 415, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_run_split_on_punc', 'complexity': 7, 'lineno': 417, 'classname': 'BasicTokenizer', 'endline': 437, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize_chinese_chars', 'complexity': 3, 'lineno': 439, 'classname': 'BasicTokenizer', 'endline': 450, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '_is_chinese_char', 'complexity': 17, 'lineno': 452, 'classname': 'BasicTokenizer', 'endline': 474, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_clean_text', 'complexity': 6, 'lineno': 476, 'classname': 'BasicTokenizer', 'endline': 487, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '_run_split_on_punc', 'complexity': 7, 'lineno': 417, 'classname': 'BasicTokenizer', 'endline': 437, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'tokenize', 'complexity': 6, 'lineno': 374, 'classname': 'BasicTokenizer', 'endline': 404, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_clean_text', 'complexity': 6, 'lineno': 476, 'classname': 'BasicTokenizer', 'endline': 487, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'WordpieceTokenizer', 'complexity': 6, 'lineno': 490, 'endline': 547, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 493, 'classname': 'WordpieceTokenizer', 'endline': 496, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'tokenize', 'complexity': 9, 'lineno': 498, 'classname': 'WordpieceTokenizer', 'endline': 547, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 5, 'lineno': 261, 'classname': 'BertTokenizer', 'endline': 290, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 4, 'lineno': 164, 'classname': 'BertTokenizer', 'endline': 199, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 4, 'lineno': 208, 'classname': 'BertTokenizer', 'endline': 220, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 4, 'lineno': 322, 'classname': 'BertTokenizer', 'endline': 348, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertTokenizer', 'complexity': 3, 'lineno': 120, 'endline': 348, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 4, 'lineno': 164, 'classname': 'BertTokenizer', 'endline': 199, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 202, 'classname': 'BertTokenizer', 'endline': 203, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 205, 'classname': 'BertTokenizer', 'endline': 206, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 4, 'lineno': 208, 'classname': 'BertTokenizer', 'endline': 220, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 222, 'classname': 'BertTokenizer', 'endline': 224, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 226, 'classname': 'BertTokenizer', 'endline': 228, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 230, 'classname': 'BertTokenizer', 'endline': 233, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 235, 'classname': 'BertTokenizer', 'endline': 259, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 5, 'lineno': 261, 'classname': 'BertTokenizer', 'endline': 290, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 292, 'classname': 'BertTokenizer', 'endline': 320, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 4, 'lineno': 322, 'classname': 'BertTokenizer', 'endline': 348, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_run_strip_accents', 'complexity': 3, 'lineno': 406, 'classname': 'BasicTokenizer', 'endline': 415, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize_chinese_chars', 'complexity': 3, 'lineno': 439, 'classname': 'BasicTokenizer', 'endline': 450, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertTokenizerFast', 'complexity': 3, 'lineno': 550, 'endline': 671, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 598, 'classname': 'BertTokenizerFast', 'endline': 633, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 635, 'classname': 'BertTokenizerFast', 'endline': 641, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 643, 'classname': 'BertTokenizerFast', 'endline': 671, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'load_vocab', 'complexity': 2, 'lineno': 100, 'endline': 108, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'whitespace_tokenize', 'complexity': 2, 'lineno': 111, 'endline': 117, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 235, 'classname': 'BertTokenizer', 'endline': 259, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 292, 'classname': 'BertTokenizer', 'endline': 320, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 354, 'classname': 'BasicTokenizer', 'endline': 372, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 635, 'classname': 'BertTokenizerFast', 'endline': 641, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 643, 'classname': 'BertTokenizerFast', 'endline': 671, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 202, 'classname': 'BertTokenizer', 'endline': 203, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 205, 'classname': 'BertTokenizer', 'endline': 206, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 222, 'classname': 'BertTokenizer', 'endline': 224, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 226, 'classname': 'BertTokenizer', 'endline': 228, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 230, 'classname': 'BertTokenizer', 'endline': 233, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 493, 'classname': 'WordpieceTokenizer', 'endline': 496, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 598, 'classname': 'BertTokenizerFast', 'endline': 633, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_bert_japanese.py': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 10, 'lineno': 79, 'classname': 'BertJapaneseTokenizer', 'endline': 151, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'BertJapaneseTokenizer', 'complexity': 9, 'lineno': 71, 'endline': 164, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 10, 'lineno': 79, 'classname': 'BertJapaneseTokenizer', 'endline': 151, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 5, 'lineno': 153, 'classname': 'BertJapaneseTokenizer', 'endline': 164, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'tokenize', 'complexity': 7, 'lineno': 192, 'classname': 'MecabTokenizer', 'endline': 216, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'MecabTokenizer', 'complexity': 6, 'lineno': 167, 'endline': 216, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 170, 'classname': 'MecabTokenizer', 'endline': 190, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'tokenize', 'complexity': 7, 'lineno': 192, 'classname': 'MecabTokenizer', 'endline': 216, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 5, 'lineno': 153, 'classname': 'BertJapaneseTokenizer', 'endline': 164, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'CharacterTokenizer', 'complexity': 4, 'lineno': 219, 'endline': 260, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 222, 'classname': 'CharacterTokenizer', 'endline': 235, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tokenize', 'complexity': 4, 'lineno': 237, 'classname': 'CharacterTokenizer', 'endline': 260, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'tokenize', 'complexity': 4, 'lineno': 237, 'classname': 'CharacterTokenizer', 'endline': 260, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 170, 'classname': 'MecabTokenizer', 'endline': 190, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 222, 'classname': 'CharacterTokenizer', 'endline': 235, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_camembert.py': [{'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 5, 'lineno': 169, 'classname': 'CamembertTokenizer', 'endline': 197, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'CamembertTokenizer', 'complexity': 3, 'lineno': 51, 'endline': 287, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 107, 'classname': 'CamembertTokenizer', 'endline': 140, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 142, 'classname': 'CamembertTokenizer', 'endline': 167, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 5, 'lineno': 169, 'classname': 'CamembertTokenizer', 'endline': 197, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 199, 'classname': 'CamembertTokenizer', 'endline': 221, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 224, 'classname': 'CamembertTokenizer', 'endline': 225, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 1, 'lineno': 227, 'classname': 'CamembertTokenizer', 'endline': 228, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 3, 'lineno': 230, 'classname': 'CamembertTokenizer', 'endline': 237, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 2, 'lineno': 239, 'classname': 'CamembertTokenizer', 'endline': 243, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getstate__', 'complexity': 1, 'lineno': 245, 'classname': 'CamembertTokenizer', 'endline': 248, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__setstate__', 'complexity': 2, 'lineno': 250, 'classname': 'CamembertTokenizer', 'endline': 261, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 263, 'classname': 'CamembertTokenizer', 'endline': 266, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 3, 'lineno': 268, 'classname': 'CamembertTokenizer', 'endline': 287, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 3, 'lineno': 230, 'classname': 'CamembertTokenizer', 'endline': 237, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 3, 'lineno': 268, 'classname': 'CamembertTokenizer', 'endline': 287, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 107, 'classname': 'CamembertTokenizer', 'endline': 140, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 142, 'classname': 'CamembertTokenizer', 'endline': 167, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 199, 'classname': 'CamembertTokenizer', 'endline': 221, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 2, 'lineno': 239, 'classname': 'CamembertTokenizer', 'endline': 243, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__setstate__', 'complexity': 2, 'lineno': 250, 'classname': 'CamembertTokenizer', 'endline': 261, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 224, 'classname': 'CamembertTokenizer', 'endline': 225, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 1, 'lineno': 227, 'classname': 'CamembertTokenizer', 'endline': 228, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getstate__', 'complexity': 1, 'lineno': 245, 'classname': 'CamembertTokenizer', 'endline': 248, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 263, 'classname': 'CamembertTokenizer', 'endline': 266, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_ctrl.py': [{'type': 'method', 'rank': 'C', 'name': 'bpe', 'complexity': 12, 'lineno': 160, 'classname': 'CTRLTokenizer', 'endline': 202, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'CTRLTokenizer', 'complexity': 4, 'lineno': 117, 'endline': 261, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 141, 'classname': 'CTRLTokenizer', 'endline': 151, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 154, 'classname': 'CTRLTokenizer', 'endline': 155, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 157, 'classname': 'CTRLTokenizer', 'endline': 158, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'bpe', 'complexity': 12, 'lineno': 160, 'classname': 'CTRLTokenizer', 'endline': 202, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 3, 'lineno': 204, 'classname': 'CTRLTokenizer', 'endline': 213, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 215, 'classname': 'CTRLTokenizer', 'endline': 217, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 219, 'classname': 'CTRLTokenizer', 'endline': 221, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 223, 'classname': 'CTRLTokenizer', 'endline': 226, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 4, 'lineno': 228, 'classname': 'CTRLTokenizer', 'endline': 261, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 4, 'lineno': 228, 'classname': 'CTRLTokenizer', 'endline': 261, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 141, 'classname': 'CTRLTokenizer', 'endline': 151, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 3, 'lineno': 204, 'classname': 'CTRLTokenizer', 'endline': 213, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'get_pairs', 'complexity': 2, 'lineno': 102, 'endline': 114, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 154, 'classname': 'CTRLTokenizer', 'endline': 155, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 157, 'classname': 'CTRLTokenizer', 'endline': 158, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 215, 'classname': 'CTRLTokenizer', 'endline': 217, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 219, 'classname': 'CTRLTokenizer', 'endline': 221, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 223, 'classname': 'CTRLTokenizer', 'endline': 226, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_distilbert.py': [{'type': 'class', 'rank': 'A', 'name': 'DistilBertTokenizer', 'complexity': 1, 'lineno': 58, 'endline': 73, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'DistilBertTokenizerFast', 'complexity': 1, 'lineno': 76, 'endline': 91, 'col_offset': 0, 'methods': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_electra.py': [{'type': 'class', 'rank': 'A', 'name': 'ElectraTokenizer', 'complexity': 1, 'lineno': 52, 'endline': 65, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'ElectraTokenizerFast', 'complexity': 1, 'lineno': 68, 'endline': 81, 'col_offset': 0, 'methods': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_flaubert.py': [{'type': 'method', 'rank': 'B', 'name': '_tokenize', 'complexity': 8, 'lineno': 113, 'classname': 'FlaubertTokenizer', 'endline': 145, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'FlaubertTokenizer', 'complexity': 5, 'lineno': 79, 'endline': 145, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 98, 'classname': 'FlaubertTokenizer', 'endline': 101, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'preprocess_text', 'complexity': 2, 'lineno': 103, 'classname': 'FlaubertTokenizer', 'endline': 111, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_tokenize', 'complexity': 8, 'lineno': 113, 'classname': 'FlaubertTokenizer', 'endline': 145, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'preprocess_text', 'complexity': 2, 'lineno': 103, 'classname': 'FlaubertTokenizer', 'endline': 111, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'convert_to_unicode', 'complexity': 1, 'lineno': 63, 'endline': 76, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'six_ensure_text', 'complexity': 3, 'lineno': 68, 'endline': 74, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 98, 'classname': 'FlaubertTokenizer', 'endline': 101, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_gpt2.py': [{'type': 'method', 'rank': 'C', 'name': 'bpe', 'complexity': 12, 'lineno': 180, 'classname': 'GPT2Tokenizer', 'endline': 220, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 7, 'lineno': 141, 'classname': 'GPT2Tokenizer', 'endline': 171, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'bytes_to_unicode', 'complexity': 4, 'lineno': 65, 'endline': 87, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'GPT2Tokenizer', 'complexity': 4, 'lineno': 103, 'endline': 285, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 7, 'lineno': 141, 'classname': 'GPT2Tokenizer', 'endline': 171, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 174, 'classname': 'GPT2Tokenizer', 'endline': 175, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 177, 'classname': 'GPT2Tokenizer', 'endline': 178, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'bpe', 'complexity': 12, 'lineno': 180, 'classname': 'GPT2Tokenizer', 'endline': 220, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 4, 'lineno': 222, 'classname': 'GPT2Tokenizer', 'endline': 230, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 232, 'classname': 'GPT2Tokenizer', 'endline': 234, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 236, 'classname': 'GPT2Tokenizer', 'endline': 238, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 2, 'lineno': 240, 'classname': 'GPT2Tokenizer', 'endline': 244, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 4, 'lineno': 246, 'classname': 'GPT2Tokenizer', 'endline': 279, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_for_tokenization', 'complexity': 3, 'lineno': 281, 'classname': 'GPT2Tokenizer', 'endline': 285, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 4, 'lineno': 222, 'classname': 'GPT2Tokenizer', 'endline': 230, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 4, 'lineno': 246, 'classname': 'GPT2Tokenizer', 'endline': 279, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_for_tokenization', 'complexity': 3, 'lineno': 281, 'classname': 'GPT2Tokenizer', 'endline': 285, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'GPT2TokenizerFast', 'complexity': 3, 'lineno': 288, 'endline': 377, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 334, 'classname': 'GPT2TokenizerFast', 'endline': 357, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_batch_encode_plus', 'complexity': 2, 'lineno': 359, 'classname': 'GPT2TokenizerFast', 'endline': 367, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_encode_plus', 'complexity': 2, 'lineno': 369, 'classname': 'GPT2TokenizerFast', 'endline': 377, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'get_pairs', 'complexity': 2, 'lineno': 90, 'endline': 100, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 2, 'lineno': 240, 'classname': 'GPT2Tokenizer', 'endline': 244, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_batch_encode_plus', 'complexity': 2, 'lineno': 359, 'classname': 'GPT2TokenizerFast', 'endline': 367, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_encode_plus', 'complexity': 2, 'lineno': 369, 'classname': 'GPT2TokenizerFast', 'endline': 377, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 174, 'classname': 'GPT2Tokenizer', 'endline': 175, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 177, 'classname': 'GPT2Tokenizer', 'endline': 178, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 232, 'classname': 'GPT2Tokenizer', 'endline': 234, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 236, 'classname': 'GPT2Tokenizer', 'endline': 238, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 334, 'classname': 'GPT2TokenizerFast', 'endline': 357, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_longformer.py': [{'type': 'class', 'rank': 'A', 'name': 'LongformerTokenizer', 'complexity': 3, 'lineno': 45, 'endline': 50, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'LongformerTokenizerFast', 'complexity': 3, 'lineno': 54, 'endline': 59, 'col_offset': 0, 'methods': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_marian.py': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 8, 'lineno': 41, 'classname': 'MarianTokenizer', 'endline': 81, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_translation_batch', 'complexity': 5, 'lineno': 125, 'classname': 'MarianTokenizer', 'endline': 170, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 5, 'lineno': 176, 'classname': 'MarianTokenizer', 'endline': 187, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'MarianTokenizer', 'complexity': 3, 'lineno': 22, 'endline': 223, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 8, 'lineno': 41, 'classname': 'MarianTokenizer', 'endline': 81, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_setup_normalizer', 'complexity': 2, 'lineno': 83, 'classname': 'MarianTokenizer', 'endline': 90, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'normalize', 'complexity': 2, 'lineno': 92, 'classname': 'MarianTokenizer', 'endline': 94, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 96, 'classname': 'MarianTokenizer', 'endline': 97, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'remove_language_code', 'complexity': 2, 'lineno': 99, 'classname': 'MarianTokenizer', 'endline': 103, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 1, 'lineno': 105, 'classname': 'MarianTokenizer', 'endline': 108, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 110, 'classname': 'MarianTokenizer', 'endline': 112, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 114, 'classname': 'MarianTokenizer', 'endline': 116, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 118, 'classname': 'MarianTokenizer', 'endline': 123, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_translation_batch', 'complexity': 5, 'lineno': 125, 'classname': 'MarianTokenizer', 'endline': 170, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 173, 'classname': 'MarianTokenizer', 'endline': 174, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 5, 'lineno': 176, 'classname': 'MarianTokenizer', 'endline': 187, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 189, 'classname': 'MarianTokenizer', 'endline': 192, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getstate__', 'complexity': 2, 'lineno': 194, 'classname': 'MarianTokenizer', 'endline': 197, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__setstate__', 'complexity': 2, 'lineno': 199, 'classname': 'MarianTokenizer', 'endline': 203, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_special_tokens_to_add', 'complexity': 1, 'lineno': 205, 'classname': 'MarianTokenizer', 'endline': 207, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_special_token_mask', 'complexity': 3, 'lineno': 209, 'classname': 'MarianTokenizer', 'endline': 212, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 3, 'lineno': 214, 'classname': 'MarianTokenizer', 'endline': 223, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_special_token_mask', 'complexity': 3, 'lineno': 209, 'classname': 'MarianTokenizer', 'endline': 212, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 3, 'lineno': 214, 'classname': 'MarianTokenizer', 'endline': 223, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_setup_normalizer', 'complexity': 2, 'lineno': 83, 'classname': 'MarianTokenizer', 'endline': 90, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'normalize', 'complexity': 2, 'lineno': 92, 'classname': 'MarianTokenizer', 'endline': 94, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'remove_language_code', 'complexity': 2, 'lineno': 99, 'classname': 'MarianTokenizer', 'endline': 103, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 118, 'classname': 'MarianTokenizer', 'endline': 123, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getstate__', 'complexity': 2, 'lineno': 194, 'classname': 'MarianTokenizer', 'endline': 197, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__setstate__', 'complexity': 2, 'lineno': 199, 'classname': 'MarianTokenizer', 'endline': 203, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'load_spm', 'complexity': 1, 'lineno': 226, 'endline': 229, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'save_json', 'complexity': 1, 'lineno': 232, 'endline': 234, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'load_json', 'complexity': 1, 'lineno': 237, 'endline': 239, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 96, 'classname': 'MarianTokenizer', 'endline': 97, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 1, 'lineno': 105, 'classname': 'MarianTokenizer', 'endline': 108, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 110, 'classname': 'MarianTokenizer', 'endline': 112, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 114, 'classname': 'MarianTokenizer', 'endline': 116, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 173, 'classname': 'MarianTokenizer', 'endline': 174, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 189, 'classname': 'MarianTokenizer', 'endline': 192, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_special_tokens_to_add', 'complexity': 1, 'lineno': 205, 'classname': 'MarianTokenizer', 'endline': 207, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_mobilebert.py': [{'type': 'class', 'rank': 'A', 'name': 'MobileBertTokenizer', 'complexity': 1, 'lineno': 38, 'endline': 52, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'MobileBertTokenizerFast', 'complexity': 1, 'lineno': 55, 'endline': 69, 'col_offset': 0, 'methods': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_openai.py': [{'type': 'method', 'rank': 'C', 'name': 'bpe', 'complexity': 13, 'lineno': 131, 'classname': 'OpenAIGPTTokenizer', 'endline': 173, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_tokenize', 'complexity': 6, 'lineno': 175, 'classname': 'OpenAIGPTTokenizer', 'endline': 188, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'OpenAIGPTTokenizer', 'complexity': 4, 'lineno': 76, 'endline': 236, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 4, 'lineno': 100, 'classname': 'OpenAIGPTTokenizer', 'endline': 122, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 125, 'classname': 'OpenAIGPTTokenizer', 'endline': 126, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 128, 'classname': 'OpenAIGPTTokenizer', 'endline': 129, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'bpe', 'complexity': 13, 'lineno': 131, 'classname': 'OpenAIGPTTokenizer', 'endline': 173, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_tokenize', 'complexity': 6, 'lineno': 175, 'classname': 'OpenAIGPTTokenizer', 'endline': 188, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 190, 'classname': 'OpenAIGPTTokenizer', 'endline': 192, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 194, 'classname': 'OpenAIGPTTokenizer', 'endline': 196, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 198, 'classname': 'OpenAIGPTTokenizer', 'endline': 201, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 4, 'lineno': 203, 'classname': 'OpenAIGPTTokenizer', 'endline': 236, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 4, 'lineno': 100, 'classname': 'OpenAIGPTTokenizer', 'endline': 122, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 4, 'lineno': 203, 'classname': 'OpenAIGPTTokenizer', 'endline': 236, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'get_pairs', 'complexity': 2, 'lineno': 47, 'endline': 57, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'OpenAIGPTTokenizerFast', 'complexity': 2, 'lineno': 239, 'endline': 269, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 265, 'classname': 'OpenAIGPTTokenizerFast', 'endline': 269, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'text_standardize', 'complexity': 1, 'lineno': 60, 'endline': 73, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 125, 'classname': 'OpenAIGPTTokenizer', 'endline': 126, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 128, 'classname': 'OpenAIGPTTokenizer', 'endline': 129, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 190, 'classname': 'OpenAIGPTTokenizer', 'endline': 192, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 194, 'classname': 'OpenAIGPTTokenizer', 'endline': 196, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 198, 'classname': 'OpenAIGPTTokenizer', 'endline': 201, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 265, 'classname': 'OpenAIGPTTokenizerFast', 'endline': 269, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_reformer.py': [{'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 3, 'lineno': 168, 'classname': 'ReformerTokenizer', 'endline': 180, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ReformerTokenizer', 'complexity': 2, 'lineno': 54, 'endline': 180, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 86, 'classname': 'ReformerTokenizer', 'endline': 115, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 118, 'classname': 'ReformerTokenizer', 'endline': 119, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 2, 'lineno': 121, 'classname': 'ReformerTokenizer', 'endline': 124, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getstate__', 'complexity': 1, 'lineno': 126, 'classname': 'ReformerTokenizer', 'endline': 129, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__setstate__', 'complexity': 2, 'lineno': 131, 'classname': 'ReformerTokenizer', 'endline': 142, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 2, 'lineno': 144, 'classname': 'ReformerTokenizer', 'endline': 151, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 153, 'classname': 'ReformerTokenizer', 'endline': 155, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 2, 'lineno': 157, 'classname': 'ReformerTokenizer', 'endline': 161, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 163, 'classname': 'ReformerTokenizer', 'endline': 166, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 3, 'lineno': 168, 'classname': 'ReformerTokenizer', 'endline': 180, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 86, 'classname': 'ReformerTokenizer', 'endline': 115, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 2, 'lineno': 121, 'classname': 'ReformerTokenizer', 'endline': 124, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__setstate__', 'complexity': 2, 'lineno': 131, 'classname': 'ReformerTokenizer', 'endline': 142, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 2, 'lineno': 144, 'classname': 'ReformerTokenizer', 'endline': 151, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 2, 'lineno': 157, 'classname': 'ReformerTokenizer', 'endline': 161, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 118, 'classname': 'ReformerTokenizer', 'endline': 119, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getstate__', 'complexity': 1, 'lineno': 126, 'classname': 'ReformerTokenizer', 'endline': 129, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 153, 'classname': 'ReformerTokenizer', 'endline': 155, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 163, 'classname': 'ReformerTokenizer', 'endline': 166, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_retribert.py': [{'type': 'class', 'rank': 'A', 'name': 'RetriBertTokenizer', 'complexity': 1, 'lineno': 43, 'endline': 58, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'RetriBertTokenizerFast', 'complexity': 1, 'lineno': 61, 'endline': 76, 'col_offset': 0, 'methods': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_roberta.py': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 8, 'lineno': 125, 'classname': 'RobertaTokenizer', 'endline': 162, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'RobertaTokenizer', 'complexity': 5, 'lineno': 63, 'endline': 249, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 8, 'lineno': 125, 'classname': 'RobertaTokenizer', 'endline': 162, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 165, 'classname': 'RobertaTokenizer', 'endline': 189, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 5, 'lineno': 191, 'classname': 'RobertaTokenizer', 'endline': 219, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 221, 'classname': 'RobertaTokenizer', 'endline': 243, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_for_tokenization', 'complexity': 5, 'lineno': 245, 'classname': 'RobertaTokenizer', 'endline': 249, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 5, 'lineno': 191, 'classname': 'RobertaTokenizer', 'endline': 219, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_for_tokenization', 'complexity': 5, 'lineno': 245, 'classname': 'RobertaTokenizer', 'endline': 249, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'RobertaTokenizerFast', 'complexity': 3, 'lineno': 252, 'endline': 373, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 299, 'classname': 'RobertaTokenizerFast', 'endline': 341, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 344, 'classname': 'RobertaTokenizerFast', 'endline': 349, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 351, 'classname': 'RobertaTokenizerFast', 'endline': 373, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 165, 'classname': 'RobertaTokenizer', 'endline': 189, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 221, 'classname': 'RobertaTokenizer', 'endline': 243, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 299, 'classname': 'RobertaTokenizerFast', 'endline': 341, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 344, 'classname': 'RobertaTokenizerFast', 'endline': 349, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 351, 'classname': 'RobertaTokenizerFast', 'endline': 373, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_t5.py': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 5, 'lineno': 99, 'classname': 'T5Tokenizer', 'endline': 137, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'T5Tokenizer', 'complexity': 3, 'lineno': 62, 'endline': 208, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 5, 'lineno': 99, 'classname': 'T5Tokenizer', 'endline': 137, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 140, 'classname': 'T5Tokenizer', 'endline': 141, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 2, 'lineno': 143, 'classname': 'T5Tokenizer', 'endline': 146, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getstate__', 'complexity': 1, 'lineno': 148, 'classname': 'T5Tokenizer', 'endline': 151, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__setstate__', 'complexity': 2, 'lineno': 153, 'classname': 'T5Tokenizer', 'endline': 164, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 2, 'lineno': 166, 'classname': 'T5Tokenizer', 'endline': 173, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 2, 'lineno': 175, 'classname': 'T5Tokenizer', 'endline': 181, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 2, 'lineno': 183, 'classname': 'T5Tokenizer', 'endline': 189, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 191, 'classname': 'T5Tokenizer', 'endline': 194, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 3, 'lineno': 196, 'classname': 'T5Tokenizer', 'endline': 208, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 3, 'lineno': 196, 'classname': 'T5Tokenizer', 'endline': 208, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 2, 'lineno': 143, 'classname': 'T5Tokenizer', 'endline': 146, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__setstate__', 'complexity': 2, 'lineno': 153, 'classname': 'T5Tokenizer', 'endline': 164, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 2, 'lineno': 166, 'classname': 'T5Tokenizer', 'endline': 173, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 2, 'lineno': 175, 'classname': 'T5Tokenizer', 'endline': 181, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 2, 'lineno': 183, 'classname': 'T5Tokenizer', 'endline': 189, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 140, 'classname': 'T5Tokenizer', 'endline': 141, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getstate__', 'complexity': 1, 'lineno': 148, 'classname': 'T5Tokenizer', 'endline': 151, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 191, 'classname': 'T5Tokenizer', 'endline': 194, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_transfo_xl.py': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 9, 'lineno': 86, 'classname': 'TransfoXLTokenizer', 'endline': 140, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': '_TransfoXLDelimiterLookupTokenizer', 'complexity': 9, 'lineno': 372, 'endline': 430, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 8, 'lineno': 373, 'classname': '_TransfoXLDelimiterLookupTokenizer', 'endline': 430, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'stream_iterator', 'complexity': 9, 'lineno': 576, 'classname': 'LMShuffledIterator', 'endline': 621, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'encode_file', 'complexity': 8, 'lineno': 233, 'classname': 'TransfoXLTokenizer', 'endline': 248, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 8, 'lineno': 373, 'classname': '_TransfoXLDelimiterLookupTokenizer', 'endline': 430, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'from_pretrained', 'complexity': 8, 'lineno': 665, 'classname': 'TransfoXLCorpus', 'endline': 706, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'get_iterator', 'complexity': 8, 'lineno': 749, 'classname': 'TransfoXLCorpus', 'endline': 763, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'get_lm_corpus', 'complexity': 7, 'lineno': 766, 'endline': 795, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'count_file', 'complexity': 7, 'lineno': 147, 'classname': 'TransfoXLTokenizer', 'endline': 161, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'encode_sents', 'complexity': 7, 'lineno': 250, 'classname': 'TransfoXLTokenizer', 'endline': 262, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'TransfoXLCorpus', 'complexity': 7, 'lineno': 663, 'endline': 763, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': 'from_pretrained', 'complexity': 8, 'lineno': 665, 'classname': 'TransfoXLCorpus', 'endline': 706, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 708, 'classname': 'TransfoXLCorpus', 'endline': 713, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'build_corpus', 'complexity': 7, 'lineno': 715, 'classname': 'TransfoXLCorpus', 'endline': 747, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'get_iterator', 'complexity': 8, 'lineno': 749, 'classname': 'TransfoXLCorpus', 'endline': 763, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'build_corpus', 'complexity': 7, 'lineno': 715, 'classname': 'TransfoXLCorpus', 'endline': 747, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'count_sents', 'complexity': 6, 'lineno': 163, 'classname': 'TransfoXLTokenizer', 'endline': 172, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_vocab', 'complexity': 5, 'lineno': 213, 'classname': 'TransfoXLTokenizer', 'endline': 231, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 5, 'lineno': 307, 'classname': 'TransfoXLTokenizer', 'endline': 322, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 5, 'lineno': 339, 'classname': 'TransfoXLTokenizer', 'endline': 356, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'LMShuffledIterator', 'complexity': 5, 'lineno': 554, 'endline': 628, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 555, 'classname': 'LMShuffledIterator', 'endline': 566, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_sent_stream', 'complexity': 3, 'lineno': 568, 'classname': 'LMShuffledIterator', 'endline': 574, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'stream_iterator', 'complexity': 9, 'lineno': 576, 'classname': 'LMShuffledIterator', 'endline': 621, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__iter__', 'complexity': 2, 'lineno': 623, 'classname': 'LMShuffledIterator', 'endline': 628, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TransfoXLTokenizer', 'complexity': 4, 'lineno': 73, 'endline': 369, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 9, 'lineno': 86, 'classname': 'TransfoXLTokenizer', 'endline': 140, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_compile_space_around_punctuation_pattern', 'complexity': 1, 'lineno': 142, 'classname': 'TransfoXLTokenizer', 'endline': 145, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'count_file', 'complexity': 7, 'lineno': 147, 'classname': 'TransfoXLTokenizer', 'endline': 161, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'count_sents', 'complexity': 6, 'lineno': 163, 'classname': 'TransfoXLTokenizer', 'endline': 172, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_build_from_file', 'complexity': 4, 'lineno': 174, 'classname': 'TransfoXLTokenizer', 'endline': 187, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 2, 'lineno': 189, 'classname': 'TransfoXLTokenizer', 'endline': 211, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_vocab', 'complexity': 5, 'lineno': 213, 'classname': 'TransfoXLTokenizer', 'endline': 231, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'encode_file', 'complexity': 8, 'lineno': 233, 'classname': 'TransfoXLTokenizer', 'endline': 248, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'encode_sents', 'complexity': 7, 'lineno': 250, 'classname': 'TransfoXLTokenizer', 'endline': 262, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'add_special', 'complexity': 2, 'lineno': 264, 'classname': 'TransfoXLTokenizer', 'endline': 268, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'add_symbol', 'complexity': 2, 'lineno': 270, 'classname': 'TransfoXLTokenizer', 'endline': 273, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'move_added_token', 'complexity': 4, 'lineno': 275, 'classname': 'TransfoXLTokenizer', 'endline': 300, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 2, 'lineno': 302, 'classname': 'TransfoXLTokenizer', 'endline': 305, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 5, 'lineno': 307, 'classname': 'TransfoXLTokenizer', 'endline': 322, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 324, 'classname': 'TransfoXLTokenizer', 'endline': 327, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_to_tensor', 'complexity': 1, 'lineno': 329, 'classname': 'TransfoXLTokenizer', 'endline': 330, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 333, 'classname': 'TransfoXLTokenizer', 'endline': 334, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 336, 'classname': 'TransfoXLTokenizer', 'endline': 337, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 5, 'lineno': 339, 'classname': 'TransfoXLTokenizer', 'endline': 356, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_for_tokenization', 'complexity': 3, 'lineno': 358, 'classname': 'TransfoXLTokenizer', 'endline': 369, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_build_from_file', 'complexity': 4, 'lineno': 174, 'classname': 'TransfoXLTokenizer', 'endline': 187, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'move_added_token', 'complexity': 4, 'lineno': 275, 'classname': 'TransfoXLTokenizer', 'endline': 300, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_varlen_iter', 'complexity': 4, 'lineno': 538, 'classname': 'LMOrderedIterator', 'endline': 548, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'LMMultiFileIterator', 'complexity': 4, 'lineno': 631, 'endline': 660, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 632, 'classname': 'LMMultiFileIterator', 'endline': 642, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_sent_stream', 'complexity': 2, 'lineno': 644, 'classname': 'LMMultiFileIterator', 'endline': 650, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__iter__', 'complexity': 4, 'lineno': 652, 'classname': 'LMMultiFileIterator', 'endline': 660, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__iter__', 'complexity': 4, 'lineno': 652, 'classname': 'LMMultiFileIterator', 'endline': 660, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_for_tokenization', 'complexity': 3, 'lineno': 358, 'classname': 'TransfoXLTokenizer', 'endline': 369, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TransfoXLTokenizerFast', 'complexity': 3, 'lineno': 433, 'endline': 492, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 450, 'classname': 'TransfoXLTokenizerFast', 'endline': 483, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_pretrained', 'complexity': 1, 'lineno': 486, 'classname': 'TransfoXLTokenizerFast', 'endline': 492, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'LMOrderedIterator', 'complexity': 3, 'lineno': 495, 'endline': 551, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 496, 'classname': 'LMOrderedIterator', 'endline': 516, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_batch', 'complexity': 2, 'lineno': 518, 'classname': 'LMOrderedIterator', 'endline': 532, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_fixlen_iter', 'complexity': 2, 'lineno': 534, 'classname': 'LMOrderedIterator', 'endline': 536, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_varlen_iter', 'complexity': 4, 'lineno': 538, 'classname': 'LMOrderedIterator', 'endline': 548, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__iter__', 'complexity': 1, 'lineno': 550, 'classname': 'LMOrderedIterator', 'endline': 551, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'get_sent_stream', 'complexity': 3, 'lineno': 568, 'classname': 'LMShuffledIterator', 'endline': 574, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 2, 'lineno': 189, 'classname': 'TransfoXLTokenizer', 'endline': 211, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'add_special', 'complexity': 2, 'lineno': 264, 'classname': 'TransfoXLTokenizer', 'endline': 268, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'add_symbol', 'complexity': 2, 'lineno': 270, 'classname': 'TransfoXLTokenizer', 'endline': 273, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 2, 'lineno': 302, 'classname': 'TransfoXLTokenizer', 'endline': 305, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 450, 'classname': 'TransfoXLTokenizerFast', 'endline': 483, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 496, 'classname': 'LMOrderedIterator', 'endline': 516, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_batch', 'complexity': 2, 'lineno': 518, 'classname': 'LMOrderedIterator', 'endline': 532, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_fixlen_iter', 'complexity': 2, 'lineno': 534, 'classname': 'LMOrderedIterator', 'endline': 536, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 555, 'classname': 'LMShuffledIterator', 'endline': 566, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__iter__', 'complexity': 2, 'lineno': 623, 'classname': 'LMShuffledIterator', 'endline': 628, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 632, 'classname': 'LMMultiFileIterator', 'endline': 642, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_sent_stream', 'complexity': 2, 'lineno': 644, 'classname': 'LMMultiFileIterator', 'endline': 650, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_compile_space_around_punctuation_pattern', 'complexity': 1, 'lineno': 142, 'classname': 'TransfoXLTokenizer', 'endline': 145, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 324, 'classname': 'TransfoXLTokenizer', 'endline': 327, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_to_tensor', 'complexity': 1, 'lineno': 329, 'classname': 'TransfoXLTokenizer', 'endline': 330, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 333, 'classname': 'TransfoXLTokenizer', 'endline': 334, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 336, 'classname': 'TransfoXLTokenizer', 'endline': 337, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_pretrained', 'complexity': 1, 'lineno': 486, 'classname': 'TransfoXLTokenizerFast', 'endline': 492, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__iter__', 'complexity': 1, 'lineno': 550, 'classname': 'LMOrderedIterator', 'endline': 551, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 708, 'classname': 'TransfoXLCorpus', 'endline': 713, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_utils.py': [{'type': 'method', 'rank': 'C', 'name': '_add_tokens', 'complexity': 13, 'lineno': 185, 'classname': 'PreTrainedTokenizer', 'endline': 235, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': '_is_punctuation', 'complexity': 10, 'lineno': 71, 'endline': 83, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'decode', 'complexity': 8, 'lineno': 685, 'classname': 'PreTrainedTokenizer', 'endline': 713, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'tokenize', 'complexity': 7, 'lineno': 256, 'classname': 'PreTrainedTokenizer', 'endline': 365, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'C', 'name': 'split_on_token', 'complexity': 19, 'lineno': 284, 'endline': 335, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'split_on_tokens', 'complexity': 8, 'lineno': 337, 'endline': 358, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '_batch_encode_plus', 'complexity': 7, 'lineno': 476, 'classname': 'PreTrainedTokenizer', 'endline': 557, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'B', 'name': 'get_input_ids', 'complexity': 10, 'lineno': 503, 'endline': 517, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'convert_ids_to_tokens', 'complexity': 7, 'lineno': 650, 'classname': 'PreTrainedTokenizer', 'endline': 673, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': '_is_whitespace', 'complexity': 6, 'lineno': 47, 'endline': 56, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': '_is_control', 'complexity': 5, 'lineno': 59, 'endline': 68, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'PreTrainedTokenizer', 'complexity': 4, 'lineno': 98, 'endline': 723, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 156, 'classname': 'PreTrainedTokenizer', 'endline': 163, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_fast', 'complexity': 1, 'lineno': 166, 'classname': 'PreTrainedTokenizer', 'endline': 167, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 170, 'classname': 'PreTrainedTokenizer', 'endline': 172, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 174, 'classname': 'PreTrainedTokenizer', 'endline': 176, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_added_vocab', 'complexity': 1, 'lineno': 178, 'classname': 'PreTrainedTokenizer', 'endline': 179, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 181, 'classname': 'PreTrainedTokenizer', 'endline': 183, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '_add_tokens', 'complexity': 13, 'lineno': 185, 'classname': 'PreTrainedTokenizer', 'endline': 235, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_special_tokens_to_add', 'complexity': 2, 'lineno': 237, 'classname': 'PreTrainedTokenizer', 'endline': 254, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'tokenize', 'complexity': 7, 'lineno': 256, 'classname': 'PreTrainedTokenizer', 'endline': 365, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'C', 'name': 'split_on_token', 'complexity': 19, 'lineno': 284, 'endline': 335, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'split_on_tokens', 'complexity': 8, 'lineno': 337, 'endline': 358, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 1, 'lineno': 367, 'classname': 'PreTrainedTokenizer', 'endline': 374, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_ids', 'complexity': 4, 'lineno': 376, 'classname': 'PreTrainedTokenizer', 'endline': 389, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id_with_added_voc', 'complexity': 3, 'lineno': 391, 'classname': 'PreTrainedTokenizer', 'endline': 397, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 399, 'classname': 'PreTrainedTokenizer', 'endline': 400, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_encode_plus', 'complexity': 3, 'lineno': 402, 'classname': 'PreTrainedTokenizer', 'endline': 473, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'C', 'name': 'get_input_ids', 'complexity': 11, 'lineno': 423, 'endline': 442, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '_batch_encode_plus', 'complexity': 7, 'lineno': 476, 'classname': 'PreTrainedTokenizer', 'endline': 557, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'B', 'name': 'get_input_ids', 'complexity': 10, 'lineno': 503, 'endline': 517, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_batch_prepare_for_model', 'complexity': 4, 'lineno': 560, 'classname': 'PreTrainedTokenizer', 'endline': 621, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_for_tokenization', 'complexity': 1, 'lineno': 623, 'classname': 'PreTrainedTokenizer', 'endline': 629, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 2, 'lineno': 631, 'classname': 'PreTrainedTokenizer', 'endline': 648, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'convert_ids_to_tokens', 'complexity': 7, 'lineno': 650, 'classname': 'PreTrainedTokenizer', 'endline': 673, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 675, 'classname': 'PreTrainedTokenizer', 'endline': 676, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 678, 'classname': 'PreTrainedTokenizer', 'endline': 683, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'decode', 'complexity': 8, 'lineno': 685, 'classname': 'PreTrainedTokenizer', 'endline': 713, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 1, 'lineno': 715, 'classname': 'PreTrainedTokenizer', 'endline': 723, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_ids', 'complexity': 4, 'lineno': 376, 'classname': 'PreTrainedTokenizer', 'endline': 389, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_batch_prepare_for_model', 'complexity': 4, 'lineno': 560, 'classname': 'PreTrainedTokenizer', 'endline': 621, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id_with_added_voc', 'complexity': 3, 'lineno': 391, 'classname': 'PreTrainedTokenizer', 'endline': 397, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_encode_plus', 'complexity': 3, 'lineno': 402, 'classname': 'PreTrainedTokenizer', 'endline': 473, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'C', 'name': 'get_input_ids', 'complexity': 11, 'lineno': 423, 'endline': 442, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'num_special_tokens_to_add', 'complexity': 2, 'lineno': 237, 'classname': 'PreTrainedTokenizer', 'endline': 254, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 2, 'lineno': 631, 'classname': 'PreTrainedTokenizer', 'endline': 648, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': '_is_end_of_word', 'complexity': 1, 'lineno': 86, 'endline': 89, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': '_is_start_of_word', 'complexity': 1, 'lineno': 92, 'endline': 95, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 156, 'classname': 'PreTrainedTokenizer', 'endline': 163, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_fast', 'complexity': 1, 'lineno': 166, 'classname': 'PreTrainedTokenizer', 'endline': 167, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 170, 'classname': 'PreTrainedTokenizer', 'endline': 172, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 174, 'classname': 'PreTrainedTokenizer', 'endline': 176, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_added_vocab', 'complexity': 1, 'lineno': 178, 'classname': 'PreTrainedTokenizer', 'endline': 179, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 181, 'classname': 'PreTrainedTokenizer', 'endline': 183, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 1, 'lineno': 367, 'classname': 'PreTrainedTokenizer', 'endline': 374, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 399, 'classname': 'PreTrainedTokenizer', 'endline': 400, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'prepare_for_tokenization', 'complexity': 1, 'lineno': 623, 'classname': 'PreTrainedTokenizer', 'endline': 629, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 675, 'classname': 'PreTrainedTokenizer', 'endline': 676, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 678, 'classname': 'PreTrainedTokenizer', 'endline': 683, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 1, 'lineno': 715, 'classname': 'PreTrainedTokenizer', 'endline': 723, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_utils_base.py': [{'type': 'method', 'rank': 'E', 'name': '_from_pretrained', 'complexity': 34, 'lineno': 1143, 'classname': 'PreTrainedTokenizerBase', 'endline': 1332, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'E', 'name': '_get_padding_truncation_strategies', 'complexity': 33, 'lineno': 1433, 'classname': 'PreTrainedTokenizerBase', 'endline': 1548, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'prepare_for_model', 'complexity': 23, 'lineno': 1979, 'classname': 'PreTrainedTokenizerBase', 'endline': 2101, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'pad', 'complexity': 17, 'lineno': 1864, 'classname': 'PreTrainedTokenizerBase', 'endline': 1962, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '_pad', 'complexity': 17, 'lineno': 2183, 'classname': 'PreTrainedTokenizerBase', 'endline': 2251, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'truncate_sequences', 'complexity': 14, 'lineno': 2103, 'classname': 'PreTrainedTokenizerBase', 'endline': 2181, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'convert_to_tensors', 'complexity': 13, 'lineno': 476, 'classname': 'BatchEncoding', 'endline': 519, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__call__', 'complexity': 10, 'lineno': 1551, 'classname': 'PreTrainedTokenizerBase', 'endline': 1669, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'add_special_tokens', 'complexity': 8, 'lineno': 619, 'classname': 'SpecialTokensMixin', 'endline': 678, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'PreTrainedTokenizerBase', 'complexity': 7, 'lineno': 1015, 'endline': 2317, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 1029, 'classname': 'PreTrainedTokenizerBase', 'endline': 1046, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_len', 'complexity': 1, 'lineno': 1049, 'classname': 'PreTrainedTokenizerBase', 'endline': 1053, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_len_single_sentence', 'complexity': 1, 'lineno': 1056, 'classname': 'PreTrainedTokenizerBase', 'endline': 1057, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_len_sentences_pair', 'complexity': 1, 'lineno': 1060, 'classname': 'PreTrainedTokenizerBase', 'endline': 1061, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_len_single_sentence', 'complexity': 3, 'lineno': 1064, 'classname': 'PreTrainedTokenizerBase', 'endline': 1072, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_len_sentences_pair', 'complexity': 3, 'lineno': 1076, 'classname': 'PreTrainedTokenizerBase', 'endline': 1084, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 1, 'lineno': 1088, 'classname': 'PreTrainedTokenizerBase', 'endline': 1140, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'E', 'name': '_from_pretrained', 'complexity': 34, 'lineno': 1143, 'classname': 'PreTrainedTokenizerBase', 'endline': 1332, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'save_pretrained', 'complexity': 7, 'lineno': 1334, 'classname': 'PreTrainedTokenizerBase', 'endline': 1381, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'encode', 'complexity': 1, 'lineno': 1389, 'classname': 'PreTrainedTokenizerBase', 'endline': 1428, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_special_tokens_to_add', 'complexity': 1, 'lineno': 1430, 'classname': 'PreTrainedTokenizerBase', 'endline': 1431, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'E', 'name': '_get_padding_truncation_strategies', 'complexity': 33, 'lineno': 1433, 'classname': 'PreTrainedTokenizerBase', 'endline': 1548, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__call__', 'complexity': 10, 'lineno': 1551, 'classname': 'PreTrainedTokenizerBase', 'endline': 1669, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'encode_plus', 'complexity': 1, 'lineno': 1673, 'classname': 'PreTrainedTokenizerBase', 'endline': 1737, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_encode_plus', 'complexity': 1, 'lineno': 1740, 'classname': 'PreTrainedTokenizerBase', 'endline': 1761, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'batch_encode_plus', 'complexity': 1, 'lineno': 1764, 'classname': 'PreTrainedTokenizerBase', 'endline': 1832, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_batch_encode_plus', 'complexity': 1, 'lineno': 1835, 'classname': 'PreTrainedTokenizerBase', 'endline': 1862, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'pad', 'complexity': 17, 'lineno': 1864, 'classname': 'PreTrainedTokenizerBase', 'endline': 1962, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 1964, 'classname': 'PreTrainedTokenizerBase', 'endline': 1967, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 1969, 'classname': 'PreTrainedTokenizerBase', 'endline': 1976, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'prepare_for_model', 'complexity': 23, 'lineno': 1979, 'classname': 'PreTrainedTokenizerBase', 'endline': 2101, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'truncate_sequences', 'complexity': 14, 'lineno': 2103, 'classname': 'PreTrainedTokenizerBase', 'endline': 2181, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '_pad', 'complexity': 17, 'lineno': 2183, 'classname': 'PreTrainedTokenizerBase', 'endline': 2251, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'batch_decode', 'complexity': 2, 'lineno': 2253, 'classname': 'PreTrainedTokenizerBase', 'endline': 2254, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'decode', 'complexity': 1, 'lineno': 2256, 'classname': 'PreTrainedTokenizerBase', 'endline': 2269, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 4, 'lineno': 2271, 'classname': 'PreTrainedTokenizerBase', 'endline': 2299, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'clean_up_tokenization', 'complexity': 1, 'lineno': 2302, 'classname': 'PreTrainedTokenizerBase', 'endline': 2317, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'save_pretrained', 'complexity': 7, 'lineno': 1334, 'classname': 'PreTrainedTokenizerBase', 'endline': 1381, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 6, 'lineno': 583, 'classname': 'SpecialTokensMixin', 'endline': 607, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'token_to_word', 'complexity': 5, 'lineno': 231, 'classname': 'BatchEncoding', 'endline': 270, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'word_to_tokens', 'complexity': 5, 'lineno': 272, 'classname': 'BatchEncoding', 'endline': 319, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'additional_special_tokens', 'complexity': 4, 'lineno': 774, 'classname': 'SpecialTokensMixin', 'endline': 779, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 4, 'lineno': 2271, 'classname': 'PreTrainedTokenizerBase', 'endline': 2299, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BatchEncoding', 'complexity': 3, 'lineno': 129, 'endline': 525, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 145, 'classname': 'BatchEncoding', 'endline': 159, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_fast', 'complexity': 1, 'lineno': 162, 'classname': 'BatchEncoding', 'endline': 167, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getitem__', 'complexity': 3, 'lineno': 169, 'classname': 'BatchEncoding', 'endline': 179, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getattr__', 'complexity': 2, 'lineno': 183, 'classname': 'BatchEncoding', 'endline': 187, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getstate__', 'complexity': 1, 'lineno': 189, 'classname': 'BatchEncoding', 'endline': 190, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__setstate__', 'complexity': 3, 'lineno': 192, 'classname': 'BatchEncoding', 'endline': 197, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'keys', 'complexity': 1, 'lineno': 199, 'classname': 'BatchEncoding', 'endline': 200, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'values', 'complexity': 1, 'lineno': 202, 'classname': 'BatchEncoding', 'endline': 203, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'items', 'complexity': 1, 'lineno': 205, 'classname': 'BatchEncoding', 'endline': 206, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'encodings', 'complexity': 1, 'lineno': 213, 'classname': 'BatchEncoding', 'endline': 219, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tokens', 'complexity': 2, 'lineno': 221, 'classname': 'BatchEncoding', 'endline': 224, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'words', 'complexity': 2, 'lineno': 226, 'classname': 'BatchEncoding', 'endline': 229, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'token_to_word', 'complexity': 5, 'lineno': 231, 'classname': 'BatchEncoding', 'endline': 270, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'word_to_tokens', 'complexity': 5, 'lineno': 272, 'classname': 'BatchEncoding', 'endline': 319, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'token_to_chars', 'complexity': 3, 'lineno': 321, 'classname': 'BatchEncoding', 'endline': 360, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'char_to_token', 'complexity': 3, 'lineno': 362, 'classname': 'BatchEncoding', 'endline': 396, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'word_to_chars', 'complexity': 3, 'lineno': 398, 'classname': 'BatchEncoding', 'endline': 437, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'char_to_word', 'complexity': 3, 'lineno': 439, 'classname': 'BatchEncoding', 'endline': 474, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'convert_to_tensors', 'complexity': 13, 'lineno': 476, 'classname': 'BatchEncoding', 'endline': 519, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to', 'complexity': 2, 'lineno': 522, 'classname': 'BatchEncoding', 'endline': 525, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__getitem__', 'complexity': 3, 'lineno': 169, 'classname': 'BatchEncoding', 'endline': 179, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__setstate__', 'complexity': 3, 'lineno': 192, 'classname': 'BatchEncoding', 'endline': 197, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'token_to_chars', 'complexity': 3, 'lineno': 321, 'classname': 'BatchEncoding', 'endline': 360, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'char_to_token', 'complexity': 3, 'lineno': 362, 'classname': 'BatchEncoding', 'endline': 396, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'word_to_chars', 'complexity': 3, 'lineno': 398, 'classname': 'BatchEncoding', 'endline': 437, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'char_to_word', 'complexity': 3, 'lineno': 439, 'classname': 'BatchEncoding', 'endline': 474, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'SpecialTokensMixin', 'complexity': 3, 'lineno': 565, 'endline': 932, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 6, 'lineno': 583, 'classname': 'SpecialTokensMixin', 'endline': 607, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'sanitize_special_tokens', 'complexity': 1, 'lineno': 610, 'classname': 'SpecialTokensMixin', 'endline': 617, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'add_special_tokens', 'complexity': 8, 'lineno': 619, 'classname': 'SpecialTokensMixin', 'endline': 678, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'add_tokens', 'complexity': 3, 'lineno': 680, 'classname': 'SpecialTokensMixin', 'endline': 715, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'bos_token', 'complexity': 3, 'lineno': 718, 'classname': 'SpecialTokensMixin', 'endline': 723, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'eos_token', 'complexity': 3, 'lineno': 726, 'classname': 'SpecialTokensMixin', 'endline': 731, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'unk_token', 'complexity': 3, 'lineno': 734, 'classname': 'SpecialTokensMixin', 'endline': 739, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'sep_token', 'complexity': 3, 'lineno': 742, 'classname': 'SpecialTokensMixin', 'endline': 747, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'pad_token', 'complexity': 3, 'lineno': 750, 'classname': 'SpecialTokensMixin', 'endline': 755, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'cls_token', 'complexity': 3, 'lineno': 758, 'classname': 'SpecialTokensMixin', 'endline': 763, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'mask_token', 'complexity': 3, 'lineno': 766, 'classname': 'SpecialTokensMixin', 'endline': 771, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'additional_special_tokens', 'complexity': 4, 'lineno': 774, 'classname': 'SpecialTokensMixin', 'endline': 779, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'bos_token', 'complexity': 1, 'lineno': 782, 'classname': 'SpecialTokensMixin', 'endline': 783, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'eos_token', 'complexity': 1, 'lineno': 786, 'classname': 'SpecialTokensMixin', 'endline': 787, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'unk_token', 'complexity': 1, 'lineno': 790, 'classname': 'SpecialTokensMixin', 'endline': 791, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'sep_token', 'complexity': 1, 'lineno': 794, 'classname': 'SpecialTokensMixin', 'endline': 795, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'pad_token', 'complexity': 1, 'lineno': 798, 'classname': 'SpecialTokensMixin', 'endline': 799, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'cls_token', 'complexity': 1, 'lineno': 802, 'classname': 'SpecialTokensMixin', 'endline': 803, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'mask_token', 'complexity': 1, 'lineno': 806, 'classname': 'SpecialTokensMixin', 'endline': 807, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'additional_special_tokens', 'complexity': 1, 'lineno': 810, 'classname': 'SpecialTokensMixin', 'endline': 811, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'bos_token_id', 'complexity': 2, 'lineno': 814, 'classname': 'SpecialTokensMixin', 'endline': 818, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'eos_token_id', 'complexity': 2, 'lineno': 821, 'classname': 'SpecialTokensMixin', 'endline': 825, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'unk_token_id', 'complexity': 2, 'lineno': 828, 'classname': 'SpecialTokensMixin', 'endline': 832, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'sep_token_id', 'complexity': 2, 'lineno': 835, 'classname': 'SpecialTokensMixin', 'endline': 839, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'pad_token_id', 'complexity': 2, 'lineno': 842, 'classname': 'SpecialTokensMixin', 'endline': 846, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'pad_token_type_id', 'complexity': 1, 'lineno': 849, 'classname': 'SpecialTokensMixin', 'endline': 851, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'cls_token_id', 'complexity': 2, 'lineno': 854, 'classname': 'SpecialTokensMixin', 'endline': 858, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'mask_token_id', 'complexity': 2, 'lineno': 861, 'classname': 'SpecialTokensMixin', 'endline': 865, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'additional_special_tokens_ids', 'complexity': 1, 'lineno': 868, 'classname': 'SpecialTokensMixin', 'endline': 870, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'special_tokens_map', 'complexity': 3, 'lineno': 873, 'classname': 'SpecialTokensMixin', 'endline': 884, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'special_tokens_map_extended', 'complexity': 3, 'lineno': 887, 'classname': 'SpecialTokensMixin', 'endline': 899, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'all_special_tokens', 'complexity': 2, 'lineno': 902, 'classname': 'SpecialTokensMixin', 'endline': 909, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'all_special_tokens_extended', 'complexity': 3, 'lineno': 912, 'classname': 'SpecialTokensMixin', 'endline': 923, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'all_special_ids', 'complexity': 1, 'lineno': 926, 'classname': 'SpecialTokensMixin', 'endline': 932, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'add_tokens', 'complexity': 3, 'lineno': 680, 'classname': 'SpecialTokensMixin', 'endline': 715, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'bos_token', 'complexity': 3, 'lineno': 718, 'classname': 'SpecialTokensMixin', 'endline': 723, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'eos_token', 'complexity': 3, 'lineno': 726, 'classname': 'SpecialTokensMixin', 'endline': 731, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'unk_token', 'complexity': 3, 'lineno': 734, 'classname': 'SpecialTokensMixin', 'endline': 739, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'sep_token', 'complexity': 3, 'lineno': 742, 'classname': 'SpecialTokensMixin', 'endline': 747, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'pad_token', 'complexity': 3, 'lineno': 750, 'classname': 'SpecialTokensMixin', 'endline': 755, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'cls_token', 'complexity': 3, 'lineno': 758, 'classname': 'SpecialTokensMixin', 'endline': 763, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'mask_token', 'complexity': 3, 'lineno': 766, 'classname': 'SpecialTokensMixin', 'endline': 771, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'special_tokens_map', 'complexity': 3, 'lineno': 873, 'classname': 'SpecialTokensMixin', 'endline': 884, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'special_tokens_map_extended', 'complexity': 3, 'lineno': 887, 'classname': 'SpecialTokensMixin', 'endline': 899, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'all_special_tokens_extended', 'complexity': 3, 'lineno': 912, 'classname': 'SpecialTokensMixin', 'endline': 923, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 1029, 'classname': 'PreTrainedTokenizerBase', 'endline': 1046, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_len_single_sentence', 'complexity': 3, 'lineno': 1064, 'classname': 'PreTrainedTokenizerBase', 'endline': 1072, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_len_sentences_pair', 'complexity': 3, 'lineno': 1076, 'classname': 'PreTrainedTokenizerBase', 'endline': 1084, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ExplicitEnum', 'complexity': 2, 'lineno': 74, 'endline': 82, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '_missing_', 'complexity': 1, 'lineno': 79, 'classname': 'ExplicitEnum', 'endline': 82, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 145, 'classname': 'BatchEncoding', 'endline': 159, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getattr__', 'complexity': 2, 'lineno': 183, 'classname': 'BatchEncoding', 'endline': 187, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tokens', 'complexity': 2, 'lineno': 221, 'classname': 'BatchEncoding', 'endline': 224, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'words', 'complexity': 2, 'lineno': 226, 'classname': 'BatchEncoding', 'endline': 229, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to', 'complexity': 2, 'lineno': 522, 'classname': 'BatchEncoding', 'endline': 525, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'bos_token_id', 'complexity': 2, 'lineno': 814, 'classname': 'SpecialTokensMixin', 'endline': 818, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'eos_token_id', 'complexity': 2, 'lineno': 821, 'classname': 'SpecialTokensMixin', 'endline': 825, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'unk_token_id', 'complexity': 2, 'lineno': 828, 'classname': 'SpecialTokensMixin', 'endline': 832, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'sep_token_id', 'complexity': 2, 'lineno': 835, 'classname': 'SpecialTokensMixin', 'endline': 839, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'pad_token_id', 'complexity': 2, 'lineno': 842, 'classname': 'SpecialTokensMixin', 'endline': 846, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'cls_token_id', 'complexity': 2, 'lineno': 854, 'classname': 'SpecialTokensMixin', 'endline': 858, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'mask_token_id', 'complexity': 2, 'lineno': 861, 'classname': 'SpecialTokensMixin', 'endline': 865, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'all_special_tokens', 'complexity': 2, 'lineno': 902, 'classname': 'SpecialTokensMixin', 'endline': 909, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 1964, 'classname': 'PreTrainedTokenizerBase', 'endline': 1967, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 1969, 'classname': 'PreTrainedTokenizerBase', 'endline': 1976, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'batch_decode', 'complexity': 2, 'lineno': 2253, 'classname': 'PreTrainedTokenizerBase', 'endline': 2254, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_missing_', 'complexity': 1, 'lineno': 79, 'classname': 'ExplicitEnum', 'endline': 82, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TruncationStrategy', 'complexity': 1, 'lineno': 86, 'endline': 90, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'PaddingStrategy', 'complexity': 1, 'lineno': 93, 'endline': 96, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'TensorType', 'complexity': 1, 'lineno': 99, 'endline': 102, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'CharSpan', 'complexity': 1, 'lineno': 105, 'endline': 114, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'TokenSpan', 'complexity': 1, 'lineno': 117, 'endline': 126, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': 'is_fast', 'complexity': 1, 'lineno': 162, 'classname': 'BatchEncoding', 'endline': 167, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getstate__', 'complexity': 1, 'lineno': 189, 'classname': 'BatchEncoding', 'endline': 190, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'keys', 'complexity': 1, 'lineno': 199, 'classname': 'BatchEncoding', 'endline': 200, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'values', 'complexity': 1, 'lineno': 202, 'classname': 'BatchEncoding', 'endline': 203, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'items', 'complexity': 1, 'lineno': 205, 'classname': 'BatchEncoding', 'endline': 206, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'encodings', 'complexity': 1, 'lineno': 213, 'classname': 'BatchEncoding', 'endline': 219, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'sanitize_special_tokens', 'complexity': 1, 'lineno': 610, 'classname': 'SpecialTokensMixin', 'endline': 617, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'bos_token', 'complexity': 1, 'lineno': 782, 'classname': 'SpecialTokensMixin', 'endline': 783, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'eos_token', 'complexity': 1, 'lineno': 786, 'classname': 'SpecialTokensMixin', 'endline': 787, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'unk_token', 'complexity': 1, 'lineno': 790, 'classname': 'SpecialTokensMixin', 'endline': 791, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'sep_token', 'complexity': 1, 'lineno': 794, 'classname': 'SpecialTokensMixin', 'endline': 795, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'pad_token', 'complexity': 1, 'lineno': 798, 'classname': 'SpecialTokensMixin', 'endline': 799, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'cls_token', 'complexity': 1, 'lineno': 802, 'classname': 'SpecialTokensMixin', 'endline': 803, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'mask_token', 'complexity': 1, 'lineno': 806, 'classname': 'SpecialTokensMixin', 'endline': 807, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'additional_special_tokens', 'complexity': 1, 'lineno': 810, 'classname': 'SpecialTokensMixin', 'endline': 811, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'pad_token_type_id', 'complexity': 1, 'lineno': 849, 'classname': 'SpecialTokensMixin', 'endline': 851, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'additional_special_tokens_ids', 'complexity': 1, 'lineno': 868, 'classname': 'SpecialTokensMixin', 'endline': 870, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'all_special_ids', 'complexity': 1, 'lineno': 926, 'classname': 'SpecialTokensMixin', 'endline': 932, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_len', 'complexity': 1, 'lineno': 1049, 'classname': 'PreTrainedTokenizerBase', 'endline': 1053, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_len_single_sentence', 'complexity': 1, 'lineno': 1056, 'classname': 'PreTrainedTokenizerBase', 'endline': 1057, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'max_len_sentences_pair', 'complexity': 1, 'lineno': 1060, 'classname': 'PreTrainedTokenizerBase', 'endline': 1061, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'from_pretrained', 'complexity': 1, 'lineno': 1088, 'classname': 'PreTrainedTokenizerBase', 'endline': 1140, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'encode', 'complexity': 1, 'lineno': 1389, 'classname': 'PreTrainedTokenizerBase', 'endline': 1428, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_special_tokens_to_add', 'complexity': 1, 'lineno': 1430, 'classname': 'PreTrainedTokenizerBase', 'endline': 1431, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'encode_plus', 'complexity': 1, 'lineno': 1673, 'classname': 'PreTrainedTokenizerBase', 'endline': 1737, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_encode_plus', 'complexity': 1, 'lineno': 1740, 'classname': 'PreTrainedTokenizerBase', 'endline': 1761, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'batch_encode_plus', 'complexity': 1, 'lineno': 1764, 'classname': 'PreTrainedTokenizerBase', 'endline': 1832, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_batch_encode_plus', 'complexity': 1, 'lineno': 1835, 'classname': 'PreTrainedTokenizerBase', 'endline': 1862, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'decode', 'complexity': 1, 'lineno': 2256, 'classname': 'PreTrainedTokenizerBase', 'endline': 2269, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'clean_up_tokenization', 'complexity': 1, 'lineno': 2302, 'classname': 'PreTrainedTokenizerBase', 'endline': 2317, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_utils_fast.py': [{'type': 'method', 'rank': 'C', 'name': '_convert_encoding', 'complexity': 11, 'lineno': 143, 'classname': 'PreTrainedTokenizerFast', 'endline': 186, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '_batch_encode_plus', 'complexity': 11, 'lineno': 284, 'classname': 'PreTrainedTokenizerFast', 'endline': 378, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_encode_plus', 'complexity': 7, 'lineno': 380, 'classname': 'PreTrainedTokenizerFast', 'endline': 434, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_ids_to_tokens', 'complexity': 5, 'lineno': 221, 'classname': 'PreTrainedTokenizerFast', 'endline': 238, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'PreTrainedTokenizerFast', 'complexity': 4, 'lineno': 44, 'endline': 454, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 105, 'classname': 'PreTrainedTokenizerFast', 'endline': 113, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_fast', 'complexity': 1, 'lineno': 116, 'classname': 'PreTrainedTokenizerFast', 'endline': 117, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 120, 'classname': 'PreTrainedTokenizerFast', 'endline': 121, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 123, 'classname': 'PreTrainedTokenizerFast', 'endline': 124, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_added_vocab', 'complexity': 3, 'lineno': 126, 'classname': 'PreTrainedTokenizerFast', 'endline': 130, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 132, 'classname': 'PreTrainedTokenizerFast', 'endline': 133, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'backend_tokenizer', 'complexity': 1, 'lineno': 136, 'classname': 'PreTrainedTokenizerFast', 'endline': 137, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'decoder', 'complexity': 1, 'lineno': 140, 'classname': 'PreTrainedTokenizerFast', 'endline': 141, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '_convert_encoding', 'complexity': 11, 'lineno': 143, 'classname': 'PreTrainedTokenizerFast', 'endline': 186, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_ids', 'complexity': 4, 'lineno': 188, 'classname': 'PreTrainedTokenizerFast', 'endline': 201, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id_with_added_voc', 'complexity': 2, 'lineno': 203, 'classname': 'PreTrainedTokenizerFast', 'endline': 207, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 209, 'classname': 'PreTrainedTokenizerFast', 'endline': 210, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_add_tokens', 'complexity': 2, 'lineno': 212, 'classname': 'PreTrainedTokenizerFast', 'endline': 216, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_special_tokens_to_add', 'complexity': 1, 'lineno': 218, 'classname': 'PreTrainedTokenizerFast', 'endline': 219, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_ids_to_tokens', 'complexity': 5, 'lineno': 221, 'classname': 'PreTrainedTokenizerFast', 'endline': 238, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tokenize', 'complexity': 1, 'lineno': 240, 'classname': 'PreTrainedTokenizerFast', 'endline': 241, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_truncation_and_padding', 'complexity': 4, 'lineno': 243, 'classname': 'PreTrainedTokenizerFast', 'endline': 282, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '_batch_encode_plus', 'complexity': 11, 'lineno': 284, 'classname': 'PreTrainedTokenizerFast', 'endline': 378, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_encode_plus', 'complexity': 7, 'lineno': 380, 'classname': 'PreTrainedTokenizerFast', 'endline': 434, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'decode', 'complexity': 2, 'lineno': 436, 'classname': 'PreTrainedTokenizerFast', 'endline': 445, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 2, 'lineno': 447, 'classname': 'PreTrainedTokenizerFast', 'endline': 454, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_ids', 'complexity': 4, 'lineno': 188, 'classname': 'PreTrainedTokenizerFast', 'endline': 201, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'set_truncation_and_padding', 'complexity': 4, 'lineno': 243, 'classname': 'PreTrainedTokenizerFast', 'endline': 282, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_added_vocab', 'complexity': 3, 'lineno': 126, 'classname': 'PreTrainedTokenizerFast', 'endline': 130, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 105, 'classname': 'PreTrainedTokenizerFast', 'endline': 113, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id_with_added_voc', 'complexity': 2, 'lineno': 203, 'classname': 'PreTrainedTokenizerFast', 'endline': 207, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_add_tokens', 'complexity': 2, 'lineno': 212, 'classname': 'PreTrainedTokenizerFast', 'endline': 216, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'decode', 'complexity': 2, 'lineno': 436, 'classname': 'PreTrainedTokenizerFast', 'endline': 445, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 2, 'lineno': 447, 'classname': 'PreTrainedTokenizerFast', 'endline': 454, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_fast', 'complexity': 1, 'lineno': 116, 'classname': 'PreTrainedTokenizerFast', 'endline': 117, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 120, 'classname': 'PreTrainedTokenizerFast', 'endline': 121, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 123, 'classname': 'PreTrainedTokenizerFast', 'endline': 124, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 132, 'classname': 'PreTrainedTokenizerFast', 'endline': 133, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'backend_tokenizer', 'complexity': 1, 'lineno': 136, 'classname': 'PreTrainedTokenizerFast', 'endline': 137, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'decoder', 'complexity': 1, 'lineno': 140, 'classname': 'PreTrainedTokenizerFast', 'endline': 141, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 209, 'classname': 'PreTrainedTokenizerFast', 'endline': 210, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_special_tokens_to_add', 'complexity': 1, 'lineno': 218, 'classname': 'PreTrainedTokenizerFast', 'endline': 219, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tokenize', 'complexity': 1, 'lineno': 240, 'classname': 'PreTrainedTokenizerFast', 'endline': 241, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_xlm.py': [{'type': 'method', 'rank': 'C', 'name': '_tokenize', 'complexity': 19, 'lineno': 749, 'classname': 'XLMTokenizer', 'endline': 837, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'bpe', 'complexity': 13, 'lineno': 705, 'classname': 'XLMTokenizer', 'endline': 747, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 6, 'lineno': 594, 'classname': 'XLMTokenizer', 'endline': 654, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'XLMTokenizer', 'complexity': 5, 'lineno': 530, 'endline': 973, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 6, 'lineno': 594, 'classname': 'XLMTokenizer', 'endline': 654, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'moses_punct_norm', 'complexity': 2, 'lineno': 656, 'classname': 'XLMTokenizer', 'endline': 662, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'moses_tokenize', 'complexity': 2, 'lineno': 664, 'classname': 'XLMTokenizer', 'endline': 670, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'moses_pipeline', 'complexity': 1, 'lineno': 672, 'classname': 'XLMTokenizer', 'endline': 676, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'ja_tokenize', 'complexity': 3, 'lineno': 678, 'classname': 'XLMTokenizer', 'endline': 696, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 699, 'classname': 'XLMTokenizer', 'endline': 700, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 702, 'classname': 'XLMTokenizer', 'endline': 703, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'bpe', 'complexity': 13, 'lineno': 705, 'classname': 'XLMTokenizer', 'endline': 747, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '_tokenize', 'complexity': 19, 'lineno': 749, 'classname': 'XLMTokenizer', 'endline': 837, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 839, 'classname': 'XLMTokenizer', 'endline': 841, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 843, 'classname': 'XLMTokenizer', 'endline': 845, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 847, 'classname': 'XLMTokenizer', 'endline': 850, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 852, 'classname': 'XLMTokenizer', 'endline': 878, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 5, 'lineno': 880, 'classname': 'XLMTokenizer', 'endline': 909, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 911, 'classname': 'XLMTokenizer', 'endline': 939, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 4, 'lineno': 941, 'classname': 'XLMTokenizer', 'endline': 973, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 5, 'lineno': 880, 'classname': 'XLMTokenizer', 'endline': 909, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 4, 'lineno': 941, 'classname': 'XLMTokenizer', 'endline': 973, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'lowercase_and_remove_accent', 'complexity': 3, 'lineno': 443, 'endline': 457, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'remove_non_printing_char', 'complexity': 3, 'lineno': 503, 'endline': 513, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'ja_tokenize', 'complexity': 3, 'lineno': 678, 'classname': 'XLMTokenizer', 'endline': 696, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'get_pairs', 'complexity': 2, 'lineno': 430, 'endline': 440, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'moses_punct_norm', 'complexity': 2, 'lineno': 656, 'classname': 'XLMTokenizer', 'endline': 662, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'moses_tokenize', 'complexity': 2, 'lineno': 664, 'classname': 'XLMTokenizer', 'endline': 670, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 852, 'classname': 'XLMTokenizer', 'endline': 878, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 911, 'classname': 'XLMTokenizer', 'endline': 939, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'replace_unicode_punct', 'complexity': 1, 'lineno': 460, 'endline': 500, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'romanian_preprocessing', 'complexity': 1, 'lineno': 516, 'endline': 527, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'moses_pipeline', 'complexity': 1, 'lineno': 672, 'classname': 'XLMTokenizer', 'endline': 676, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 699, 'classname': 'XLMTokenizer', 'endline': 700, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 1, 'lineno': 702, 'classname': 'XLMTokenizer', 'endline': 703, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 839, 'classname': 'XLMTokenizer', 'endline': 841, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 843, 'classname': 'XLMTokenizer', 'endline': 845, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 847, 'classname': 'XLMTokenizer', 'endline': 850, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_xlm_roberta.py': [{'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 5, 'lineno': 204, 'classname': 'XLMRobertaTokenizer', 'endline': 233, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'XLMRobertaTokenizer', 'complexity': 3, 'lineno': 52, 'endline': 311, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 108, 'classname': 'XLMRobertaTokenizer', 'endline': 157, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getstate__', 'complexity': 1, 'lineno': 159, 'classname': 'XLMRobertaTokenizer', 'endline': 162, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__setstate__', 'complexity': 2, 'lineno': 164, 'classname': 'XLMRobertaTokenizer', 'endline': 175, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 177, 'classname': 'XLMRobertaTokenizer', 'endline': 202, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 5, 'lineno': 204, 'classname': 'XLMRobertaTokenizer', 'endline': 233, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 235, 'classname': 'XLMRobertaTokenizer', 'endline': 258, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 261, 'classname': 'XLMRobertaTokenizer', 'endline': 262, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 2, 'lineno': 264, 'classname': 'XLMRobertaTokenizer', 'endline': 267, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 1, 'lineno': 269, 'classname': 'XLMRobertaTokenizer', 'endline': 270, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 3, 'lineno': 272, 'classname': 'XLMRobertaTokenizer', 'endline': 279, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 2, 'lineno': 281, 'classname': 'XLMRobertaTokenizer', 'endline': 285, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 287, 'classname': 'XLMRobertaTokenizer', 'endline': 290, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 3, 'lineno': 292, 'classname': 'XLMRobertaTokenizer', 'endline': 311, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 108, 'classname': 'XLMRobertaTokenizer', 'endline': 157, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 3, 'lineno': 272, 'classname': 'XLMRobertaTokenizer', 'endline': 279, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 3, 'lineno': 292, 'classname': 'XLMRobertaTokenizer', 'endline': 311, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__setstate__', 'complexity': 2, 'lineno': 164, 'classname': 'XLMRobertaTokenizer', 'endline': 175, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 177, 'classname': 'XLMRobertaTokenizer', 'endline': 202, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 235, 'classname': 'XLMRobertaTokenizer', 'endline': 258, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 2, 'lineno': 264, 'classname': 'XLMRobertaTokenizer', 'endline': 267, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 2, 'lineno': 281, 'classname': 'XLMRobertaTokenizer', 'endline': 285, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getstate__', 'complexity': 1, 'lineno': 159, 'classname': 'XLMRobertaTokenizer', 'endline': 162, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 261, 'classname': 'XLMRobertaTokenizer', 'endline': 262, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tokenize', 'complexity': 1, 'lineno': 269, 'classname': 'XLMRobertaTokenizer', 'endline': 270, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 287, 'classname': 'XLMRobertaTokenizer', 'endline': 290, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_xlnet.py': [{'type': 'method', 'rank': 'B', 'name': '_tokenize', 'complexity': 9, 'lineno': 202, 'classname': 'XLNetTokenizer', 'endline': 224, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'preprocess_text', 'complexity': 6, 'lineno': 187, 'classname': 'XLNetTokenizer', 'endline': 200, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 5, 'lineno': 265, 'classname': 'XLNetTokenizer', 'endline': 294, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'XLNetTokenizer', 'complexity': 3, 'lineno': 53, 'endline': 343, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 113, 'classname': 'XLNetTokenizer', 'endline': 158, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 161, 'classname': 'XLNetTokenizer', 'endline': 162, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 2, 'lineno': 164, 'classname': 'XLNetTokenizer', 'endline': 167, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getstate__', 'complexity': 1, 'lineno': 169, 'classname': 'XLNetTokenizer', 'endline': 172, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__setstate__', 'complexity': 2, 'lineno': 174, 'classname': 'XLNetTokenizer', 'endline': 185, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'preprocess_text', 'complexity': 6, 'lineno': 187, 'classname': 'XLNetTokenizer', 'endline': 200, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_tokenize', 'complexity': 9, 'lineno': 202, 'classname': 'XLNetTokenizer', 'endline': 224, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 226, 'classname': 'XLNetTokenizer', 'endline': 228, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 230, 'classname': 'XLNetTokenizer', 'endline': 232, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 234, 'classname': 'XLNetTokenizer', 'endline': 237, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 239, 'classname': 'XLNetTokenizer', 'endline': 263, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_special_tokens_mask', 'complexity': 5, 'lineno': 265, 'classname': 'XLNetTokenizer', 'endline': 294, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 296, 'classname': 'XLNetTokenizer', 'endline': 322, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 3, 'lineno': 324, 'classname': 'XLNetTokenizer', 'endline': 343, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'save_vocabulary', 'complexity': 3, 'lineno': 324, 'classname': 'XLNetTokenizer', 'endline': 343, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 113, 'classname': 'XLNetTokenizer', 'endline': 158, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_vocab', 'complexity': 2, 'lineno': 164, 'classname': 'XLNetTokenizer', 'endline': 167, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__setstate__', 'complexity': 2, 'lineno': 174, 'classname': 'XLNetTokenizer', 'endline': 185, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'build_inputs_with_special_tokens', 'complexity': 2, 'lineno': 239, 'classname': 'XLNetTokenizer', 'endline': 263, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_token_type_ids_from_sequences', 'complexity': 2, 'lineno': 296, 'classname': 'XLNetTokenizer', 'endline': 322, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'vocab_size', 'complexity': 1, 'lineno': 161, 'classname': 'XLNetTokenizer', 'endline': 162, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getstate__', 'complexity': 1, 'lineno': 169, 'classname': 'XLNetTokenizer', 'endline': 172, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_token_to_id', 'complexity': 1, 'lineno': 226, 'classname': 'XLNetTokenizer', 'endline': 228, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_convert_id_to_token', 'complexity': 1, 'lineno': 230, 'classname': 'XLNetTokenizer', 'endline': 232, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'convert_tokens_to_string', 'complexity': 1, 'lineno': 234, 'classname': 'XLNetTokenizer', 'endline': 237, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\trainer.py': [{'type': 'method', 'rank': 'F', 'name': 'train', 'complexity': 50, 'lineno': 375, 'classname': 'Trainer', 'endline': 579, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'E', 'name': '_prediction_loop', 'complexity': 31, 'lineno': 778, 'classname': 'Trainer', 'endline': 874, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '__init__', 'complexity': 11, 'lineno': 176, 'classname': 'Trainer', 'endline': 226, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'Trainer', 'complexity': 9, 'lineno': 134, 'endline': 886, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'C', 'name': '__init__', 'complexity': 11, 'lineno': 176, 'classname': 'Trainer', 'endline': 226, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_dataloader', 'complexity': 4, 'lineno': 229, 'classname': 'Trainer', 'endline': 252, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'get_eval_dataloader', 'complexity': 6, 'lineno': 254, 'classname': 'Trainer', 'endline': 284, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_dataloader', 'complexity': 3, 'lineno': 286, 'classname': 'Trainer', 'endline': 311, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'get_optimizers', 'complexity': 8, 'lineno': 313, 'classname': 'Trainer', 'endline': 340, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_setup_wandb', 'complexity': 4, 'lineno': 342, 'classname': 'Trainer', 'endline': 366, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_examples', 'complexity': 1, 'lineno': 369, 'classname': 'Trainer', 'endline': 373, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'F', 'name': 'train', 'complexity': 50, 'lineno': 375, 'classname': 'Trainer', 'endline': 579, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_log', 'complexity': 9, 'lineno': 581, 'classname': 'Trainer', 'endline': 609, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_training_step', 'complexity': 9, 'lineno': 611, 'classname': 'Trainer', 'endline': 639, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_local_master', 'complexity': 2, 'lineno': 641, 'classname': 'Trainer', 'endline': 645, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_world_master', 'complexity': 3, 'lineno': 647, 'classname': 'Trainer', 'endline': 655, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_model', 'complexity': 3, 'lineno': 657, 'classname': 'Trainer', 'endline': 667, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_save_tpu', 'complexity': 4, 'lineno': 669, 'classname': 'Trainer', 'endline': 683, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_save', 'complexity': 3, 'lineno': 685, 'classname': 'Trainer', 'endline': 696, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_sorted_checkpoints', 'complexity': 7, 'lineno': 698, 'classname': 'Trainer', 'endline': 713, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_rotate_checkpoints', 'complexity': 5, 'lineno': 715, 'classname': 'Trainer', 'endline': 728, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'evaluate', 'complexity': 3, 'lineno': 730, 'classname': 'Trainer', 'endline': 753, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'predict', 'complexity': 1, 'lineno': 755, 'classname': 'Trainer', 'endline': 776, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'E', 'name': '_prediction_loop', 'complexity': 31, 'lineno': 778, 'classname': 'Trainer', 'endline': 874, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'distributed_concat', 'complexity': 3, 'lineno': 876, 'classname': 'Trainer', 'endline': 886, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '_log', 'complexity': 9, 'lineno': 581, 'classname': 'Trainer', 'endline': 609, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_training_step', 'complexity': 9, 'lineno': 611, 'classname': 'Trainer', 'endline': 639, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'get_optimizers', 'complexity': 8, 'lineno': 313, 'classname': 'Trainer', 'endline': 340, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_sorted_checkpoints', 'complexity': 7, 'lineno': 698, 'classname': 'Trainer', 'endline': 713, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'get_eval_dataloader', 'complexity': 6, 'lineno': 254, 'classname': 'Trainer', 'endline': 284, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 5, 'lineno': 96, 'classname': 'SequentialDistributedSampler', 'endline': 109, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_rotate_checkpoints', 'complexity': 5, 'lineno': 715, 'classname': 'Trainer', 'endline': 728, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'SequentialDistributedSampler', 'complexity': 4, 'lineno': 84, 'endline': 125, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 5, 'lineno': 96, 'classname': 'SequentialDistributedSampler', 'endline': 109, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__iter__', 'complexity': 3, 'lineno': 111, 'classname': 'SequentialDistributedSampler', 'endline': 122, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 124, 'classname': 'SequentialDistributedSampler', 'endline': 125, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'get_train_dataloader', 'complexity': 4, 'lineno': 229, 'classname': 'Trainer', 'endline': 252, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_setup_wandb', 'complexity': 4, 'lineno': 342, 'classname': 'Trainer', 'endline': 366, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_save_tpu', 'complexity': 4, 'lineno': 669, 'classname': 'Trainer', 'endline': 683, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'torch_distributed_zero_first', 'complexity': 3, 'lineno': 70, 'endline': 81, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__iter__', 'complexity': 3, 'lineno': 111, 'classname': 'SequentialDistributedSampler', 'endline': 122, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_dataloader', 'complexity': 3, 'lineno': 286, 'classname': 'Trainer', 'endline': 311, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_world_master', 'complexity': 3, 'lineno': 647, 'classname': 'Trainer', 'endline': 655, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_model', 'complexity': 3, 'lineno': 657, 'classname': 'Trainer', 'endline': 667, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_save', 'complexity': 3, 'lineno': 685, 'classname': 'Trainer', 'endline': 696, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'evaluate', 'complexity': 3, 'lineno': 730, 'classname': 'Trainer', 'endline': 753, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'distributed_concat', 'complexity': 3, 'lineno': 876, 'classname': 'Trainer', 'endline': 886, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'get_tpu_sampler', 'complexity': 2, 'lineno': 128, 'endline': 131, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_local_master', 'complexity': 2, 'lineno': 641, 'classname': 'Trainer', 'endline': 645, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'is_tensorboard_available', 'complexity': 1, 'lineno': 58, 'endline': 59, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 124, 'classname': 'SequentialDistributedSampler', 'endline': 125, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'num_examples', 'complexity': 1, 'lineno': 369, 'classname': 'Trainer', 'endline': 373, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'predict', 'complexity': 1, 'lineno': 755, 'classname': 'Trainer', 'endline': 776, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\trainer_tf.py': [{'type': 'method', 'rank': 'D', 'name': 'train', 'complexity': 23, 'lineno': 334, 'classname': 'TFTrainer', 'endline': 453, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': '_prediction_loop', 'complexity': 21, 'lineno': 217, 'classname': 'TFTrainer', 'endline': 292, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFTrainer', 'complexity': 5, 'lineno': 24, 'endline': 576, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 64, 'classname': 'TFTrainer', 'endline': 99, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_tfdataset', 'complexity': 4, 'lineno': 101, 'classname': 'TFTrainer', 'endline': 125, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_eval_tfdataset', 'complexity': 4, 'lineno': 127, 'classname': 'TFTrainer', 'endline': 145, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_tfdataset', 'complexity': 1, 'lineno': 147, 'classname': 'TFTrainer', 'endline': 156, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_optimizers', 'complexity': 2, 'lineno': 158, 'classname': 'TFTrainer', 'endline': 178, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_setup_wandb', 'complexity': 1, 'lineno': 180, 'classname': 'TFTrainer', 'endline': 194, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_evaluate_steps', 'complexity': 2, 'lineno': 197, 'classname': 'TFTrainer', 'endline': 215, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': '_prediction_loop', 'complexity': 21, 'lineno': 217, 'classname': 'TFTrainer', 'endline': 292, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_log', 'complexity': 4, 'lineno': 294, 'classname': 'TFTrainer', 'endline': 308, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'evaluate', 'complexity': 1, 'lineno': 310, 'classname': 'TFTrainer', 'endline': 332, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'train', 'complexity': 23, 'lineno': 334, 'classname': 'TFTrainer', 'endline': 453, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_training_steps', 'complexity': 3, 'lineno': 455, 'classname': 'TFTrainer', 'endline': 462, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_apply_gradients', 'complexity': 1, 'lineno': 465, 'classname': 'TFTrainer', 'endline': 467, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_step', 'complexity': 3, 'lineno': 469, 'classname': 'TFTrainer', 'endline': 478, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_accumulate_next_gradients', 'complexity': 3, 'lineno': 480, 'classname': 'TFTrainer', 'endline': 494, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': '_accumulate_next', 'complexity': 1, 'lineno': 485, 'endline': 488, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_accumulate_gradients', 'complexity': 2, 'lineno': 496, 'classname': 'TFTrainer', 'endline': 507, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_forward', 'complexity': 3, 'lineno': 509, 'classname': 'TFTrainer', 'endline': 519, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_run_model', 'complexity': 5, 'lineno': 521, 'classname': 'TFTrainer', 'endline': 540, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'predict', 'complexity': 1, 'lineno': 542, 'classname': 'TFTrainer', 'endline': 563, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_model', 'complexity': 3, 'lineno': 565, 'classname': 'TFTrainer', 'endline': 576, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_run_model', 'complexity': 5, 'lineno': 521, 'classname': 'TFTrainer', 'endline': 540, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_tfdataset', 'complexity': 4, 'lineno': 101, 'classname': 'TFTrainer', 'endline': 125, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_eval_tfdataset', 'complexity': 4, 'lineno': 127, 'classname': 'TFTrainer', 'endline': 145, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_log', 'complexity': 4, 'lineno': 294, 'classname': 'TFTrainer', 'endline': 308, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 64, 'classname': 'TFTrainer', 'endline': 99, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_training_steps', 'complexity': 3, 'lineno': 455, 'classname': 'TFTrainer', 'endline': 462, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_step', 'complexity': 3, 'lineno': 469, 'classname': 'TFTrainer', 'endline': 478, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_accumulate_next_gradients', 'complexity': 3, 'lineno': 480, 'classname': 'TFTrainer', 'endline': 494, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': '_accumulate_next', 'complexity': 1, 'lineno': 485, 'endline': 488, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_forward', 'complexity': 3, 'lineno': 509, 'classname': 'TFTrainer', 'endline': 519, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'save_model', 'complexity': 3, 'lineno': 565, 'classname': 'TFTrainer', 'endline': 576, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_optimizers', 'complexity': 2, 'lineno': 158, 'classname': 'TFTrainer', 'endline': 178, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_evaluate_steps', 'complexity': 2, 'lineno': 197, 'classname': 'TFTrainer', 'endline': 215, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_accumulate_gradients', 'complexity': 2, 'lineno': 496, 'classname': 'TFTrainer', 'endline': 507, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_tfdataset', 'complexity': 1, 'lineno': 147, 'classname': 'TFTrainer', 'endline': 156, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_setup_wandb', 'complexity': 1, 'lineno': 180, 'classname': 'TFTrainer', 'endline': 194, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'evaluate', 'complexity': 1, 'lineno': 310, 'classname': 'TFTrainer', 'endline': 332, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_apply_gradients', 'complexity': 1, 'lineno': 465, 'classname': 'TFTrainer', 'endline': 467, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'predict', 'complexity': 1, 'lineno': 542, 'classname': 'TFTrainer', 'endline': 563, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\trainer_utils.py': [{'type': 'function', 'rank': 'A', 'name': 'set_seed', 'complexity': 3, 'lineno': 27, 'endline': 46, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'is_wandb_available', 'complexity': 1, 'lineno': 23, 'endline': 24, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'EvalPrediction', 'complexity': 1, 'lineno': 49, 'endline': 59, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'PredictionOutput', 'complexity': 1, 'lineno': 62, 'endline': 65, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'TrainOutput', 'complexity': 1, 'lineno': 68, 'endline': 70, 'col_offset': 0, 'methods': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\training_args.py': [{'type': 'method', 'rank': 'B', 'name': '_setup_devices', 'complexity': 6, 'lineno': 251, 'classname': 'TrainingArguments', 'endline': 278, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_sanitized_dict', 'complexity': 4, 'lineno': 306, 'classname': 'TrainingArguments', 'endline': 314, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TrainingArguments', 'complexity': 3, 'lineno': 33, 'endline': 314, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'train_batch_size', 'complexity': 3, 'lineno': 224, 'classname': 'TrainingArguments', 'endline': 234, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'eval_batch_size', 'complexity': 3, 'lineno': 237, 'classname': 'TrainingArguments', 'endline': 247, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_setup_devices', 'complexity': 6, 'lineno': 251, 'classname': 'TrainingArguments', 'endline': 278, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'device', 'complexity': 1, 'lineno': 282, 'classname': 'TrainingArguments', 'endline': 286, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_gpu', 'complexity': 1, 'lineno': 290, 'classname': 'TrainingArguments', 'endline': 298, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_json_string', 'complexity': 1, 'lineno': 300, 'classname': 'TrainingArguments', 'endline': 304, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_sanitized_dict', 'complexity': 4, 'lineno': 306, 'classname': 'TrainingArguments', 'endline': 314, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'train_batch_size', 'complexity': 3, 'lineno': 224, 'classname': 'TrainingArguments', 'endline': 234, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'eval_batch_size', 'complexity': 3, 'lineno': 237, 'classname': 'TrainingArguments', 'endline': 247, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'default_logdir', 'complexity': 1, 'lineno': 21, 'endline': 29, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'device', 'complexity': 1, 'lineno': 282, 'classname': 'TrainingArguments', 'endline': 286, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_gpu', 'complexity': 1, 'lineno': 290, 'classname': 'TrainingArguments', 'endline': 298, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_json_string', 'complexity': 1, 'lineno': 300, 'classname': 'TrainingArguments', 'endline': 304, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\training_args_tf.py': [{'type': 'method', 'rank': 'B', 'name': '_setup_strategy', 'complexity': 8, 'lineno': 106, 'classname': 'TFTrainingArguments', 'endline': 136, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TFTrainingArguments', 'complexity': 4, 'lineno': 17, 'endline': 190, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '_setup_strategy', 'complexity': 8, 'lineno': 106, 'classname': 'TFTrainingArguments', 'endline': 136, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'strategy', 'complexity': 1, 'lineno': 140, 'classname': 'TFTrainingArguments', 'endline': 144, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_replicas', 'complexity': 1, 'lineno': 148, 'classname': 'TFTrainingArguments', 'endline': 152, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'train_batch_size', 'complexity': 3, 'lineno': 155, 'classname': 'TFTrainingArguments', 'endline': 165, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'eval_batch_size', 'complexity': 3, 'lineno': 168, 'classname': 'TFTrainingArguments', 'endline': 178, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_gpu', 'complexity': 1, 'lineno': 182, 'classname': 'TFTrainingArguments', 'endline': 190, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'train_batch_size', 'complexity': 3, 'lineno': 155, 'classname': 'TFTrainingArguments', 'endline': 165, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'eval_batch_size', 'complexity': 3, 'lineno': 168, 'classname': 'TFTrainingArguments', 'endline': 178, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'strategy', 'complexity': 1, 'lineno': 140, 'classname': 'TFTrainingArguments', 'endline': 144, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_replicas', 'complexity': 1, 'lineno': 148, 'classname': 'TFTrainingArguments', 'endline': 152, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_gpu', 'complexity': 1, 'lineno': 182, 'classname': 'TFTrainingArguments', 'endline': 190, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark.py': [{'type': 'method', 'rank': 'C', 'name': '_prepare_inference_func', 'complexity': 11, 'lineno': 85, 'classname': 'PyTorchBenchmark', 'endline': 136, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'encoder_decoder_forward', 'complexity': 1, 'lineno': 125, 'endline': 128, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'encoder_forward', 'complexity': 1, 'lineno': 130, 'endline': 133, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '_prepare_train_func', 'complexity': 10, 'lineno': 138, 'classname': 'PyTorchBenchmark', 'endline': 190, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'compute_loss_and_backprob_encoder', 'complexity': 1, 'lineno': 175, 'endline': 178, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'compute_loss_and_backprob_encoder_decoder', 'complexity': 1, 'lineno': 180, 'endline': 183, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '_measure_memory', 'complexity': 8, 'lineno': 214, 'classname': 'PyTorchBenchmark', 'endline': 257, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_measure_speed', 'complexity': 6, 'lineno': 192, 'classname': 'PyTorchBenchmark', 'endline': 212, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'PyTorchBenchmark', 'complexity': 5, 'lineno': 55, 'endline': 257, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'framework_version', 'complexity': 1, 'lineno': 62, 'classname': 'PyTorchBenchmark', 'endline': 63, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_inference_speed', 'complexity': 1, 'lineno': 65, 'classname': 'PyTorchBenchmark', 'endline': 67, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_inference_memory', 'complexity': 1, 'lineno': 69, 'classname': 'PyTorchBenchmark', 'endline': 73, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_train_speed', 'complexity': 1, 'lineno': 75, 'classname': 'PyTorchBenchmark', 'endline': 77, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_train_memory', 'complexity': 1, 'lineno': 79, 'classname': 'PyTorchBenchmark', 'endline': 83, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '_prepare_inference_func', 'complexity': 11, 'lineno': 85, 'classname': 'PyTorchBenchmark', 'endline': 136, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'encoder_decoder_forward', 'complexity': 1, 'lineno': 125, 'endline': 128, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'encoder_forward', 'complexity': 1, 'lineno': 130, 'endline': 133, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '_prepare_train_func', 'complexity': 10, 'lineno': 138, 'classname': 'PyTorchBenchmark', 'endline': 190, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'compute_loss_and_backprob_encoder', 'complexity': 1, 'lineno': 175, 'endline': 178, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'compute_loss_and_backprob_encoder_decoder', 'complexity': 1, 'lineno': 180, 'endline': 183, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '_measure_speed', 'complexity': 6, 'lineno': 192, 'classname': 'PyTorchBenchmark', 'endline': 212, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_measure_memory', 'complexity': 8, 'lineno': 214, 'classname': 'PyTorchBenchmark', 'endline': 257, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'framework_version', 'complexity': 1, 'lineno': 62, 'classname': 'PyTorchBenchmark', 'endline': 63, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_inference_speed', 'complexity': 1, 'lineno': 65, 'classname': 'PyTorchBenchmark', 'endline': 67, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_inference_memory', 'complexity': 1, 'lineno': 69, 'classname': 'PyTorchBenchmark', 'endline': 73, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_train_speed', 'complexity': 1, 'lineno': 75, 'classname': 'PyTorchBenchmark', 'endline': 77, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_train_memory', 'complexity': 1, 'lineno': 79, 'classname': 'PyTorchBenchmark', 'endline': 83, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark_args.py': [{'type': 'method', 'rank': 'A', 'name': '_setup_devices', 'complexity': 4, 'lineno': 51, 'classname': 'PyTorchBenchmarkArguments', 'endline': 62, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'PyTorchBenchmarkArguments', 'complexity': 2, 'lineno': 36, 'endline': 86, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '_setup_devices', 'complexity': 4, 'lineno': 51, 'classname': 'PyTorchBenchmarkArguments', 'endline': 62, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_tpu', 'complexity': 2, 'lineno': 65, 'classname': 'PyTorchBenchmarkArguments', 'endline': 66, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'device_idx', 'complexity': 1, 'lineno': 70, 'classname': 'PyTorchBenchmarkArguments', 'endline': 72, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'device', 'complexity': 1, 'lineno': 76, 'classname': 'PyTorchBenchmarkArguments', 'endline': 77, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_gpu', 'complexity': 1, 'lineno': 81, 'classname': 'PyTorchBenchmarkArguments', 'endline': 82, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_gpu', 'complexity': 1, 'lineno': 85, 'classname': 'PyTorchBenchmarkArguments', 'endline': 86, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'is_tpu', 'complexity': 2, 'lineno': 65, 'classname': 'PyTorchBenchmarkArguments', 'endline': 66, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'device_idx', 'complexity': 1, 'lineno': 70, 'classname': 'PyTorchBenchmarkArguments', 'endline': 72, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'device', 'complexity': 1, 'lineno': 76, 'classname': 'PyTorchBenchmarkArguments', 'endline': 77, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_gpu', 'complexity': 1, 'lineno': 81, 'classname': 'PyTorchBenchmarkArguments', 'endline': 82, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_gpu', 'complexity': 1, 'lineno': 85, 'classname': 'PyTorchBenchmarkArguments', 'endline': 86, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark_args_tf.py': [{'type': 'method', 'rank': 'A', 'name': '_setup_tpu', 'complexity': 4, 'lineno': 50, 'classname': 'TensorFlowBenchmarkArguments', 'endline': 59, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TensorFlowBenchmarkArguments', 'complexity': 3, 'lineno': 33, 'endline': 105, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '_setup_tpu', 'complexity': 4, 'lineno': 50, 'classname': 'TensorFlowBenchmarkArguments', 'endline': 59, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_setup_strategy', 'complexity': 3, 'lineno': 63, 'classname': 'TensorFlowBenchmarkArguments', 'endline': 79, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_tpu', 'complexity': 1, 'lineno': 83, 'classname': 'TensorFlowBenchmarkArguments', 'endline': 84, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'strategy', 'complexity': 1, 'lineno': 88, 'classname': 'TensorFlowBenchmarkArguments', 'endline': 89, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'gpu_list', 'complexity': 1, 'lineno': 93, 'classname': 'TensorFlowBenchmarkArguments', 'endline': 94, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_gpu', 'complexity': 2, 'lineno': 98, 'classname': 'TensorFlowBenchmarkArguments', 'endline': 101, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_gpu', 'complexity': 1, 'lineno': 104, 'classname': 'TensorFlowBenchmarkArguments', 'endline': 105, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_setup_strategy', 'complexity': 3, 'lineno': 63, 'classname': 'TensorFlowBenchmarkArguments', 'endline': 79, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'n_gpu', 'complexity': 2, 'lineno': 98, 'classname': 'TensorFlowBenchmarkArguments', 'endline': 101, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_tpu', 'complexity': 1, 'lineno': 83, 'classname': 'TensorFlowBenchmarkArguments', 'endline': 84, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'strategy', 'complexity': 1, 'lineno': 88, 'classname': 'TensorFlowBenchmarkArguments', 'endline': 89, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'gpu_list', 'complexity': 1, 'lineno': 93, 'classname': 'TensorFlowBenchmarkArguments', 'endline': 94, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'is_gpu', 'complexity': 1, 'lineno': 104, 'classname': 'TensorFlowBenchmarkArguments', 'endline': 105, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark_args_utils.py': [{'type': 'class', 'rank': 'A', 'name': 'BenchmarkArguments', 'complexity': 3, 'lineno': 33, 'endline': 130, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'to_json_string', 'complexity': 1, 'lineno': 109, 'classname': 'BenchmarkArguments', 'endline': 113, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'model_names', 'complexity': 2, 'lineno': 116, 'classname': 'BenchmarkArguments', 'endline': 120, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'do_multi_processing', 'complexity': 3, 'lineno': 123, 'classname': 'BenchmarkArguments', 'endline': 130, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'do_multi_processing', 'complexity': 3, 'lineno': 123, 'classname': 'BenchmarkArguments', 'endline': 130, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'model_names', 'complexity': 2, 'lineno': 116, 'classname': 'BenchmarkArguments', 'endline': 120, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'list_field', 'complexity': 1, 'lineno': 28, 'endline': 29, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_json_string', 'complexity': 1, 'lineno': 109, 'classname': 'BenchmarkArguments', 'endline': 113, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark_tf.py': [{'type': 'method', 'rank': 'C', 'name': '_measure_memory', 'complexity': 11, 'lineno': 167, 'classname': 'TensorFlowBenchmark', 'endline': 229, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_prepare_inference_func', 'complexity': 8, 'lineno': 116, 'classname': 'TensorFlowBenchmark', 'endline': 150, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'encoder_decoder_forward', 'complexity': 1, 'lineno': 141, 'endline': 142, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'encoder_forward', 'complexity': 1, 'lineno': 145, 'endline': 146, 'col_offset': 8, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'TensorFlowBenchmark', 'complexity': 5, 'lineno': 78, 'endline': 229, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'framework_version', 'complexity': 1, 'lineno': 85, 'classname': 'TensorFlowBenchmark', 'endline': 86, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_inference_speed', 'complexity': 2, 'lineno': 88, 'classname': 'TensorFlowBenchmark', 'endline': 93, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_train_speed', 'complexity': 1, 'lineno': 95, 'classname': 'TensorFlowBenchmark', 'endline': 97, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_inference_memory', 'complexity': 3, 'lineno': 100, 'classname': 'TensorFlowBenchmark', 'endline': 109, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_train_memory', 'complexity': 1, 'lineno': 111, 'classname': 'TensorFlowBenchmark', 'endline': 113, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_prepare_inference_func', 'complexity': 8, 'lineno': 116, 'classname': 'TensorFlowBenchmark', 'endline': 150, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'encoder_decoder_forward', 'complexity': 1, 'lineno': 141, 'endline': 142, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'encoder_forward', 'complexity': 1, 'lineno': 145, 'endline': 146, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_measure_speed', 'complexity': 4, 'lineno': 152, 'classname': 'TensorFlowBenchmark', 'endline': 165, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': '_measure_memory', 'complexity': 11, 'lineno': 167, 'classname': 'TensorFlowBenchmark', 'endline': 229, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_measure_speed', 'complexity': 4, 'lineno': 152, 'classname': 'TensorFlowBenchmark', 'endline': 165, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_inference_memory', 'complexity': 3, 'lineno': 100, 'classname': 'TensorFlowBenchmark', 'endline': 109, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'random_input_ids', 'complexity': 2, 'lineno': 72, 'endline': 75, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_inference_speed', 'complexity': 2, 'lineno': 88, 'classname': 'TensorFlowBenchmark', 'endline': 93, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'run_with_tf_optimizations', 'complexity': 1, 'lineno': 50, 'endline': 69, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'run_func', 'complexity': 3, 'lineno': 51, 'endline': 67, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'run_in_eager_mode', 'complexity': 1, 'lineno': 53, 'endline': 54, 'col_offset': 8, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'run_in_graph_mode', 'complexity': 1, 'lineno': 58, 'endline': 59, 'col_offset': 8, 'closures': []}]}]}, {'type': 'method', 'rank': 'A', 'name': 'framework_version', 'complexity': 1, 'lineno': 85, 'classname': 'TensorFlowBenchmark', 'endline': 86, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_train_speed', 'complexity': 1, 'lineno': 95, 'classname': 'TensorFlowBenchmark', 'endline': 97, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_train_memory', 'complexity': 1, 'lineno': 111, 'classname': 'TensorFlowBenchmark', 'endline': 113, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark_utils.py': [{'type': 'method', 'rank': 'D', 'name': 'run', 'complexity': 26, 'lineno': 636, 'classname': 'Benchmark', 'endline': 732, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'stop_memory_tracing', 'complexity': 8, 'lineno': 453, 'endline': 547, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'measure_peak_memory_cpu', 'complexity': 7, 'lineno': 183, 'endline': 303, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'get_cpu_memory', 'complexity': 3, 'lineno': 206, 'endline': 224, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'B', 'name': 'start_memory_tracing', 'complexity': 7, 'lineno': 306, 'endline': 450, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'D', 'name': 'traceit', 'complexity': 27, 'lineno': 373, 'endline': 443, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'environment_info', 'complexity': 7, 'lineno': 736, 'classname': 'Benchmark', 'endline': 792, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'save_to_csv', 'complexity': 7, 'lineno': 840, 'classname': 'Benchmark', 'endline': 865, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 6, 'lineno': 566, 'classname': 'Benchmark', 'endline': 582, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'print_results', 'complexity': 6, 'lineno': 794, 'classname': 'Benchmark', 'endline': 814, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'Benchmark', 'complexity': 5, 'lineno': 556, 'endline': 865, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 6, 'lineno': 566, 'classname': 'Benchmark', 'endline': 582, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'print_fn', 'complexity': 3, 'lineno': 585, 'classname': 'Benchmark', 'endline': 597, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'print_and_log', 'complexity': 1, 'lineno': 589, 'endline': 592, 'col_offset': 16, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'framework_version', 'complexity': 1, 'lineno': 601, 'classname': 'Benchmark', 'endline': 602, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_inference_speed', 'complexity': 1, 'lineno': 605, 'classname': 'Benchmark', 'endline': 606, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_train_speed', 'complexity': 1, 'lineno': 609, 'classname': 'Benchmark', 'endline': 610, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_inference_memory', 'complexity': 1, 'lineno': 613, 'classname': 'Benchmark', 'endline': 616, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_train_memory', 'complexity': 1, 'lineno': 619, 'classname': 'Benchmark', 'endline': 622, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'inference_speed', 'complexity': 1, 'lineno': 624, 'classname': 'Benchmark', 'endline': 625, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'train_speed', 'complexity': 1, 'lineno': 627, 'classname': 'Benchmark', 'endline': 628, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'inference_memory', 'complexity': 1, 'lineno': 630, 'classname': 'Benchmark', 'endline': 631, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'train_memory', 'complexity': 1, 'lineno': 633, 'classname': 'Benchmark', 'endline': 634, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'D', 'name': 'run', 'complexity': 26, 'lineno': 636, 'classname': 'Benchmark', 'endline': 732, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'environment_info', 'complexity': 7, 'lineno': 736, 'classname': 'Benchmark', 'endline': 792, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'print_results', 'complexity': 6, 'lineno': 794, 'classname': 'Benchmark', 'endline': 814, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'print_memory_trace_statistics', 'complexity': 4, 'lineno': 816, 'classname': 'Benchmark', 'endline': 838, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'save_to_csv', 'complexity': 7, 'lineno': 840, 'classname': 'Benchmark', 'endline': 865, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'print_memory_trace_statistics', 'complexity': 4, 'lineno': 816, 'classname': 'Benchmark', 'endline': 838, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'print_fn', 'complexity': 3, 'lineno': 585, 'classname': 'Benchmark', 'endline': 597, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'print_and_log', 'complexity': 1, 'lineno': 589, 'endline': 592, 'col_offset': 16, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'separate_process_wrapper_fn', 'complexity': 2, 'lineno': 64, 'endline': 100, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'multi_process_func', 'complexity': 1, 'lineno': 77, 'endline': 94, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'wrapper_func', 'complexity': 2, 'lineno': 80, 'endline': 87, 'col_offset': 8, 'closures': []}]}]}, {'type': 'class', 'rank': 'A', 'name': 'Memory', 'complexity': 2, 'lineno': 137, 'endline': 146, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__repr__', 'complexity': 1, 'lineno': 145, 'classname': 'Memory', 'endline': 146, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'is_memory_tracing_enabled', 'complexity': 1, 'lineno': 103, 'endline': 105, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'bytes_to_mega_bytes', 'complexity': 1, 'lineno': 550, 'endline': 553, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'Frame', 'complexity': 1, 'lineno': 108, 'endline': 122, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'UsedMemoryState', 'complexity': 1, 'lineno': 125, 'endline': 134, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': '__repr__', 'complexity': 1, 'lineno': 145, 'classname': 'Memory', 'endline': 146, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'MemoryState', 'complexity': 1, 'lineno': 149, 'endline': 160, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'MemorySummary', 'complexity': 1, 'lineno': 163, 'endline': 177, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': 'framework_version', 'complexity': 1, 'lineno': 601, 'classname': 'Benchmark', 'endline': 602, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_inference_speed', 'complexity': 1, 'lineno': 605, 'classname': 'Benchmark', 'endline': 606, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_train_speed', 'complexity': 1, 'lineno': 609, 'classname': 'Benchmark', 'endline': 610, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_inference_memory', 'complexity': 1, 'lineno': 613, 'classname': 'Benchmark', 'endline': 616, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_train_memory', 'complexity': 1, 'lineno': 619, 'classname': 'Benchmark', 'endline': 622, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'inference_speed', 'complexity': 1, 'lineno': 624, 'classname': 'Benchmark', 'endline': 625, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'train_speed', 'complexity': 1, 'lineno': 627, 'classname': 'Benchmark', 'endline': 628, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'inference_memory', 'complexity': 1, 'lineno': 630, 'classname': 'Benchmark', 'endline': 631, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'train_memory', 'complexity': 1, 'lineno': 633, 'classname': 'Benchmark', 'endline': 634, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\convert.py': [{'type': 'method', 'rank': 'C', 'name': 'run', 'complexity': 14, 'lineno': 64, 'classname': 'ConvertCommand', 'endline': 158, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'ConvertCommand', 'complexity': 6, 'lineno': 17, 'endline': 158, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'register_subcommand', 'complexity': 1, 'lineno': 19, 'classname': 'ConvertCommand', 'endline': 44, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 46, 'classname': 'ConvertCommand', 'endline': 62, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'run', 'complexity': 14, 'lineno': 64, 'classname': 'ConvertCommand', 'endline': 158, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'convert_command_factory', 'complexity': 1, 'lineno': 7, 'endline': 13, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'register_subcommand', 'complexity': 1, 'lineno': 19, 'classname': 'ConvertCommand', 'endline': 44, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 46, 'classname': 'ConvertCommand', 'endline': 62, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\download.py': [{'type': 'class', 'rank': 'A', 'name': 'DownloadCommand', 'complexity': 2, 'lineno': 10, 'endline': 32, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'register_subcommand', 'complexity': 1, 'lineno': 12, 'classname': 'DownloadCommand', 'endline': 21, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 23, 'classname': 'DownloadCommand', 'endline': 26, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 1, 'lineno': 28, 'classname': 'DownloadCommand', 'endline': 32, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'download_command_factory', 'complexity': 1, 'lineno': 6, 'endline': 7, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'register_subcommand', 'complexity': 1, 'lineno': 12, 'classname': 'DownloadCommand', 'endline': 21, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 23, 'classname': 'DownloadCommand', 'endline': 26, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 1, 'lineno': 28, 'classname': 'DownloadCommand', 'endline': 32, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\env.py': [{'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 4, 'lineno': 19, 'classname': 'EnvironmentCommand', 'endline': 54, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'EnvironmentCommand', 'complexity': 3, 'lineno': 13, 'endline': 58, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'register_subcommand', 'complexity': 1, 'lineno': 15, 'classname': 'EnvironmentCommand', 'endline': 17, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 4, 'lineno': 19, 'classname': 'EnvironmentCommand', 'endline': 54, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'format_dict', 'complexity': 2, 'lineno': 57, 'classname': 'EnvironmentCommand', 'endline': 58, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'format_dict', 'complexity': 2, 'lineno': 57, 'classname': 'EnvironmentCommand', 'endline': 58, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'info_command_factory', 'complexity': 1, 'lineno': 9, 'endline': 10, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'register_subcommand', 'complexity': 1, 'lineno': 15, 'classname': 'EnvironmentCommand', 'endline': 17, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\run.py': [{'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 5, 'lineno': 81, 'classname': 'RunCommand', 'endline': 96, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'try_infer_format_from_ext', 'complexity': 4, 'lineno': 11, 'endline': 21, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'run_command_factory', 'complexity': 4, 'lineno': 25, 'endline': 41, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'RunCommand', 'complexity': 3, 'lineno': 44, 'endline': 96, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 45, 'classname': 'RunCommand', 'endline': 47, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'register_subcommand', 'complexity': 1, 'lineno': 50, 'classname': 'RunCommand', 'endline': 79, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 5, 'lineno': 81, 'classname': 'RunCommand', 'endline': 96, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 45, 'classname': 'RunCommand', 'endline': 47, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'register_subcommand', 'complexity': 1, 'lineno': 50, 'classname': 'RunCommand', 'endline': 79, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\serving.py': [{'type': 'class', 'rank': 'A', 'name': 'ServeCommand', 'complexity': 3, 'lineno': 78, 'endline': 214, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'register_subcommand', 'complexity': 1, 'lineno': 80, 'classname': 'ServeCommand', 'endline': 104, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 106, 'classname': 'ServeCommand', 'endline': 153, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 1, 'lineno': 156, 'classname': 'ServeCommand', 'endline': 157, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'model_info', 'complexity': 1, 'lineno': 159, 'classname': 'ServeCommand', 'endline': 160, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tokenize', 'complexity': 3, 'lineno': 162, 'classname': 'ServeCommand', 'endline': 178, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'detokenize', 'complexity': 2, 'lineno': 180, 'classname': 'ServeCommand', 'endline': 196, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 198, 'classname': 'ServeCommand', 'endline': 214, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'tokenize', 'complexity': 3, 'lineno': 162, 'classname': 'ServeCommand', 'endline': 178, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'forward', 'complexity': 3, 'lineno': 198, 'classname': 'ServeCommand', 'endline': 214, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'serve_command_factory', 'complexity': 2, 'lineno': 30, 'endline': 42, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 106, 'classname': 'ServeCommand', 'endline': 153, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'detokenize', 'complexity': 2, 'lineno': 180, 'classname': 'ServeCommand', 'endline': 196, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'Body', 'complexity': 1, 'lineno': 21, 'endline': 22, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'ServeModelInfoResult', 'complexity': 1, 'lineno': 45, 'endline': 50, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'ServeTokenizeResult', 'complexity': 1, 'lineno': 53, 'endline': 59, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'ServeDeTokenizeResult', 'complexity': 1, 'lineno': 62, 'endline': 67, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'ServeForwardResult', 'complexity': 1, 'lineno': 70, 'endline': 75, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': 'register_subcommand', 'complexity': 1, 'lineno': 80, 'classname': 'ServeCommand', 'endline': 104, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 1, 'lineno': 156, 'classname': 'ServeCommand', 'endline': 157, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'model_info', 'complexity': 1, 'lineno': 159, 'classname': 'ServeCommand', 'endline': 160, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\train.py': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 7, 'lineno': 78, 'classname': 'TrainCommand', 'endline': 122, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TrainCommand', 'complexity': 3, 'lineno': 26, 'endline': 144, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'register_subcommand', 'complexity': 1, 'lineno': 28, 'classname': 'TrainCommand', 'endline': 76, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 7, 'lineno': 78, 'classname': 'TrainCommand', 'endline': 122, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 2, 'lineno': 124, 'classname': 'TrainCommand', 'endline': 127, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run_torch', 'complexity': 1, 'lineno': 129, 'classname': 'TrainCommand', 'endline': 130, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run_tf', 'complexity': 1, 'lineno': 132, 'classname': 'TrainCommand', 'endline': 144, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 2, 'lineno': 124, 'classname': 'TrainCommand', 'endline': 127, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'train_command_factory', 'complexity': 1, 'lineno': 18, 'endline': 23, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'register_subcommand', 'complexity': 1, 'lineno': 28, 'classname': 'TrainCommand', 'endline': 76, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run_torch', 'complexity': 1, 'lineno': 129, 'classname': 'TrainCommand', 'endline': 130, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run_tf', 'complexity': 1, 'lineno': 132, 'classname': 'TrainCommand', 'endline': 144, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\transformers_cli.py': [{'type': 'function', 'rank': 'A', 'name': 'main', 'complexity': 2, 'lineno': 12, 'endline': 33, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\user.py': [{'type': 'method', 'rank': 'C', 'name': 'run', 'complexity': 16, 'lineno': 187, 'classname': 'UploadCommand', 'endline': 240, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'C', 'name': 'UploadCommand', 'complexity': 12, 'lineno': 175, 'endline': 240, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'walk_dir', 'complexity': 5, 'lineno': 176, 'classname': 'UploadCommand', 'endline': 185, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'name': 'run', 'complexity': 16, 'lineno': 187, 'classname': 'UploadCommand', 'endline': 240, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'ListObjsCommand', 'complexity': 6, 'lineno': 126, 'endline': 157, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'tabulate', 'complexity': 5, 'lineno': 127, 'classname': 'ListObjsCommand', 'endline': 140, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 5, 'lineno': 142, 'classname': 'ListObjsCommand', 'endline': 157, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'WhoamiCommand', 'complexity': 5, 'lineno': 98, 'endline': 112, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 4, 'lineno': 99, 'classname': 'WhoamiCommand', 'endline': 112, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'tabulate', 'complexity': 5, 'lineno': 127, 'classname': 'ListObjsCommand', 'endline': 140, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 5, 'lineno': 142, 'classname': 'ListObjsCommand', 'endline': 157, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'walk_dir', 'complexity': 5, 'lineno': 176, 'classname': 'UploadCommand', 'endline': 185, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 4, 'lineno': 99, 'classname': 'WhoamiCommand', 'endline': 112, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'DeleteObjCommand', 'complexity': 4, 'lineno': 160, 'endline': 172, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 3, 'lineno': 161, 'classname': 'DeleteObjCommand', 'endline': 172, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'LoginCommand', 'complexity': 3, 'lineno': 71, 'endline': 95, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 2, 'lineno': 72, 'classname': 'LoginCommand', 'endline': 95, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'LogoutCommand', 'complexity': 3, 'lineno': 115, 'endline': 123, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 2, 'lineno': 116, 'classname': 'LogoutCommand', 'endline': 123, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 3, 'lineno': 161, 'classname': 'DeleteObjCommand', 'endline': 172, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'UserCommands', 'complexity': 2, 'lineno': 16, 'endline': 44, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'register_subcommand', 'complexity': 1, 'lineno': 18, 'classname': 'UserCommands', 'endline': 44, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'ANSI', 'complexity': 2, 'lineno': 47, 'endline': 62, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'bold', 'complexity': 1, 'lineno': 57, 'classname': 'ANSI', 'endline': 58, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'red', 'complexity': 1, 'lineno': 61, 'classname': 'ANSI', 'endline': 62, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BaseUserCommand', 'complexity': 2, 'lineno': 65, 'endline': 68, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 66, 'classname': 'BaseUserCommand', 'endline': 68, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 2, 'lineno': 72, 'classname': 'LoginCommand', 'endline': 95, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 2, 'lineno': 116, 'classname': 'LogoutCommand', 'endline': 123, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'register_subcommand', 'complexity': 1, 'lineno': 18, 'classname': 'UserCommands', 'endline': 44, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'bold', 'complexity': 1, 'lineno': 57, 'classname': 'ANSI', 'endline': 58, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'red', 'complexity': 1, 'lineno': 61, 'classname': 'ANSI', 'endline': 62, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 66, 'classname': 'BaseUserCommand', 'endline': 68, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\__init__.py': [{'type': 'class', 'rank': 'A', 'name': 'BaseTransformersCLICommand', 'complexity': 2, 'lineno': 5, 'endline': 13, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'register_subcommand', 'complexity': 1, 'lineno': 8, 'classname': 'BaseTransformersCLICommand', 'endline': 9, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 1, 'lineno': 12, 'classname': 'BaseTransformersCLICommand', 'endline': 13, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'register_subcommand', 'complexity': 1, 'lineno': 8, 'classname': 'BaseTransformersCLICommand', 'endline': 9, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'run', 'complexity': 1, 'lineno': 12, 'classname': 'BaseTransformersCLICommand', 'endline': 13, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\data_collator.py': [{'type': 'function', 'rank': 'D', 'name': 'default_data_collator', 'complexity': 21, 'lineno': 19, 'endline': 65, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'DataCollatorForLanguageModeling', 'complexity': 4, 'lineno': 69, 'endline': 136, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__call__', 'complexity': 2, 'lineno': 80, 'classname': 'DataCollatorForLanguageModeling', 'endline': 88, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_tensorize_batch', 'complexity': 4, 'lineno': 90, 'classname': 'DataCollatorForLanguageModeling', 'endline': 101, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'mask_tokens', 'complexity': 4, 'lineno': 103, 'classname': 'DataCollatorForLanguageModeling', 'endline': 136, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_tensorize_batch', 'complexity': 4, 'lineno': 90, 'classname': 'DataCollatorForLanguageModeling', 'endline': 101, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'mask_tokens', 'complexity': 4, 'lineno': 103, 'classname': 'DataCollatorForLanguageModeling', 'endline': 136, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__call__', 'complexity': 2, 'lineno': 80, 'classname': 'DataCollatorForLanguageModeling', 'endline': 88, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\datasets\\glue.py': [{'type': 'method', 'rank': 'C', 'name': '__init__', 'complexity': 11, 'lineno': 68, 'classname': 'GlueDataset', 'endline': 136, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'GlueDataset', 'complexity': 4, 'lineno': 58, 'endline': 146, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'C', 'name': '__init__', 'complexity': 11, 'lineno': 68, 'classname': 'GlueDataset', 'endline': 136, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 139, 'classname': 'GlueDataset', 'endline': 140, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getitem__', 'complexity': 1, 'lineno': 142, 'classname': 'GlueDataset', 'endline': 143, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 145, 'classname': 'GlueDataset', 'endline': 146, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'GlueDataTrainingArguments', 'complexity': 2, 'lineno': 24, 'endline': 49, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__post_init__', 'complexity': 1, 'lineno': 48, 'classname': 'GlueDataTrainingArguments', 'endline': 49, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__post_init__', 'complexity': 1, 'lineno': 48, 'classname': 'GlueDataTrainingArguments', 'endline': 49, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'Split', 'complexity': 1, 'lineno': 52, 'endline': 55, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 139, 'classname': 'GlueDataset', 'endline': 140, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getitem__', 'complexity': 1, 'lineno': 142, 'classname': 'GlueDataset', 'endline': 143, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 145, 'classname': 'GlueDataset', 'endline': 146, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\datasets\\language_modeling.py': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 5, 'lineno': 22, 'classname': 'TextDataset', 'endline': 68, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 5, 'lineno': 84, 'classname': 'LineByLineTextDataset', 'endline': 95, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'TextDataset', 'complexity': 3, 'lineno': 16, 'endline': 75, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 5, 'lineno': 22, 'classname': 'TextDataset', 'endline': 68, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 71, 'classname': 'TextDataset', 'endline': 72, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getitem__', 'complexity': 1, 'lineno': 74, 'classname': 'TextDataset', 'endline': 75, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'LineByLineTextDataset', 'complexity': 3, 'lineno': 78, 'endline': 101, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 5, 'lineno': 84, 'classname': 'LineByLineTextDataset', 'endline': 95, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 97, 'classname': 'LineByLineTextDataset', 'endline': 98, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getitem__', 'complexity': 1, 'lineno': 100, 'classname': 'LineByLineTextDataset', 'endline': 101, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 71, 'classname': 'TextDataset', 'endline': 72, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getitem__', 'complexity': 1, 'lineno': 74, 'classname': 'TextDataset', 'endline': 75, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 97, 'classname': 'LineByLineTextDataset', 'endline': 98, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getitem__', 'complexity': 1, 'lineno': 100, 'classname': 'LineByLineTextDataset', 'endline': 101, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\metrics\\squad_metrics.py': [{'type': 'function', 'rank': 'F', 'name': 'compute_predictions_logits', 'complexity': 41, 'lineno': 371, 'endline': 573, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'D', 'name': 'compute_predictions_log_probs', 'complexity': 23, 'lineno': 576, 'endline': 763, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'C', 'name': 'get_final_text', 'complexity': 14, 'lineno': 242, 'endline': 333, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': '_strip_spaces', 'complexity': 3, 'lineno': 270, 'endline': 279, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'C', 'name': 'find_best_thresh_v2', 'complexity': 11, 'lineno': 133, 'endline': 164, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'C', 'name': 'squad_evaluate', 'complexity': 11, 'lineno': 211, 'endline': 239, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'get_raw_scores', 'complexity': 8, 'lineno': 70, 'endline': 93, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'find_best_thresh', 'complexity': 8, 'lineno': 178, 'endline': 198, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': '_compute_softmax', 'complexity': 7, 'lineno': 348, 'endline': 368, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'compute_f1', 'complexity': 4, 'lineno': 54, 'endline': 67, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'make_eval_dict', 'complexity': 4, 'lineno': 107, 'endline': 123, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'apply_no_ans_threshold', 'complexity': 3, 'lineno': 96, 'endline': 104, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': '_get_best_indexes', 'complexity': 3, 'lineno': 336, 'endline': 345, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'get_tokens', 'complexity': 2, 'lineno': 44, 'endline': 47, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'merge_eval', 'complexity': 2, 'lineno': 128, 'endline': 130, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'normalize_answer', 'complexity': 1, 'lineno': 24, 'endline': 41, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'remove_articles', 'complexity': 1, 'lineno': 27, 'endline': 29, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'white_space_fix', 'complexity': 1, 'lineno': 31, 'endline': 32, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'remove_punc', 'complexity': 3, 'lineno': 34, 'endline': 36, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'lower', 'complexity': 1, 'lineno': 38, 'endline': 39, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'compute_exact', 'complexity': 1, 'lineno': 50, 'endline': 51, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'find_all_best_thresh_v2', 'complexity': 1, 'lineno': 167, 'endline': 175, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'find_all_best_thresh', 'complexity': 1, 'lineno': 201, 'endline': 208, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\metrics\\__init__.py': [{'type': 'function', 'rank': 'C', 'name': 'glue_compute_metrics', 'complexity': 13, 'lineno': 53, 'endline': 78, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'xnli_compute_metrics', 'complexity': 3, 'lineno': 80, 'endline': 85, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'is_sklearn_available', 'complexity': 1, 'lineno': 26, 'endline': 27, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'simple_accuracy', 'complexity': 1, 'lineno': 32, 'endline': 33, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'acc_and_f1', 'complexity': 1, 'lineno': 35, 'endline': 41, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'pearson_and_spearman', 'complexity': 1, 'lineno': 44, 'endline': 50, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\processors\\glue.py': [{'type': 'function', 'rank': 'C', 'name': '_glue_convert_examples_to_features', 'complexity': 11, 'lineno': 98, 'endline': 150, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'label_from_example', 'complexity': 4, 'lineno': 120, 'endline': 127, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '_create_examples', 'complexity': 7, 'lineno': 410, 'classname': 'QqpProcessor', 'endline': 427, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_create_examples', 'complexity': 5, 'lineno': 283, 'classname': 'ColaProcessor', 'endline': 295, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_create_examples', 'complexity': 5, 'lineno': 326, 'classname': 'Sst2Processor', 'endline': 337, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'glue_convert_examples_to_features', 'complexity': 4, 'lineno': 35, 'endline': 65, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': '_tf_glue_convert_examples_to_features', 'complexity': 4, 'lineno': 71, 'endline': 94, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'gen', 'complexity': 4, 'lineno': 83, 'endline': 87, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '_create_examples', 'complexity': 4, 'lineno': 187, 'classname': 'MrpcProcessor', 'endline': 198, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_create_examples', 'complexity': 4, 'lineno': 229, 'classname': 'MnliProcessor', 'endline': 240, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_create_examples', 'complexity': 4, 'lineno': 368, 'classname': 'StsbProcessor', 'endline': 379, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_create_examples', 'complexity': 4, 'lineno': 458, 'classname': 'QnliProcessor', 'endline': 469, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_create_examples', 'complexity': 4, 'lineno': 500, 'classname': 'RteProcessor', 'endline': 511, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_create_examples', 'complexity': 4, 'lineno': 542, 'classname': 'WnliProcessor', 'endline': 553, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'QqpProcessor', 'complexity': 3, 'lineno': 382, 'endline': 427, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 385, 'classname': 'QqpProcessor', 'endline': 391, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 394, 'classname': 'QqpProcessor', 'endline': 396, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 398, 'classname': 'QqpProcessor', 'endline': 400, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 402, 'classname': 'QqpProcessor', 'endline': 404, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 406, 'classname': 'QqpProcessor', 'endline': 408, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_create_examples', 'complexity': 7, 'lineno': 410, 'classname': 'QqpProcessor', 'endline': 427, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'MrpcProcessor', 'complexity': 2, 'lineno': 158, 'endline': 198, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 161, 'classname': 'MrpcProcessor', 'endline': 167, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 170, 'classname': 'MrpcProcessor', 'endline': 173, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 175, 'classname': 'MrpcProcessor', 'endline': 177, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 179, 'classname': 'MrpcProcessor', 'endline': 181, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 183, 'classname': 'MrpcProcessor', 'endline': 185, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_create_examples', 'complexity': 4, 'lineno': 187, 'classname': 'MrpcProcessor', 'endline': 198, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'MnliProcessor', 'complexity': 2, 'lineno': 201, 'endline': 240, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 204, 'classname': 'MnliProcessor', 'endline': 210, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 213, 'classname': 'MnliProcessor', 'endline': 215, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 217, 'classname': 'MnliProcessor', 'endline': 219, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 221, 'classname': 'MnliProcessor', 'endline': 223, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 225, 'classname': 'MnliProcessor', 'endline': 227, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_create_examples', 'complexity': 4, 'lineno': 229, 'classname': 'MnliProcessor', 'endline': 240, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'MnliMismatchedProcessor', 'complexity': 2, 'lineno': 243, 'endline': 252, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 246, 'classname': 'MnliMismatchedProcessor', 'endline': 248, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 250, 'classname': 'MnliMismatchedProcessor', 'endline': 252, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'ColaProcessor', 'complexity': 2, 'lineno': 255, 'endline': 295, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 258, 'classname': 'ColaProcessor', 'endline': 264, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 267, 'classname': 'ColaProcessor', 'endline': 269, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 271, 'classname': 'ColaProcessor', 'endline': 273, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 275, 'classname': 'ColaProcessor', 'endline': 277, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 279, 'classname': 'ColaProcessor', 'endline': 281, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_create_examples', 'complexity': 5, 'lineno': 283, 'classname': 'ColaProcessor', 'endline': 295, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'Sst2Processor', 'complexity': 2, 'lineno': 298, 'endline': 337, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 301, 'classname': 'Sst2Processor', 'endline': 307, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 310, 'classname': 'Sst2Processor', 'endline': 312, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 314, 'classname': 'Sst2Processor', 'endline': 316, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 318, 'classname': 'Sst2Processor', 'endline': 320, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 322, 'classname': 'Sst2Processor', 'endline': 324, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_create_examples', 'complexity': 5, 'lineno': 326, 'classname': 'Sst2Processor', 'endline': 337, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'StsbProcessor', 'complexity': 2, 'lineno': 340, 'endline': 379, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 343, 'classname': 'StsbProcessor', 'endline': 349, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 352, 'classname': 'StsbProcessor', 'endline': 354, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 356, 'classname': 'StsbProcessor', 'endline': 358, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 360, 'classname': 'StsbProcessor', 'endline': 362, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 364, 'classname': 'StsbProcessor', 'endline': 366, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_create_examples', 'complexity': 4, 'lineno': 368, 'classname': 'StsbProcessor', 'endline': 379, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'QnliProcessor', 'complexity': 2, 'lineno': 430, 'endline': 469, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 433, 'classname': 'QnliProcessor', 'endline': 439, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 442, 'classname': 'QnliProcessor', 'endline': 444, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 446, 'classname': 'QnliProcessor', 'endline': 448, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 450, 'classname': 'QnliProcessor', 'endline': 452, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 454, 'classname': 'QnliProcessor', 'endline': 456, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_create_examples', 'complexity': 4, 'lineno': 458, 'classname': 'QnliProcessor', 'endline': 469, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'RteProcessor', 'complexity': 2, 'lineno': 472, 'endline': 511, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 475, 'classname': 'RteProcessor', 'endline': 481, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 484, 'classname': 'RteProcessor', 'endline': 486, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 488, 'classname': 'RteProcessor', 'endline': 490, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 492, 'classname': 'RteProcessor', 'endline': 494, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 496, 'classname': 'RteProcessor', 'endline': 498, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_create_examples', 'complexity': 4, 'lineno': 500, 'classname': 'RteProcessor', 'endline': 511, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'WnliProcessor', 'complexity': 2, 'lineno': 514, 'endline': 553, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 517, 'classname': 'WnliProcessor', 'endline': 523, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 526, 'classname': 'WnliProcessor', 'endline': 528, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 530, 'classname': 'WnliProcessor', 'endline': 532, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 534, 'classname': 'WnliProcessor', 'endline': 536, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 538, 'classname': 'WnliProcessor', 'endline': 540, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_create_examples', 'complexity': 4, 'lineno': 542, 'classname': 'WnliProcessor', 'endline': 553, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'OutputMode', 'complexity': 1, 'lineno': 153, 'endline': 155, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 161, 'classname': 'MrpcProcessor', 'endline': 167, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 170, 'classname': 'MrpcProcessor', 'endline': 173, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 175, 'classname': 'MrpcProcessor', 'endline': 177, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 179, 'classname': 'MrpcProcessor', 'endline': 181, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 183, 'classname': 'MrpcProcessor', 'endline': 185, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 204, 'classname': 'MnliProcessor', 'endline': 210, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 213, 'classname': 'MnliProcessor', 'endline': 215, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 217, 'classname': 'MnliProcessor', 'endline': 219, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 221, 'classname': 'MnliProcessor', 'endline': 223, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 225, 'classname': 'MnliProcessor', 'endline': 227, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 246, 'classname': 'MnliMismatchedProcessor', 'endline': 248, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 250, 'classname': 'MnliMismatchedProcessor', 'endline': 252, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 258, 'classname': 'ColaProcessor', 'endline': 264, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 267, 'classname': 'ColaProcessor', 'endline': 269, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 271, 'classname': 'ColaProcessor', 'endline': 273, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 275, 'classname': 'ColaProcessor', 'endline': 277, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 279, 'classname': 'ColaProcessor', 'endline': 281, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 301, 'classname': 'Sst2Processor', 'endline': 307, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 310, 'classname': 'Sst2Processor', 'endline': 312, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 314, 'classname': 'Sst2Processor', 'endline': 316, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 318, 'classname': 'Sst2Processor', 'endline': 320, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 322, 'classname': 'Sst2Processor', 'endline': 324, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 343, 'classname': 'StsbProcessor', 'endline': 349, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 352, 'classname': 'StsbProcessor', 'endline': 354, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 356, 'classname': 'StsbProcessor', 'endline': 358, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 360, 'classname': 'StsbProcessor', 'endline': 362, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 364, 'classname': 'StsbProcessor', 'endline': 366, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 385, 'classname': 'QqpProcessor', 'endline': 391, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 394, 'classname': 'QqpProcessor', 'endline': 396, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 398, 'classname': 'QqpProcessor', 'endline': 400, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 402, 'classname': 'QqpProcessor', 'endline': 404, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 406, 'classname': 'QqpProcessor', 'endline': 408, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 433, 'classname': 'QnliProcessor', 'endline': 439, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 442, 'classname': 'QnliProcessor', 'endline': 444, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 446, 'classname': 'QnliProcessor', 'endline': 448, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 450, 'classname': 'QnliProcessor', 'endline': 452, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 454, 'classname': 'QnliProcessor', 'endline': 456, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 475, 'classname': 'RteProcessor', 'endline': 481, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 484, 'classname': 'RteProcessor', 'endline': 486, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 488, 'classname': 'RteProcessor', 'endline': 490, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 492, 'classname': 'RteProcessor', 'endline': 494, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 496, 'classname': 'RteProcessor', 'endline': 498, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 517, 'classname': 'WnliProcessor', 'endline': 523, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 526, 'classname': 'WnliProcessor', 'endline': 528, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 530, 'classname': 'WnliProcessor', 'endline': 532, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 534, 'classname': 'WnliProcessor', 'endline': 536, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 538, 'classname': 'WnliProcessor', 'endline': 540, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\processors\\squad.py': [{'type': 'function', 'rank': 'E', 'name': 'squad_convert_example_to_features', 'complexity': 33, 'lineno': 86, 'endline': 265, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'C', 'name': 'squad_convert_examples_to_features', 'complexity': 18, 'lineno': 273, 'endline': 491, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'gen', 'complexity': 3, 'lineno': 390, 'endline': 422, 'col_offset': 8, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': '_create_examples', 'complexity': 7, 'lineno': 601, 'classname': 'SquadProcessor', 'endline': 640, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'SquadExample', 'complexity': 7, 'lineno': 653, 'endline': 712, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 6, 'lineno': 668, 'classname': 'SquadExample', 'endline': 712, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'B', 'name': '_check_is_max_context', 'complexity': 6, 'lineno': 38, 'endline': 55, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': '_new_check_is_max_context', 'complexity': 6, 'lineno': 58, 'endline': 77, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': '_is_whitespace', 'complexity': 6, 'lineno': 80, 'endline': 83, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '__init__', 'complexity': 6, 'lineno': 668, 'classname': 'SquadExample', 'endline': 712, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'SquadProcessor', 'complexity': 5, 'lineno': 494, 'endline': 640, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '_get_example_from_tensor_dict', 'complexity': 3, 'lineno': 503, 'classname': 'SquadProcessor', 'endline': 524, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_examples_from_dataset', 'complexity': 3, 'lineno': 527, 'classname': 'SquadProcessor', 'endline': 556, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 4, 'lineno': 558, 'classname': 'SquadProcessor', 'endline': 578, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 4, 'lineno': 580, 'classname': 'SquadProcessor', 'endline': 599, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': '_create_examples', 'complexity': 7, 'lineno': 601, 'classname': 'SquadProcessor', 'endline': 640, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': '_improve_answer_span', 'complexity': 4, 'lineno': 25, 'endline': 35, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 4, 'lineno': 558, 'classname': 'SquadProcessor', 'endline': 578, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 4, 'lineno': 580, 'classname': 'SquadProcessor', 'endline': 599, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_get_example_from_tensor_dict', 'complexity': 3, 'lineno': 503, 'classname': 'SquadProcessor', 'endline': 524, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_examples_from_dataset', 'complexity': 3, 'lineno': 527, 'classname': 'SquadProcessor', 'endline': 556, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'SquadResult', 'complexity': 3, 'lineno': 778, 'endline': 796, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 788, 'classname': 'SquadResult', 'endline': 796, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'SquadFeatures', 'complexity': 2, 'lineno': 716, 'endline': 775, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 741, 'classname': 'SquadFeatures', 'endline': 775, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 2, 'lineno': 788, 'classname': 'SquadResult', 'endline': 796, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'squad_convert_example_to_features_init', 'complexity': 1, 'lineno': 268, 'endline': 270, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'SquadV1Processor', 'complexity': 1, 'lineno': 643, 'endline': 645, 'col_offset': 0, 'methods': []}, {'type': 'class', 'rank': 'A', 'name': 'SquadV2Processor', 'complexity': 1, 'lineno': 648, 'endline': 650, 'col_offset': 0, 'methods': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 741, 'classname': 'SquadFeatures', 'endline': 775, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\processors\\utils.py': [{'type': 'method', 'rank': 'E', 'name': 'get_features', 'complexity': 31, 'lineno': 227, 'classname': 'SingleSentenceClassificationProcessor', 'endline': 347, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'gen', 'complexity': 2, 'lineno': 321, 'endline': 323, 'col_offset': 12, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'name': 'add_examples', 'complexity': 10, 'lineno': 194, 'classname': 'SingleSentenceClassificationProcessor', 'endline': 225, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'SingleSentenceClassificationProcessor', 'complexity': 7, 'lineno': 124, 'endline': 347, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 127, 'classname': 'SingleSentenceClassificationProcessor', 'endline': 131, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 133, 'classname': 'SingleSentenceClassificationProcessor', 'endline': 134, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getitem__', 'complexity': 2, 'lineno': 136, 'classname': 'SingleSentenceClassificationProcessor', 'endline': 139, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_from_csv', 'complexity': 1, 'lineno': 142, 'classname': 'SingleSentenceClassificationProcessor', 'endline': 156, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_from_examples', 'complexity': 1, 'lineno': 159, 'classname': 'SingleSentenceClassificationProcessor', 'endline': 162, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'add_examples_from_csv', 'complexity': 5, 'lineno': 164, 'classname': 'SingleSentenceClassificationProcessor', 'endline': 191, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'add_examples', 'complexity': 10, 'lineno': 194, 'classname': 'SingleSentenceClassificationProcessor', 'endline': 225, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'E', 'name': 'get_features', 'complexity': 31, 'lineno': 227, 'classname': 'SingleSentenceClassificationProcessor', 'endline': 347, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'gen', 'complexity': 2, 'lineno': 321, 'endline': 323, 'col_offset': 12, 'closures': []}]}]}, {'type': 'method', 'rank': 'A', 'name': 'add_examples_from_csv', 'complexity': 5, 'lineno': 164, 'classname': 'SingleSentenceClassificationProcessor', 'endline': 191, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 3, 'lineno': 127, 'classname': 'SingleSentenceClassificationProcessor', 'endline': 131, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'InputExample', 'complexity': 2, 'lineno': 31, 'endline': 52, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'to_json_string', 'complexity': 1, 'lineno': 50, 'classname': 'InputExample', 'endline': 52, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'InputFeatures', 'complexity': 2, 'lineno': 56, 'endline': 79, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'to_json_string', 'complexity': 1, 'lineno': 77, 'classname': 'InputFeatures', 'endline': 79, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'DataProcessor', 'complexity': 2, 'lineno': 82, 'endline': 121, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 85, 'classname': 'DataProcessor', 'endline': 92, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 94, 'classname': 'DataProcessor', 'endline': 96, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 98, 'classname': 'DataProcessor', 'endline': 100, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 102, 'classname': 'DataProcessor', 'endline': 104, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 106, 'classname': 'DataProcessor', 'endline': 108, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'tfds_map', 'complexity': 2, 'lineno': 110, 'classname': 'DataProcessor', 'endline': 115, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_read_tsv', 'complexity': 1, 'lineno': 118, 'classname': 'DataProcessor', 'endline': 121, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': 'tfds_map', 'complexity': 2, 'lineno': 110, 'classname': 'DataProcessor', 'endline': 115, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__getitem__', 'complexity': 2, 'lineno': 136, 'classname': 'SingleSentenceClassificationProcessor', 'endline': 139, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_json_string', 'complexity': 1, 'lineno': 50, 'classname': 'InputExample', 'endline': 52, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'to_json_string', 'complexity': 1, 'lineno': 77, 'classname': 'InputFeatures', 'endline': 79, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_example_from_tensor_dict', 'complexity': 1, 'lineno': 85, 'classname': 'DataProcessor', 'endline': 92, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_train_examples', 'complexity': 1, 'lineno': 94, 'classname': 'DataProcessor', 'endline': 96, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_dev_examples', 'complexity': 1, 'lineno': 98, 'classname': 'DataProcessor', 'endline': 100, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 1, 'lineno': 102, 'classname': 'DataProcessor', 'endline': 104, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 106, 'classname': 'DataProcessor', 'endline': 108, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '_read_tsv', 'complexity': 1, 'lineno': 118, 'classname': 'DataProcessor', 'endline': 121, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': '__len__', 'complexity': 1, 'lineno': 133, 'classname': 'SingleSentenceClassificationProcessor', 'endline': 134, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_from_csv', 'complexity': 1, 'lineno': 142, 'classname': 'SingleSentenceClassificationProcessor', 'endline': 156, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'create_from_examples', 'complexity': 1, 'lineno': 159, 'classname': 'SingleSentenceClassificationProcessor', 'endline': 162, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\processors\\xnli.py': [{'type': 'method', 'rank': 'B', 'name': 'get_train_examples', 'complexity': 6, 'lineno': 36, 'classname': 'XnliProcessor', 'endline': 50, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 5, 'lineno': 52, 'classname': 'XnliProcessor', 'endline': 68, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'XnliProcessor', 'complexity': 4, 'lineno': 28, 'endline': 72, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 32, 'classname': 'XnliProcessor', 'endline': 34, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'name': 'get_train_examples', 'complexity': 6, 'lineno': 36, 'classname': 'XnliProcessor', 'endline': 50, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_test_examples', 'complexity': 5, 'lineno': 52, 'classname': 'XnliProcessor', 'endline': 68, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 70, 'classname': 'XnliProcessor', 'endline': 72, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'name': '__init__', 'complexity': 1, 'lineno': 32, 'classname': 'XnliProcessor', 'endline': 34, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'name': 'get_labels', 'complexity': 1, 'lineno': 70, 'classname': 'XnliProcessor', 'endline': 72, 'col_offset': 4, 'closures': []}]}","{'temp\\releases-downloaded\\transformers-3.0.1\\setup.py': {'loc': 152, 'lloc': 22, 'sloc': 96, 'comments': 16, 'multi': 27, 'blank': 26, 'single_comments': 3}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\activations.py': {'loc': 56, 'lloc': 26, 'sloc': 30, 'comments': 0, 'multi': 9, 'blank': 17, 'single_comments': 0}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_albert.py': {'loc': 144, 'lloc': 25, 'sloc': 53, 'comments': 15, 'multi': 59, 'blank': 16, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_auto.py': {'loc': 218, 'lloc': 51, 'sloc': 108, 'comments': 15, 'multi': 64, 'blank': 30, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_bart.py': {'loc': 148, 'lloc': 53, 'sloc': 95, 'comments': 24, 'multi': 10, 'blank': 22, 'single_comments': 21}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_bert.py': {'loc': 143, 'lloc': 24, 'sloc': 62, 'comments': 16, 'multi': 47, 'blank': 18, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_camembert.py': {'loc': 39, 'lloc': 9, 'sloc': 10, 'comments': 15, 'multi': 4, 'blank': 9, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_ctrl.py': {'loc': 138, 'lloc': 40, 'sloc': 57, 'comments': 14, 'multi': 44, 'blank': 22, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_distilbert.py': {'loc': 139, 'lloc': 33, 'sloc': 55, 'comments': 14, 'multi': 49, 'blank': 20, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_electra.py': {'loc': 158, 'lloc': 28, 'sloc': 53, 'comments': 15, 'multi': 69, 'blank': 20, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_encoder_decoder.py': {'loc': 104, 'lloc': 31, 'sloc': 32, 'comments': 15, 'multi': 35, 'blank': 22, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_flaubert.py': {'loc': 152, 'lloc': 14, 'sloc': 15, 'comments': 14, 'multi': 109, 'blank': 13, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_gpt2.py': {'loc': 177, 'lloc': 42, 'sloc': 67, 'comments': 15, 'multi': 69, 'blank': 25, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_longformer.py': {'loc': 68, 'lloc': 14, 'sloc': 17, 'comments': 14, 'multi': 21, 'blank': 15, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_marian.py': {'loc': 26, 'lloc': 6, 'sloc': 6, 'comments': 14, 'multi': 0, 'blank': 5, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_mmbt.py': {'loc': 42, 'lloc': 10, 'sloc': 8, 'comments': 15, 'multi': 10, 'blank': 8, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_mobilebert.py': {'loc': 159, 'lloc': 37, 'sloc': 61, 'comments': 12, 'multi': 65, 'blank': 20, 'single_comments': 13}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_openai.py': {'loc': 172, 'lloc': 41, 'sloc': 61, 'comments': 15, 'multi': 72, 'blank': 23, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_reformer.py': {'loc': 206, 'lloc': 40, 'sloc': 74, 'comments': 15, 'multi': 99, 'blank': 17, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_retribert.py': {'loc': 112, 'lloc': 25, 'sloc': 42, 'comments': 15, 'multi': 40, 'blank': 14, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_roberta.py': {'loc': 68, 'lloc': 12, 'sloc': 15, 'comments': 15, 'multi': 21, 'blank': 16, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_t5.py': {'loc': 113, 'lloc': 34, 'sloc': 56, 'comments': 14, 'multi': 27, 'blank': 15, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_transfo_xl.py': {'loc': 207, 'lloc': 61, 'sloc': 92, 'comments': 17, 'multi': 75, 'blank': 24, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_utils.py': {'loc': 408, 'lloc': 170, 'sloc': 171, 'comments': 32, 'multi': 137, 'blank': 69, 'single_comments': 31}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_xlm.py': {'loc': 252, 'lloc': 60, 'sloc': 103, 'comments': 16, 'multi': 110, 'blank': 24, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_xlm_roberta.py': {'loc': 42, 'lloc': 9, 'sloc': 13, 'comments': 15, 'multi': 4, 'blank': 9, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_xlnet.py': {'loc': 220, 'lloc': 59, 'sloc': 88, 'comments': 17, 'multi': 88, 'blank': 28, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_albert_original_tf_checkpoint_to_pytorch.py': {'loc': 61, 'lloc': 20, 'sloc': 30, 'comments': 18, 'multi': 0, 'blank': 12, 'single_comments': 19}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_bart_original_pytorch_checkpoint_to_pytorch.py': {'loc': 156, 'lloc': 93, 'sloc': 110, 'comments': 19, 'multi': 3, 'blank': 25, 'single_comments': 18}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_bert_original_tf_checkpoint_to_pytorch.py': {'loc': 61, 'lloc': 20, 'sloc': 30, 'comments': 18, 'multi': 0, 'blank': 12, 'single_comments': 19}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_bert_pytorch_checkpoint_to_original_tf.py': {'loc': 112, 'lloc': 48, 'sloc': 61, 'comments': 14, 'multi': 14, 'blank': 22, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_dialogpt_original_pytorch_checkpoint_to_pytorch.py': {'loc': 31, 'lloc': 20, 'sloc': 22, 'comments': 0, 'multi': 0, 'blank': 9, 'single_comments': 0}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_electra_original_tf_checkpoint_to_pytorch.py': {'loc': 79, 'lloc': 26, 'sloc': 47, 'comments': 18, 'multi': 0, 'blank': 13, 'single_comments': 19}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_gpt2_original_tf_checkpoint_to_pytorch.py': {'loc': 67, 'lloc': 27, 'sloc': 36, 'comments': 18, 'multi': 0, 'blank': 12, 'single_comments': 19}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_graph_to_onnx.py': {'loc': 252, 'lloc': 138, 'sloc': 171, 'comments': 16, 'multi': 11, 'blank': 55, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_longformer_original_pytorch_lightning_to_pytorch.py': {'loc': 86, 'lloc': 31, 'sloc': 48, 'comments': 20, 'multi': 0, 'blank': 17, 'single_comments': 21}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_marian_to_pytorch.py': {'loc': 539, 'lloc': 339, 'sloc': 427, 'comments': 22, 'multi': 3, 'blank': 96, 'single_comments': 13}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_mobilebert_original_tf_checkpoint_to_pytorch.py': {'loc': 42, 'lloc': 19, 'sloc': 30, 'comments': 4, 'multi': 0, 'blank': 8, 'single_comments': 4}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_openai_original_tf_checkpoint_to_pytorch.py': {'loc': 73, 'lloc': 27, 'sloc': 42, 'comments': 18, 'multi': 0, 'blank': 12, 'single_comments': 19}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_pytorch_checkpoint_to_tf2.py': {'loc': 374, 'lloc': 94, 'sloc': 314, 'comments': 28, 'multi': 0, 'blank': 32, 'single_comments': 28}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_reformer_trax_checkpoint_to_pytorch.py': {'loc': 208, 'lloc': 90, 'sloc': 140, 'comments': 31, 'multi': 0, 'blank': 36, 'single_comments': 32}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_roberta_original_pytorch_checkpoint_to_pytorch.py': {'loc': 172, 'lloc': 101, 'sloc': 118, 'comments': 30, 'multi': 3, 'blank': 25, 'single_comments': 26}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_t5_original_tf_checkpoint_to_pytorch.py': {'loc': 61, 'lloc': 20, 'sloc': 30, 'comments': 18, 'multi': 0, 'blank': 12, 'single_comments': 19}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_transfo_xl_original_tf_checkpoint_to_pytorch.py': {'loc': 125, 'lloc': 54, 'sloc': 88, 'comments': 21, 'multi': 0, 'blank': 15, 'single_comments': 22}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_xlm_original_pytorch_checkpoint_to_pytorch.py': {'loc': 79, 'lloc': 39, 'sloc': 42, 'comments': 18, 'multi': 0, 'blank': 18, 'single_comments': 19}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_xlnet_original_tf_checkpoint_to_pytorch.py': {'loc': 114, 'lloc': 39, 'sloc': 79, 'comments': 18, 'multi': 0, 'blank': 16, 'single_comments': 19}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\file_utils.py': {'loc': 808, 'lloc': 351, 'sloc': 536, 'comments': 35, 'multi': 60, 'blank': 189, 'single_comments': 23}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\generation_tf_utils.py': {'loc': 1093, 'lloc': 444, 'sloc': 670, 'comments': 139, 'multi': 122, 'blank': 179, 'single_comments': 122}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\generation_utils.py': {'loc': 989, 'lloc': 391, 'sloc': 616, 'comments': 118, 'multi': 118, 'blank': 152, 'single_comments': 103}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\hf_api.py': {'loc': 262, 'lloc': 144, 'sloc': 147, 'comments': 25, 'multi': 55, 'blank': 41, 'single_comments': 19}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\hf_argparser.py': {'loc': 160, 'lloc': 96, 'sloc': 96, 'comments': 5, 'multi': 44, 'blank': 15, 'single_comments': 5}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modelcard.py': {'loc': 214, 'lloc': 102, 'sloc': 103, 'comments': 23, 'multi': 42, 'blank': 40, 'single_comments': 29}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_albert.py': {'loc': 1193, 'lloc': 502, 'sloc': 735, 'comments': 59, 'multi': 196, 'blank': 217, 'single_comments': 45}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_auto.py': {'loc': 1714, 'lloc': 250, 'sloc': 669, 'comments': 15, 'multi': 771, 'blank': 259, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_bart.py': {'loc': 1283, 'lloc': 643, 'sloc': 885, 'comments': 74, 'multi': 150, 'blank': 184, 'single_comments': 64}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_bert.py': {'loc': 1569, 'lloc': 637, 'sloc': 982, 'comments': 78, 'multi': 266, 'blank': 264, 'single_comments': 57}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_camembert.py': {'loc': 137, 'lloc': 33, 'sloc': 70, 'comments': 16, 'multi': 24, 'blank': 27, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_ctrl.py': {'loc': 574, 'lloc': 261, 'sloc': 376, 'comments': 43, 'multi': 52, 'blank': 105, 'single_comments': 41}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_distilbert.py': {'loc': 938, 'lloc': 388, 'sloc': 537, 'comments': 89, 'multi': 210, 'blank': 161, 'single_comments': 30}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_electra.py': {'loc': 925, 'lloc': 361, 'sloc': 583, 'comments': 23, 'multi': 168, 'blank': 159, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_encoder_decoder.py': {'loc': 316, 'lloc': 87, 'sloc': 142, 'comments': 23, 'multi': 90, 'blank': 60, 'single_comments': 24}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_flaubert.py': {'loc': 370, 'lloc': 144, 'sloc': 230, 'comments': 51, 'multi': 31, 'blank': 62, 'single_comments': 47}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_gpt2.py': {'loc': 763, 'lloc': 352, 'sloc': 496, 'comments': 60, 'multi': 109, 'blank': 114, 'single_comments': 44}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_longformer.py': {'loc': 1568, 'lloc': 594, 'sloc': 957, 'comments': 153, 'multi': 210, 'blank': 271, 'single_comments': 130}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_marian.py': {'loc': 53, 'lloc': 11, 'sloc': 10, 'comments': 15, 'multi': 17, 'blank': 11, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_mmbt.py': {'loc': 371, 'lloc': 118, 'sloc': 245, 'comments': 20, 'multi': 52, 'blank': 57, 'single_comments': 17}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_mobilebert.py': {'loc': 1554, 'lloc': 695, 'sloc': 1013, 'comments': 98, 'multi': 231, 'blank': 230, 'single_comments': 80}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_openai.py': {'loc': 687, 'lloc': 332, 'sloc': 432, 'comments': 56, 'multi': 104, 'blank': 106, 'single_comments': 45}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_reformer.py': {'loc': 1979, 'lloc': 857, 'sloc': 1257, 'comments': 215, 'multi': 157, 'blank': 355, 'single_comments': 210}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_retribert.py': {'loc': 185, 'lloc': 80, 'sloc': 103, 'comments': 21, 'multi': 30, 'blank': 31, 'single_comments': 21}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_roberta.py': {'loc': 684, 'lloc': 241, 'sloc': 406, 'comments': 33, 'multi': 133, 'blank': 119, 'single_comments': 26}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_t5.py': {'loc': 1197, 'lloc': 566, 'sloc': 813, 'comments': 123, 'multi': 104, 'blank': 179, 'single_comments': 101}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_albert.py': {'loc': 1260, 'lloc': 541, 'sloc': 794, 'comments': 73, 'multi': 177, 'blank': 224, 'single_comments': 65}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_auto.py': {'loc': 1348, 'lloc': 175, 'sloc': 476, 'comments': 15, 'multi': 625, 'blank': 231, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_bert.py': {'loc': 1300, 'lloc': 554, 'sloc': 803, 'comments': 68, 'multi': 216, 'blank': 232, 'single_comments': 49}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_camembert.py': {'loc': 147, 'lloc': 32, 'sloc': 74, 'comments': 16, 'multi': 24, 'blank': 33, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_ctrl.py': {'loc': 593, 'lloc': 293, 'sloc': 386, 'comments': 44, 'multi': 44, 'blank': 120, 'single_comments': 43}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_distilbert.py': {'loc': 1070, 'lloc': 460, 'sloc': 649, 'comments': 86, 'multi': 209, 'blank': 176, 'single_comments': 36}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_electra.py': {'loc': 754, 'lloc': 297, 'sloc': 486, 'comments': 19, 'multi': 121, 'blank': 131, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_flaubert.py': {'loc': 371, 'lloc': 167, 'sloc': 266, 'comments': 56, 'multi': 2, 'blank': 49, 'single_comments': 54}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_gpt2.py': {'loc': 727, 'lloc': 348, 'sloc': 466, 'comments': 50, 'multi': 94, 'blank': 126, 'single_comments': 41}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_mobilebert.py': {'loc': 1436, 'lloc': 647, 'sloc': 911, 'comments': 88, 'multi': 201, 'blank': 255, 'single_comments': 69}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_openai.py': {'loc': 661, 'lloc': 314, 'sloc': 416, 'comments': 48, 'multi': 86, 'blank': 120, 'single_comments': 39}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_pytorch_utils.py': {'loc': 372, 'lloc': 191, 'sloc': 236, 'comments': 55, 'multi': 22, 'blank': 76, 'single_comments': 38}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_roberta.py': {'loc': 715, 'lloc': 264, 'sloc': 432, 'comments': 29, 'multi': 139, 'blank': 121, 'single_comments': 23}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_t5.py': {'loc': 1206, 'lloc': 567, 'sloc': 808, 'comments': 133, 'multi': 95, 'blank': 191, 'single_comments': 112}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_transfo_xl.py': {'loc': 882, 'lloc': 436, 'sloc': 615, 'comments': 85, 'multi': 45, 'blank': 160, 'single_comments': 62}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_transfo_xl_utilities.py': {'loc': 178, 'lloc': 112, 'sloc': 137, 'comments': 19, 'multi': 2, 'blank': 21, 'single_comments': 18}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_utils.py': {'loc': 783, 'lloc': 366, 'sloc': 412, 'comments': 52, 'multi': 189, 'blank': 133, 'single_comments': 49}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_xlm.py': {'loc': 1145, 'lloc': 513, 'sloc': 747, 'comments': 118, 'multi': 141, 'blank': 167, 'single_comments': 90}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_xlm_roberta.py': {'loc': 147, 'lloc': 32, 'sloc': 74, 'comments': 16, 'multi': 24, 'blank': 33, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_xlnet.py': {'loc': 1537, 'lloc': 648, 'sloc': 934, 'comments': 184, 'multi': 176, 'blank': 251, 'single_comments': 176}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_transfo_xl.py': {'loc': 1035, 'lloc': 592, 'sloc': 710, 'comments': 84, 'multi': 77, 'blank': 188, 'single_comments': 60}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_transfo_xl_utilities.py': {'loc': 249, 'lloc': 168, 'sloc': 152, 'comments': 26, 'multi': 28, 'blank': 44, 'single_comments': 25}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_utils.py': {'loc': 1259, 'lloc': 623, 'sloc': 685, 'comments': 107, 'multi': 286, 'blank': 203, 'single_comments': 85}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_xlm.py': {'loc': 1097, 'lloc': 454, 'sloc': 685, 'comments': 103, 'multi': 177, 'blank': 159, 'single_comments': 76}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_xlm_roberta.py': {'loc': 139, 'lloc': 32, 'sloc': 71, 'comments': 16, 'multi': 24, 'blank': 28, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_xlnet.py': {'loc': 1735, 'lloc': 702, 'sloc': 1109, 'comments': 128, 'multi': 261, 'blank': 257, 'single_comments': 108}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\optimization.py': {'loc': 267, 'lloc': 89, 'sloc': 94, 'comments': 28, 'multi': 97, 'blank': 48, 'single_comments': 28}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\optimization_tf.py': {'loc': 338, 'lloc': 133, 'sloc': 190, 'comments': 24, 'multi': 75, 'blank': 41, 'single_comments': 32}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\pipelines.py': {'loc': 1886, 'lloc': 698, 'sloc': 1006, 'comments': 88, 'multi': 480, 'blank': 314, 'single_comments': 86}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\testing_utils.py': {'loc': 120, 'lloc': 63, 'sloc': 58, 'comments': 5, 'multi': 25, 'blank': 32, 'single_comments': 5}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_albert.py': {'loc': 342, 'lloc': 132, 'sloc': 173, 'comments': 14, 'multi': 95, 'blank': 56, 'single_comments': 18}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_auto.py': {'loc': 224, 'lloc': 51, 'sloc': 103, 'comments': 14, 'multi': 72, 'blank': 34, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_bart.py': {'loc': 178, 'lloc': 65, 'sloc': 111, 'comments': 19, 'multi': 24, 'blank': 23, 'single_comments': 20}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_bert.py': {'loc': 671, 'lloc': 257, 'sloc': 367, 'comments': 37, 'multi': 172, 'blank': 89, 'single_comments': 43}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_bert_japanese.py': {'loc': 260, 'lloc': 101, 'sloc': 151, 'comments': 15, 'multi': 47, 'blank': 42, 'single_comments': 20}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_camembert.py': {'loc': 287, 'lloc': 100, 'sloc': 131, 'comments': 19, 'multi': 87, 'blank': 48, 'single_comments': 21}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_ctrl.py': {'loc': 267, 'lloc': 128, 'sloc': 176, 'comments': 19, 'multi': 27, 'blank': 41, 'single_comments': 23}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_distilbert.py': {'loc': 91, 'lloc': 26, 'sloc': 42, 'comments': 14, 'multi': 14, 'blank': 20, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_electra.py': {'loc': 81, 'lloc': 21, 'sloc': 38, 'comments': 14, 'multi': 14, 'blank': 15, 'single_comments': 14}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_flaubert.py': {'loc': 145, 'lloc': 57, 'sloc': 77, 'comments': 15, 'multi': 23, 'blank': 29, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_gpt2.py': {'loc': 377, 'lloc': 169, 'sloc': 217, 'comments': 17, 'multi': 81, 'blank': 59, 'single_comments': 20}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_longformer.py': {'loc': 60, 'lloc': 16, 'sloc': 31, 'comments': 17, 'multi': 0, 'blank': 12, 'single_comments': 17}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_marian.py': {'loc': 239, 'lloc': 137, 'sloc': 161, 'comments': 10, 'multi': 23, 'blank': 43, 'single_comments': 12}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_mobilebert.py': {'loc': 69, 'lloc': 22, 'sloc': 21, 'comments': 13, 'multi': 14, 'blank': 20, 'single_comments': 14}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_openai.py': {'loc': 270, 'lloc': 160, 'sloc': 155, 'comments': 16, 'multi': 47, 'blank': 47, 'single_comments': 21}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_reformer.py': {'loc': 180, 'lloc': 78, 'sloc': 94, 'comments': 25, 'multi': 26, 'blank': 31, 'single_comments': 29}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_retribert.py': {'loc': 76, 'lloc': 26, 'sloc': 27, 'comments': 14, 'multi': 14, 'blank': 20, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_roberta.py': {'loc': 373, 'lloc': 84, 'sloc': 167, 'comments': 17, 'multi': 129, 'blank': 59, 'single_comments': 18}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_t5.py': {'loc': 208, 'lloc': 90, 'sloc': 115, 'comments': 26, 'multi': 31, 'blank': 32, 'single_comments': 30}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_transfo_xl.py': {'loc': 795, 'lloc': 477, 'sloc': 561, 'comments': 49, 'multi': 43, 'blank': 140, 'single_comments': 51}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_utils.py': {'loc': 723, 'lloc': 300, 'sloc': 445, 'comments': 48, 'multi': 132, 'blank': 95, 'single_comments': 51}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_utils_base.py': {'loc': 2317, 'lloc': 875, 'sloc': 1405, 'comments': 102, 'multi': 453, 'blank': 343, 'single_comments': 116}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_utils_fast.py': {'loc': 454, 'lloc': 155, 'sloc': 282, 'comments': 29, 'multi': 79, 'blank': 64, 'single_comments': 29}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_xlm.py': {'loc': 973, 'lloc': 308, 'sloc': 724, 'comments': 22, 'multi': 147, 'blank': 77, 'single_comments': 25}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_xlm_roberta.py': {'loc': 311, 'lloc': 107, 'sloc': 142, 'comments': 23, 'multi': 87, 'blank': 56, 'single_comments': 26}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_xlnet.py': {'loc': 343, 'lloc': 140, 'sloc': 170, 'comments': 15, 'multi': 96, 'blank': 57, 'single_comments': 20}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\trainer.py': {'loc': 886, 'lloc': 506, 'sloc': 586, 'comments': 42, 'multi': 121, 'blank': 140, 'single_comments': 39}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\trainer_tf.py': {'loc': 576, 'lloc': 324, 'sloc': 339, 'comments': 4, 'multi': 109, 'blank': 118, 'single_comments': 10}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\trainer_utils.py': {'loc': 73, 'lloc': 47, 'sloc': 38, 'comments': 1, 'multi': 12, 'blank': 22, 'single_comments': 1}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\training_args.py': {'loc': 314, 'lloc': 144, 'sloc': 170, 'comments': 8, 'multi': 101, 'blank': 35, 'single_comments': 8}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\training_args_tf.py': {'loc': 190, 'lloc': 72, 'sloc': 76, 'comments': 1, 'multi': 94, 'blank': 19, 'single_comments': 1}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\__init__.py': {'loc': 628, 'lloc': 132, 'sloc': 558, 'comments': 23, 'multi': 0, 'blank': 48, 'single_comments': 22}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark.py': {'loc': 257, 'lloc': 150, 'sloc': 180, 'comments': 27, 'multi': 3, 'blank': 47, 'single_comments': 27}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark_args.py': {'loc': 86, 'lloc': 50, 'sloc': 55, 'comments': 16, 'multi': 0, 'blank': 15, 'single_comments': 16}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark_args_tf.py': {'loc': 105, 'lloc': 66, 'sloc': 71, 'comments': 18, 'multi': 0, 'blank': 17, 'single_comments': 17}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark_args_utils.py': {'loc': 130, 'lloc': 77, 'sloc': 90, 'comments': 15, 'multi': 10, 'blank': 15, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark_tf.py': {'loc': 229, 'lloc': 134, 'sloc': 164, 'comments': 26, 'multi': 3, 'blank': 37, 'single_comments': 25}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark_utils.py': {'loc': 868, 'lloc': 480, 'sloc': 547, 'comments': 26, 'multi': 144, 'blank': 155, 'single_comments': 22}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\__init__.py': {'loc': 0, 'lloc': 0, 'sloc': 0, 'comments': 0, 'multi': 0, 'blank': 0, 'single_comments': 0}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\convert.py': {'loc': 158, 'lloc': 75, 'sloc': 134, 'comments': 0, 'multi': 9, 'blank': 15, 'single_comments': 0}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\download.py': {'loc': 32, 'lloc': 20, 'sloc': 24, 'comments': 0, 'multi': 0, 'blank': 8, 'single_comments': 0}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\env.py': {'loc': 58, 'lloc': 36, 'sloc': 43, 'comments': 2, 'multi': 0, 'blank': 13, 'single_comments': 2}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\run.py': {'loc': 96, 'lloc': 48, 'sloc': 80, 'comments': 2, 'multi': 0, 'blank': 15, 'single_comments': 1}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\serving.py': {'loc': 214, 'lloc': 99, 'sloc': 138, 'comments': 2, 'multi': 37, 'blank': 37, 'single_comments': 2}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\train.py': {'loc': 144, 'lloc': 69, 'sloc': 110, 'comments': 2, 'multi': 9, 'blank': 23, 'single_comments': 2}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\transformers_cli.py': {'loc': 37, 'lloc': 24, 'sloc': 24, 'comments': 4, 'multi': 0, 'blank': 9, 'single_comments': 4}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\user.py': {'loc': 240, 'lloc': 181, 'sloc': 193, 'comments': 4, 'multi': 11, 'blank': 33, 'single_comments': 3}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\__init__.py': {'loc': 13, 'lloc': 10, 'sloc': 10, 'comments': 0, 'multi': 0, 'blank': 3, 'single_comments': 0}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\data_collator.py': {'loc': 136, 'lloc': 79, 'sloc': 77, 'comments': 14, 'multi': 22, 'blank': 24, 'single_comments': 13}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\__init__.py': {'loc': 27, 'lloc': 4, 'sloc': 21, 'comments': 3, 'multi': 0, 'blank': 3, 'single_comments': 3}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\datasets\\glue.py': {'loc': 146, 'lloc': 82, 'sloc': 110, 'comments': 5, 'multi': 10, 'blank': 21, 'single_comments': 5}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\datasets\\language_modeling.py': {'loc': 101, 'lloc': 53, 'sloc': 60, 'comments': 9, 'multi': 8, 'blank': 25, 'single_comments': 8}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\datasets\\__init__.py': {'loc': 6, 'lloc': 2, 'sloc': 2, 'comments': 3, 'multi': 0, 'blank': 1, 'single_comments': 3}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\metrics\\squad_metrics.py': {'loc': 763, 'lloc': 471, 'sloc': 529, 'comments': 80, 'multi': 14, 'blank': 145, 'single_comments': 75}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\metrics\\__init__.py': {'loc': 85, 'lloc': 62, 'sloc': 59, 'comments': 15, 'multi': 0, 'blank': 11, 'single_comments': 15}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\processors\\glue.py': {'loc': 592, 'lloc': 355, 'sloc': 382, 'comments': 15, 'multi': 18, 'blank': 110, 'single_comments': 82}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\processors\\squad.py': {'loc': 796, 'lloc': 365, 'sloc': 559, 'comments': 17, 'multi': 100, 'blank': 119, 'single_comments': 18}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\processors\\utils.py': {'loc': 347, 'lloc': 196, 'sloc': 213, 'comments': 20, 'multi': 49, 'blank': 56, 'single_comments': 29}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\processors\\xnli.py': {'loc': 85, 'lloc': 51, 'sloc': 49, 'comments': 15, 'multi': 2, 'blank': 15, 'single_comments': 19}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\processors\\__init__.py': {'loc': 8, 'lloc': 4, 'sloc': 4, 'comments': 3, 'multi': 0, 'blank': 1, 'single_comments': 3}}","{'temp\\releases-downloaded\\transformers-3.0.1\\setup.py': {'total': [2, 8, 4, 8, 10, 12, 26.0, 39.863137138648355, 1.0, 39.863137138648355, 2.214618729924908, 0.013287712379549002], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\activations.py': {'total': [5, 38, 22, 44, 43, 66, 211.03088598529305, 358.13347381033844, 2.894736842105263, 1036.702161029927, 57.59456450166262, 0.11937782460344601], 'functions': [['swish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_gelu_python', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['gelu_new', [3, 13, 7, 14, 16, 21, 52.860603837997665, 84.0, 1.615384615384615, 135.6923076923077, 7.538461538461539, 0.028]], ['gelu_fast', [2, 12, 8, 16, 14, 24, 45.01955000865388, 91.37651812938249, 1.333333333333333, 121.83535750584332, 6.768630972546851, 0.030458839376460004]], ['get_activation', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_albert.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_auto.py': {'total': [1, 6, 3, 6, 7, 9, 15.509775004326936, 25.26619429851844, 0.5, 12.63309714925922, 0.701838730514401, 0.008422064766172], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['for_model', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['from_pretrained', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_bart.py': {'total': [4, 7, 4, 10, 11, 14, 27.651484454403228, 48.43204266092217, 2.857142857142857, 138.3772647454919, 7.687625819193995, 0.016144014220307], 'functions': [['__init__', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['num_attention_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['hidden_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['is_valid_mbart', [2, 3, 2, 6, 5, 8, 6.754887502163469, 18.575424759098897, 2.0, 37.150849518197795, 2.063936084344321, 0.006191808253032001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_bert.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_camembert.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_ctrl.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['max_position_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['hidden_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_attention_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_hidden_layers', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_distilbert.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['hidden_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_attention_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_hidden_layers', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_electra.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_encoder_decoder.py': {'total': [2, 5, 3, 6, 7, 9, 13.60964047443681, 25.26619429851844, 1.2, 30.319433158222125, 1.684412953234562, 0.008422064766172], 'functions': [['__init__', [2, 5, 3, 6, 7, 9, 13.60964047443681, 25.26619429851844, 1.2, 30.319433158222125, 1.684412953234562, 0.008422064766172]], ['from_encoder_decoder_configs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_flaubert.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_gpt2.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['max_position_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['hidden_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_attention_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_hidden_layers', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_longformer.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_marian.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_mmbt.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_mobilebert.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_openai.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['max_position_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['hidden_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_attention_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_hidden_layers', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_reformer.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_retribert.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_roberta.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_t5.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['max_position_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['hidden_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_attention_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_hidden_layers', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_transfo_xl.py': {'total': [2, 12, 6, 12, 14, 18, 45.01955000865388, 68.53238859703687, 1.0, 68.53238859703687, 3.807354922057603, 0.022844129532345003], 'functions': [['__init__', [2, 8, 4, 8, 10, 12, 26.0, 39.863137138648355, 1.0, 39.863137138648355, 2.214618729924908, 0.013287712379549002]], ['max_position_embeddings', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['n_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['n_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['hidden_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_attention_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_hidden_layers', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_utils.py': {'total': [7, 18, 10, 20, 25, 30, 94.71013448036484, 139.31568569324173, 3.8888888888888893, 541.7832221403845, 30.099067896688027, 0.046438561897747005], 'functions': [['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['num_labels', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_labels', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_pretrained', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_config_dict', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['from_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_dict_from_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__eq__', [1, 1, 1, 2, 2, 3, 0.0, 3.0, 1.0, 3.0, 0.16666666666666602, 0.001]], ['__repr__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_diff_dict', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['to_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_json_string', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['to_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['update', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_xlm.py': {'total': [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001], 'functions': [['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['n_words', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['n_words', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['hidden_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_attention_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_hidden_layers', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_xlm_roberta.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\configuration_xlnet.py': {'total': [5, 9, 8, 15, 14, 23, 40.13896548741762, 87.56916320732489, 4.166666666666667, 364.87151336385375, 20.27063963132521, 0.029189721069108002], 'functions': [['__init__', [4, 8, 7, 14, 12, 21, 32.0, 75.28421251514429, 3.5, 263.494743803005, 14.638596877944723, 0.025094737505048002]], ['max_position_embeddings', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['n_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['n_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['hidden_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_attention_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_hidden_layers', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_albert_original_tf_checkpoint_to_pytorch.py': {'total': [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001], 'functions': [['convert_tf_checkpoint_to_pytorch', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_bart_original_pytorch_checkpoint_to_pytorch.py': {'total': [4, 13, 8, 15, 17, 23, 56.105716335834195, 94.01164534875782, 2.307692307692307, 216.94995080482573, 12.05277504471254, 0.031337215116252], 'functions': [['remove_ignore_keys_', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['rename_key', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['load_xsum_checkpoint', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_checkpoint_from_disk', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_bart_checkpoint', [3, 9, 6, 11, 12, 17, 33.28421251514428, 60.94436251225966, 1.833333333333333, 111.73133127247604, 6.207296181804224, 0.020314787504086003]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_bert_original_tf_checkpoint_to_pytorch.py': {'total': [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001], 'functions': [['convert_tf_checkpoint_to_pytorch', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_bert_pytorch_checkpoint_to_original_tf.py': {'total': [4, 7, 4, 7, 11, 11, 27.651484454403228, 38.053747805010275, 2.0, 76.10749561002055, 4.228194200556697, 0.012684582601670002], 'functions': [['convert_pytorch_checkpoint_to_tf', [3, 5, 3, 5, 8, 8, 16.36452797660028, 24.0, 1.5, 36.0, 2.0, 0.008]], ['main', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_dialogpt_original_pytorch_checkpoint_to_pytorch.py': {'total': [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001], 'functions': [['convert_dialogpt_checkpoint', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_electra_original_tf_checkpoint_to_pytorch.py': {'total': [1, 5, 3, 6, 6, 9, 11.60964047443681, 23.264662506490403, 0.6000000000000001, 13.95879750389424, 0.7754887502163461, 0.007754887502163001], 'functions': [['convert_tf_checkpoint_to_pytorch', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_gpt2_original_tf_checkpoint_to_pytorch.py': {'total': [2, 10, 6, 12, 12, 18, 35.219280948873624, 64.52932501298082, 1.2, 77.43519001557698, 4.301955000865387, 0.021509775004326003], 'functions': [['convert_gpt2_checkpoint_to_pytorch', [2, 8, 5, 10, 10, 15, 26.0, 49.82892142331044, 1.25, 62.28615177913805, 3.460341765507669, 0.016609640474436003]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_graph_to_onnx.py': {'total': [7, 32, 20, 33, 39, 53, 179.65148445440323, 280.1263175996992, 3.609375, 1011.0809275864142, 56.17116264368968, 0.093375439199899], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['ensure_valid_input', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['infer_shapes', [3, 10, 6, 10, 13, 16, 37.974168451037094, 59.207035490257475, 1.5, 88.81055323538621, 4.933919624188123, 0.019735678496752]], ['load_graph_from_args', [4, 11, 7, 12, 15, 19, 46.053747805010275, 74.23092131656186, 2.181818181818181, 161.9583737815895, 8.997687432310528, 0.024743640438853003]], ['convert_pytorch', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['convert_tensorflow', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['convert', [3, 5, 3, 5, 8, 8, 16.36452797660028, 24.0, 1.5, 36.0, 2.0, 0.008]], ['verify', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_longformer_original_pytorch_lightning_to_pytorch.py': {'total': [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_longformer_qa_checkpoint_to_pytorch', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_marian_to_pytorch.py': {'total': [12, 121, 77, 139, 133, 216, 880.20200171888, 1523.941006068257, 6.892561983471074, 10503.857843478729, 583.5476579710405, 0.507980335356085], 'functions': [['remove_prefix', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_encoder_layer', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['load_layers_', [1, 2, 2, 4, 3, 6, 2.0, 9.509775004326938, 1.0, 9.509775004326938, 0.5283208335737181, 0.0031699250014420003]], ['find_pretrained_model', [3, 8, 4, 8, 11, 12, 28.75488750216347, 41.51317942364757, 1.5, 62.26976913547136, 3.459431618637297, 0.013837726474549]], ['add_emb_entries', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_cast_yaml_str', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['cast_marian_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['load_config_from_state_dict', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['find_model_file', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['convert_opus_name_to_hf_name', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_hf_name_to_opus_name', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['write_model_card', [3, 11, 6, 11, 14, 17, 42.808635307173745, 64.72503367497926, 1.5, 97.08755051246888, 5.393752806248271, 0.021575011224993]], ['get_clean_model_id_mapping', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['make_registry', [5, 11, 7, 12, 16, 19, 49.663388279447084, 76.0, 2.727272727272727, 207.27272727272725, 11.515151515151514, 0.025333333333333003]], ['convert_all_sentencepiece_models', [4, 11, 8, 15, 15, 23, 46.053747805010275, 89.85848369899593, 2.727272727272727, 245.0685919063525, 13.614921772575139, 0.029952827899665004]], ['lmap', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['fetch_test_set', [1, 3, 2, 3, 4, 5, 4.754887502163469, 10.0, 0.5, 5.0, 0.277777777777777, 0.003333333333333]], ['convert_whole_dir', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_parse_readme', [4, 5, 5, 7, 9, 12, 19.60964047443681, 38.03910001730775, 2.8, 106.5094800484617, 5.91719333602565, 0.012679700005769]], ['save_tokenizer_config', [2, 3, 3, 4, 5, 7, 6.754887502163469, 16.253496664211536, 1.333333333333333, 21.67132888561538, 1.203962715867521, 0.005417832221403]], ['add_to_vocab_', [2, 6, 4, 8, 8, 12, 17.509775004326936, 36.0, 1.333333333333333, 48.0, 2.666666666666666, 0.012]], ['find_vocab_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['add_special_tokens_to_vocab', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['save_tokenizer', [1, 4, 3, 6, 5, 9, 8.0, 20.89735285398626, 0.75, 15.673014640489694, 0.8707230355827601, 0.006965784284662001]], ['check_equal', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['check_marian_cfg_assumptions', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [7, 16, 10, 18, 23, 28, 83.65148445440323, 126.65973476959637, 3.9375, 498.7227056552857, 27.706816980849208, 0.042219911589865]], ['_check_layer_entries', [1, 5, 3, 6, 6, 9, 11.60964047443681, 23.264662506490403, 0.6000000000000001, 13.95879750389424, 0.7754887502163461, 0.007754887502163001]], ['extra_keys', [2, 5, 2, 5, 7, 7, 13.60964047443681, 19.651484454403228, 1.0, 19.651484454403228, 1.091749136355734, 0.006550494818134]], ['sub_keys', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['load_marian_model', [4, 8, 5, 9, 12, 14, 32.0, 50.18947501009619, 2.25, 112.92631877271643, 6.273684376262024, 0.016729825003365003]], ['download_and_unzip', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['load_yaml', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_json', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['unzip', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_mobilebert_original_tf_checkpoint_to_pytorch.py': {'total': [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001], 'functions': [['convert_tf_checkpoint_to_pytorch', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_openai_original_tf_checkpoint_to_pytorch.py': {'total': [2, 10, 6, 12, 12, 18, 35.219280948873624, 64.52932501298082, 1.2, 77.43519001557698, 4.301955000865387, 0.021509775004326003], 'functions': [['convert_openai_checkpoint_to_pytorch', [2, 8, 5, 10, 10, 15, 26.0, 49.82892142331044, 1.25, 62.28615177913805, 3.460341765507669, 0.016609640474436003]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_pytorch_checkpoint_to_tf2.py': {'total': [11, 39, 31, 56, 50, 87, 244.18443434063795, 491.01548851040104, 7.897435897435898, 3877.763345159065, 215.4312969532814, 0.163671829503467], 'functions': [['convert_pt_checkpoint_to_tf', [5, 11, 7, 12, 16, 19, 49.663388279447084, 76.0, 2.727272727272727, 207.27272727272725, 11.515151515151514, 0.025333333333333003]], ['convert_all_pt_checkpoints_to_tf', [7, 22, 20, 36, 29, 56, 117.75898006442377, 272.04693572714405, 5.727272727272727, 1558.0869955281887, 86.56038864045493, 0.090682311909048]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_reformer_trax_checkpoint_to_pytorch.py': {'total': [6, 18, 19, 31, 24, 50, 90.56842503028855, 229.24812503605784, 5.166666666666667, 1184.4486460196322, 65.80270255664624, 0.076416041678685], 'functions': [['set_param', [2, 3, 3, 6, 5, 9, 6.754887502163469, 20.89735285398626, 2.0, 41.79470570797252, 2.321928094887362, 0.006965784284662001]], ['set_layer_weights_in_torch_lsh', [1, 1, 3, 3, 2, 6, 0.0, 6.0, 1.5, 9.0, 0.5, 0.002]], ['set_layer_weights_in_torch_local', [1, 1, 4, 4, 2, 8, 0.0, 8.0, 2.0, 16.0, 0.8888888888888881, 0.002666666666666]], ['set_block_weights_in_torch', [2, 3, 2, 4, 5, 6, 6.754887502163469, 13.931568569324174, 1.333333333333333, 18.575424759098897, 1.03196804217216, 0.004643856189774]], ['set_model_weights_in_torch', [3, 8, 6, 12, 11, 18, 28.75488750216347, 62.26976913547136, 2.25, 140.10698055481055, 7.78372114193392, 0.020756589711823002]], ['convert_trax_checkpoint_to_pytorch', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_roberta_original_pytorch_checkpoint_to_pytorch.py': {'total': [4, 9, 10, 17, 13, 27, 36.52932501298081, 99.91187238980949, 3.777777777777777, 377.44485125039137, 20.969158402799522, 0.033303957463269], 'functions': [['convert_roberta_checkpoint_to_pytorch', [3, 5, 8, 13, 8, 21, 16.36452797660028, 63.0, 3.9, 245.7, 13.649999999999999, 0.021]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_t5_original_tf_checkpoint_to_pytorch.py': {'total': [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001], 'functions': [['convert_tf_checkpoint_to_pytorch', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_transfo_xl_original_tf_checkpoint_to_pytorch.py': {'total': [2, 10, 6, 12, 12, 18, 35.219280948873624, 64.52932501298082, 1.2, 77.43519001557698, 4.301955000865387, 0.021509775004326003], 'functions': [['convert_transfo_xl_checkpoint_to_pytorch', [2, 8, 5, 10, 10, 15, 26.0, 49.82892142331044, 1.25, 62.28615177913805, 3.460341765507669, 0.016609640474436003]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_xlm_original_pytorch_checkpoint_to_pytorch.py': {'total': [7, 26, 17, 32, 33, 49, 141.86291712607164, 247.1753118485642, 4.307692307692307, 1064.7551895015074, 59.15306608341708, 0.082391770616188], 'functions': [['convert_xlm_checkpoint_to_pytorch', [7, 24, 16, 30, 31, 46, 129.690584471711, 227.8930302777963, 4.375, 997.0320074653588, 55.39066708140882, 0.075964343425932]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\convert_xlnet_original_tf_checkpoint_to_pytorch.py': {'total': [3, 6, 4, 8, 9, 12, 20.264662506490406, 38.03910001730775, 2.0, 76.0782000346155, 4.226566668589751, 0.012679700005769], 'functions': [['convert_xlnet_checkpoint_to_pytorch', [2, 4, 3, 6, 6, 9, 10.0, 23.264662506490403, 1.5, 34.89699375973561, 1.938721875540867, 0.007754887502163001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\file_utils.py': {'total': [13, 120, 77, 144, 133, 221, 876.9325878088565, 1559.217418245763, 7.8, 12161.895862316951, 675.6608812398306, 0.5197391394152541], 'functions': [['is_torch_available', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['is_tf_available', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['is_torch_tpu_available', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['is_psutil_available', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['is_py3nvml_available', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['is_apex_available', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['add_start_docstrings', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['add_start_docstrings_to_callable', [2, 8, 4, 8, 10, 12, 26.0, 39.863137138648355, 1.0, 39.863137138648355, 2.214618729924908, 0.013287712379549002]], ['add_end_docstrings', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['add_code_sample_docstrings', [4, 16, 11, 22, 20, 33, 72.0, 142.62362713128297, 2.75, 392.2149746110282, 21.78972081172379, 0.047541209043760004]], ['is_remote_url', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['hf_bucket_url', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['url_to_filename', [1, 5, 3, 6, 6, 9, 11.60964047443681, 23.264662506490403, 0.6000000000000001, 13.95879750389424, 0.7754887502163461, 0.007754887502163001]], ['filename_to_url', [3, 6, 4, 6, 9, 10, 20.264662506490406, 31.699250014423125, 1.5, 47.548875021634686, 2.641604167868593, 0.010566416671474]], ['cached_path', [5, 16, 9, 16, 21, 25, 75.60964047443682, 109.80793556946902, 2.5, 274.5198389236726, 15.251102162426255, 0.036602645189823]], ['http_get', [5, 19, 12, 24, 24, 36, 92.32026322986493, 165.05865002596164, 3.157894736842105, 521.2378421872473, 28.95765789929152, 0.055019550008653]], ['get_from_cache', [7, 24, 17, 28, 31, 45, 129.690584471711, 222.9388339674094, 4.083333333333333, 910.3335720335883, 50.57408733519935, 0.074312944655803]], ['__get__', [2, 6, 4, 8, 8, 12, 17.509775004326936, 36.0, 1.333333333333333, 48.0, 2.666666666666666, 0.012]], ['torch_required', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tf_required', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\generation_tf_utils.py': {'total': [19, 260, 266, 490, 279, 756, 2166.5262541428265, 6141.835711742865, 17.903846153846153, 109962.48168524244, 6109.026760291246, 2.047278570580955], 'functions': [['prepare_inputs_for_generation', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_use_cache', [5, 9, 5, 10, 14, 15, 40.13896548741762, 57.110323830864054, 2.777777777777777, 158.6397884190668, 8.813321578837044, 0.019036774610288]], ['generate', [11, 67, 85, 166, 78, 251, 444.481723565681, 1577.6359569344245, 13.626865671641792, 21498.23326389746, 1194.3462924387477, 0.525878652311474]], ['_generate_no_beam_search', [13, 39, 41, 73, 52, 114, 254.23640287146188, 649.8501278680845, 12.166666666666666, 7906.509889061695, 439.2505493923164, 0.21661670928936103]], ['_generate_beam_search', [17, 83, 85, 159, 100, 244, 598.6151411030505, 1621.100910305033, 16.283132530120483, 26396.60096719581, 1466.4778315108783, 0.540366970101677]], ['_reorder_cache', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_create_next_token_logits_penalties', [3, 4, 3, 6, 7, 9, 12.75488750216347, 25.26619429851844, 2.25, 56.848937171666485, 3.158274287314805, 0.008422064766172]], ['calc_banned_ngram_tokens', [4, 10, 7, 12, 14, 19, 41.219280948873624, 72.33974351909447, 2.4, 173.61538444582672, 9.645299135879263, 0.024113247839698003]], ['calc_banned_bad_words_ids', [4, 11, 8, 13, 15, 21, 46.053747805010275, 82.0447025077789, 2.363636363636363, 193.92384229111377, 10.773546793950764, 0.027348234169259]], ['tf_top_k_top_p_filtering', [3, 8, 13, 18, 11, 31, 28.75488750216347, 107.24238017775623, 3.375, 361.9430330999273, 20.107946283329294, 0.035747460059252]], ['scatter_values_on_batch_indices', [1, 1, 4, 4, 2, 8, 0.0, 8.0, 2.0, 16.0, 0.8888888888888881, 0.002666666666666]], ['set_tensor_by_indices_to_value', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['sample_without_replacement', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['shape_list', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__len__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['add', [5, 11, 6, 12, 16, 18, 49.663388279447084, 72.0, 2.727272727272727, 196.36363636363635, 10.909090909090908, 0.024]], ['is_done', [4, 8, 4, 8, 12, 12, 32.0, 43.01955000865388, 2.0, 86.03910001730776, 4.779950000961542, 0.014339850002884002]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\generation_utils.py': {'total': [20, 236, 230, 427, 256, 657, 1946.742321547142, 5256.0, 18.093220338983052, 95097.96610169492, 5283.220338983051, 1.752], 'functions': [['prepare_inputs_for_generation', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['adjust_logits_during_generation', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_use_cache', [5, 9, 5, 10, 14, 15, 40.13896548741762, 57.110323830864054, 2.777777777777777, 158.6397884190668, 8.813321578837044, 0.019036774610288]], ['enforce_repetition_penalty_', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['postprocess_next_token_scores', [7, 16, 10, 17, 23, 27, 83.65148445440323, 122.13617281353935, 3.71875, 454.1938926503494, 25.232994036130524, 0.040712057604513005]], ['generate', [11, 70, 87, 171, 81, 258, 467.103558991158, 1635.6813007442333, 13.435714285714285, 21976.546619285018, 1220.9192566269455, 0.5452271002480771]], ['_generate_no_beam_search', [11, 19, 21, 35, 30, 56, 118.7643705604384, 274.78587335407707, 10.131578947368421, 2784.0147695084124, 154.6674871949118, 0.091595291118025]], ['_generate_beam_search', [14, 65, 67, 124, 79, 191, 444.756876755656, 1204.0221229018266, 13.353846153846154, 16078.326195058238, 893.2403441699021, 0.40134070763394203]], ['_reorder_cache', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['calc_banned_ngram_tokens', [4, 10, 7, 12, 14, 19, 41.219280948873624, 72.33974351909447, 2.4, 173.61538444582672, 9.645299135879263, 0.024113247839698003]], ['calc_banned_bad_words_ids', [4, 11, 8, 13, 15, 21, 46.053747805010275, 82.0447025077789, 2.363636363636363, 193.92384229111377, 10.773546793950764, 0.027348234169259]], ['top_k_top_p_filtering', [3, 8, 10, 15, 11, 25, 28.75488750216347, 86.48579046593244, 2.8125, 243.24128568543497, 13.513404760301944, 0.028828596821977002]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__len__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['add', [5, 11, 6, 12, 16, 18, 49.663388279447084, 72.0, 2.727272727272727, 196.36363636363635, 10.909090909090908, 0.024]], ['is_done', [4, 8, 4, 8, 12, 12, 32.0, 43.01955000865388, 2.0, 86.03910001730776, 4.779950000961542, 0.014339850002884002]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\hf_api.py': {'total': [2, 7, 4, 8, 9, 12, 21.651484454403228, 38.03910001730775, 1.142857142857142, 43.47325716263743, 2.415180953479857, 0.012679700005769], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['login', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['whoami', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['logout', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['presign', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['presign_and_upload', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['list_objs', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['delete_obj', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['model_list', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_read', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['close', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['delete_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\hf_argparser.py': {'total': [7, 27, 19, 38, 34, 57, 148.0334470128169, 289.9853819512694, 4.925925925925926, 1428.44651109329, 79.35813950518278, 0.096661793983756], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_add_dataclass_arguments', [4, 15, 12, 24, 19, 36, 66.60335893412778, 152.92539048396907, 3.2, 489.36124954870104, 27.186736086038948, 0.050975130161323004]], ['parse_args_into_dataclasses', [5, 10, 6, 12, 15, 18, 44.82892142331043, 70.32403072095333, 3.0, 210.97209216286, 11.720671786825555, 0.023441343573651]], ['parse_json_file', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modelcard.py': {'total': [5, 12, 8, 16, 17, 24, 54.62919048309069, 98.09910819000817, 3.333333333333333, 326.99702730002724, 18.16650151666818, 0.032699702730002], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_pretrained', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [4, 9, 6, 12, 13, 18, 36.52932501298081, 66.60791492653966, 2.666666666666666, 177.62110647077242, 9.867839248376246, 0.022202638308846]], ['from_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__eq__', [1, 1, 1, 2, 2, 3, 0.0, 3.0, 1.0, 3.0, 0.16666666666666602, 0.001]], ['__repr__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_json_string', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['to_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_albert.py': {'total': [14, 147, 150, 264, 161, 414, 1111.654803599752, 3034.9995875394516, 12.571428571428571, 38154.28052906739, 2119.682251614855, 1.011666529179817], 'functions': [['load_tf_weights_in_albert', [7, 44, 27, 56, 51, 83, 259.8664756744443, 470.8113033836342, 4.454545454545454, 2097.2503514361883, 116.51390841312157, 0.156937101127878]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['prune_heads', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['forward', [5, 12, 10, 17, 17, 27, 54.62919048309069, 110.36149671375918, 3.541666666666666, 390.86363419456376, 21.71464634414243, 0.036787165571253]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 7, 4, 8, 8, 12, 19.651484454403228, 36.0, 0.5714285714285711, 20.57142857142857, 1.142857142857142, 0.012]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 15, 11, 21, 19, 32, 66.60335893412778, 135.93368043019473, 2.8, 380.6143052045452, 21.145239178030288, 0.045311226810064005]], ['_init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [3, 4, 3, 6, 7, 9, 12.75488750216347, 25.26619429851844, 2.25, 56.848937171666485, 3.158274287314805, 0.008422064766172]], ['forward', [7, 16, 15, 28, 23, 43, 83.65148445440323, 194.51316411045156, 6.125, 1191.3931301765158, 66.18850723202866, 0.06483772137015001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tie_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 15, 12, 20, 21, 32, 74.11313393845472, 140.55415752892034, 4.0, 562.2166301156814, 31.234257228648964, 0.046851385842973006]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tie_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 10, 7, 12, 15, 19, 44.82892142331043, 74.23092131656186, 3.0, 222.69276394968557, 12.371820219426976, 0.024743640438853003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 8, 12, 12, 20, 32.0, 71.69925001442313, 3.0, 215.0977500432694, 11.949875002403855, 0.023899750004807003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 9, 10, 15, 13, 25, 36.52932501298081, 92.5109929535273, 3.333333333333333, 308.3699765117577, 17.13166536176432, 0.030836997651175]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 16, 14, 23, 22, 37, 79.50977500432694, 164.99896988958, 4.3125, 711.5580576488137, 39.53100320271187, 0.05499965662986]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 13, 21, 30, 16, 51, 52.860603837997665, 204.0, 3.461538461538461, 706.1538461538462, 39.23076923076923, 0.068]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_auto.py': {'total': [1, 10, 10, 10, 11, 20, 33.219280948873624, 69.18863237274596, 0.5, 34.59431618637298, 1.921906454798498, 0.023062877457581003], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_bart.py': {'total': [20, 170, 164, 295, 190, 459, 1346.0350210411566, 3474.563724223905, 17.352941176470587, 60293.899920355994, 3349.6611066864443, 1.158187908074635], 'functions': [['invert_mask', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_prepare_bart_decoder_inputs', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]], ['_init_weights', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]], ['dummy_inputs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_make_linear_from_emb', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_check_shapes', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['shift_tokens_right', [2, 2, 3, 4, 4, 7, 4.0, 14.0, 2.0, 28.0, 1.555555555555555, 0.004666666666666]], ['make_padding_mask', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 4, 6, 5, 10, 6.754887502163469, 23.21928094887362, 2.0, 46.43856189774724, 2.579920105430402, 0.007739760316291]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 10, 5, 10, 15, 15, 44.82892142331043, 58.60335893412778, 2.5, 146.50839733531944, 8.139355407517748, 0.019534452978042002]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 6, 8, 13, 10, 21, 23.509775004326936, 69.76048999263462, 4.333333333333333, 302.29545663475, 16.79419203526389, 0.023253496664211]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [8, 21, 13, 24, 29, 37, 116.23866587835397, 179.74529681972018, 4.571428571428571, 821.692785461578, 45.649599192309886, 0.05991509893990601]], ['_reorder_buffer', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [5, 6, 5, 9, 11, 14, 27.11941547876375, 48.43204266092217, 3.75, 181.62015997845813, 10.090008887692118, 0.016144014220307]], ['_shape', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [10, 31, 32, 58, 41, 90, 186.7993665708668, 482.17968041562756, 9.35483870967742, 4510.713139372, 250.59517440955557, 0.160726560138542]], ['_use_saved_state', [5, 13, 13, 24, 18, 37, 59.715356810271004, 154.28722505336555, 4.615384615384615, 712.0948848616871, 39.56082693676039, 0.051429075017788005]], ['_cat_prev_key_padding_mask', [2, 5, 3, 6, 7, 9, 13.60964047443681, 25.26619429851844, 1.2, 30.319433158222125, 1.684412953234562, 0.008422064766172]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['forward', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['LayerNorm', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['fill_with_neg_inf', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_filter_out_falsey_values', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_get_shape', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 7, 8, 15, 11, 23, 27.651484454403228, 79.56692722865785, 4.2857142857142865, 341.0011166942479, 18.94450648301377, 0.026522309076219]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resize_final_logits_bias', [2, 2, 2, 4, 4, 6, 4.0, 12.0, 2.0, 24.0, 1.333333333333333, 0.004]], ['forward', [4, 9, 7, 12, 13, 19, 36.52932501298081, 70.30835464468075, 2.666666666666666, 187.48894571914866, 10.416052539952704, 0.023436118214893]], ['prepare_inputs_for_generation', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['adjust_logits_during_generation', [4, 8, 5, 10, 12, 15, 32.0, 53.77443751081735, 2.5, 134.43609377704337, 7.468671876502409, 0.017924812503605]], ['_force_token_ids_generation', [3, 5, 3, 5, 8, 8, 16.36452797660028, 24.0, 1.5, 36.0, 2.0, 0.008]], ['_reorder_cache', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]], ['get_encoder', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 10, 15, 12, 25, 32.0, 89.62406251802891, 3.75, 336.0902344426084, 18.67167969125602, 0.029874687506009003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 18, 17, 29, 24, 46, 90.56842503028855, 210.90827503317323, 4.833333333333333, 1019.3899959936705, 56.632777555203916, 0.07030275834439101]], ['__init__', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_init_weight', [3, 7, 6, 12, 10, 18, 24.406371956566698, 59.794705707972525, 2.571428571428571, 153.75781467764364, 8.542100815424646, 0.019931568569324]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_bert.py': {'total': [17, 144, 164, 280, 161, 444, 1101.9560685089489, 3254.9270938828904, 16.52777777777778, 53796.71169056444, 2988.706205031358, 1.084975697960963], 'functions': [['load_tf_weights_in_bert', [6, 27, 15, 29, 33, 44, 143.89173756274062, 221.95334125177195, 3.222222222222222, 715.1829884779319, 39.732388248773994, 0.073984447083923]], ['mish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 9, 8, 15, 13, 23, 36.52932501298081, 85.11011351724513, 3.333333333333333, 283.7003783908171, 15.761132132823171, 0.028370037839081003]], ['__init__', [6, 10, 7, 13, 16, 20, 48.72905595320056, 80.0, 3.9, 312.0, 17.333333333333332, 0.026666666666666002]], ['transpose_for_scores', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['forward', [5, 11, 11, 18, 16, 29, 49.663388279447084, 116.0, 4.090909090909091, 474.54545454545456, 26.363636363636363, 0.038666666666666]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prune_heads', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 8, 5, 10, 9, 15, 24.0, 47.548875021634686, 0.625, 29.718046888521677, 1.651002604917871, 0.015849625007211002]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 16, 15, 29, 21, 44, 75.60964047443682, 193.26196660226546, 4.53125, 875.7182861665153, 48.65101589813974, 0.064420655534088]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 15, 12, 20, 21, 32, 74.11313393845472, 140.55415752892034, 4.0, 562.2166301156814, 31.234257228648964, 0.046851385842973006]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 7, 6, 9, 10, 15, 24.406371956566698, 49.82892142331044, 1.928571428571428, 96.09863417352727, 5.338813009640404, 0.016609640474436003]], ['prepare_inputs_for_generation', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 11, 8, 14, 17, 22, 53.563522809337215, 89.92418250750748, 3.818181818181818, 343.34687866502856, 19.074826592501587, 0.029974727502502]], ['prepare_inputs_for_generation', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 7, 5, 8, 10, 13, 24.406371956566698, 43.18506523353572, 1.714285714285714, 74.03154040034694, 4.11286335557483, 0.014395021744511]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 8, 12, 12, 20, 32.0, 71.69925001442313, 3.0, 215.0977500432694, 11.949875002403855, 0.023899750004807003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 13, 21, 30, 16, 51, 52.860603837997665, 204.0, 3.461538461538461, 706.1538461538462, 39.23076923076923, 0.068]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 9, 10, 15, 13, 25, 36.52932501298081, 92.5109929535273, 3.333333333333333, 308.3699765117577, 17.13166536176432, 0.030836997651175]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 16, 14, 23, 22, 37, 79.50977500432694, 164.99896988958, 4.3125, 711.5580576488137, 39.53100320271187, 0.05499965662986]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_camembert.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_ctrl.py': {'total': [11, 96, 100, 166, 107, 266, 670.2101478742413, 1793.230218382705, 9.510416666666666, 17054.366556077184, 947.4648086709547, 0.597743406127568], 'functions': [['angle_defn', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['positional_encoding', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['scaled_dot_product_attention', [6, 16, 14, 23, 22, 37, 79.50977500432694, 164.99896988958, 4.3125, 711.5580576488137, 39.53100320271187, 0.05499965662986]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['prune_heads', [4, 6, 4, 8, 10, 12, 23.509775004326936, 39.863137138648355, 2.666666666666666, 106.3016990363956, 5.905649946466422, 0.013287712379549002]], ['split_into_heads', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['forward', [4, 7, 6, 9, 11, 15, 27.651484454403228, 51.89147427955947, 2.571428571428571, 133.43521957601007, 7.413067754222782, 0.017297158093186]], ['point_wise_feed_forward_network', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 6, 3, 6, 7, 9, 15.509775004326936, 25.26619429851844, 0.5, 12.63309714925922, 0.701838730514401, 0.008422064766172]], ['_init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [8, 44, 54, 90, 52, 144, 264.21499122004104, 820.8633194123173, 8.181818181818182, 6716.154431555324, 373.11969064196245, 0.27362110647077204]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prepare_inputs_for_generation', [1, 1, 2, 2, 2, 4, 0.0, 4.0, 1.0, 4.0, 0.22222222222222202, 0.001333333333333]], ['forward', [3, 7, 7, 10, 10, 17, 24.406371956566698, 56.472777613085164, 2.1428571428571432, 121.0130948851825, 6.722949715843472, 0.018824259204361]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_distilbert.py': {'total': [13, 101, 107, 183, 114, 290, 720.5850760937656, 1981.5381041077753, 11.777227722772277, 23337.02549342771, 1296.5014163015394, 0.6605127013692581], 'functions': [['create_sinusoidal_embeddings', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['prune_heads', [4, 6, 4, 8, 10, 12, 23.509775004326936, 39.863137138648355, 2.666666666666666, 106.3016990363956, 5.905649946466422, 0.013287712379549002]], ['forward', [6, 15, 10, 16, 21, 26, 74.11313393845472, 114.20025299224778, 3.2, 365.44080957519293, 20.30226719862183, 0.038066750997415]], ['__init__', [2, 3, 2, 4, 5, 6, 6.754887502163469, 13.931568569324174, 1.333333333333333, 18.575424759098897, 1.03196804217216, 0.004643856189774]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['forward', [2, 7, 4, 8, 9, 12, 21.651484454403228, 38.03910001730775, 1.142857142857142, 43.47325716263743, 2.415180953479857, 0.012679700005769]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 12, 8, 15, 15, 23, 47.77443751081735, 89.85848369899593, 1.875, 168.48465693561735, 9.360258718645408, 0.029952827899665004]], ['_init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 11, 12, 23, 16, 35, 49.663388279447084, 140.0, 5.227272727272727, 731.8181818181819, 40.65656565656566, 0.046666666666666]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 10, 8, 13, 15, 21, 44.82892142331043, 82.0447025077789, 3.25, 266.6452831502814, 14.8136268416823, 0.027348234169259]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 8, 12, 12, 20, 32.0, 71.69925001442313, 3.0, 215.0977500432694, 11.949875002403855, 0.023899750004807003]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [6, 16, 14, 23, 22, 37, 79.50977500432694, 164.99896988958, 4.3125, 711.5580576488137, 39.53100320271187, 0.05499965662986]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 9, 10, 15, 13, 25, 36.52932501298081, 92.5109929535273, 3.333333333333333, 308.3699765117577, 17.13166536176432, 0.030836997651175]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 11, 15, 22, 14, 37, 42.808635307173745, 140.87213211613133, 3.0, 422.616396348394, 23.47868868602189, 0.046957377372043]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_electra.py': {'total': [12, 73, 94, 156, 85, 250, 494.87674280689515, 1602.3477340344257, 12.821917808219178, 20545.17094597565, 1141.398385887536, 0.5341159113448081], 'functions': [['load_tf_weights_in_electra', [5, 26, 14, 28, 31, 42, 133.82107314610522, 208.0762450362488, 2.692307692307692, 560.2052750975929, 31.122515283199604, 0.069358748345416]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 10, 11, 21, 14, 32, 41.219280948873624, 121.83535750584332, 4.2, 511.708501524542, 28.428250084696778, 0.040611785835281]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 8, 12, 12, 20, 32.0, 71.69925001442313, 3.0, 215.0977500432694, 11.949875002403855, 0.023899750004807003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 8, 13, 12, 21, 32.0, 75.28421251514429, 3.25, 244.67369067421893, 13.592982815234386, 0.025094737505048002]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 9, 7, 12, 14, 19, 40.13896548741762, 72.33974351909447, 3.333333333333333, 241.13247839698158, 13.39624879983231, 0.024113247839698003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 10, 15, 12, 25, 32.0, 89.62406251802891, 3.75, 336.0902344426084, 18.67167969125602, 0.029874687506009003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 16, 14, 23, 22, 37, 79.50977500432694, 164.99896988958, 4.3125, 711.5580576488137, 39.53100320271187, 0.05499965662986]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 13, 21, 30, 16, 51, 52.860603837997665, 204.0, 3.461538461538461, 706.1538461538462, 39.23076923076923, 0.068]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_encoder_decoder.py': {'total': [7, 26, 21, 41, 33, 62, 141.86291712607164, 312.7524354002241, 5.519230769230769, 1726.1528646127754, 95.89738136737641, 0.104250811800074], 'functions': [['__init__', [4, 9, 9, 18, 13, 27, 36.52932501298081, 99.91187238980949, 4.0, 399.64748955923795, 22.202638308846552, 0.033303957463269]], ['tie_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_encoder', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_decoder', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_encoder_decoder_pretrained', [3, 9, 7, 14, 12, 21, 33.28421251514428, 75.28421251514429, 2.333333333333333, 175.66316253533668, 9.759064585296482, 0.025094737505048002]], ['forward', [3, 4, 3, 5, 7, 8, 12.75488750216347, 22.458839376460833, 1.875, 42.11032383086406, 2.339462435048003, 0.0074862797921530005]], ['prepare_inputs_for_generation', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_reorder_cache', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_flaubert.py': {'total': [13, 54, 53, 97, 67, 150, 358.86964145266154, 909.9133785686658, 11.675925925925926, 10624.081207176738, 590.226733732041, 0.30330445952288804], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [13, 54, 53, 97, 67, 150, 358.86964145266154, 909.9133785686658, 11.675925925925926, 10624.081207176738, 590.226733732041, 0.30330445952288804]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_gpt2.py': {'total': [16, 126, 133, 219, 142, 352, 943.1372703609895, 2516.7109860656483, 13.904761904761905, 34994.267044341395, 1944.1259469078552, 0.838903662021882], 'functions': [['load_tf_weights_in_gpt2', [4, 19, 10, 20, 23, 30, 88.71062275542812, 135.7068586817104, 2.105263157894736, 285.6986498562324, 15.872147214235135, 0.045235619560570005]], ['__init__', [4, 6, 4, 7, 10, 11, 23.509775004326936, 36.541209043760986, 2.333333333333333, 85.26282110210897, 4.736823394561609, 0.012180403014586]], ['prune_heads', [5, 11, 9, 18, 16, 27, 49.663388279447084, 108.0, 4.090909090909091, 441.8181818181818, 24.545454545454547, 0.036000000000000004]], ['_attn', [7, 11, 11, 18, 18, 29, 57.705232259413506, 120.92782504182705, 5.727272727272727, 692.586634330464, 38.47703524058133, 0.040309275013942006]], ['merge_heads', [3, 6, 5, 7, 9, 12, 20.264662506490406, 38.03910001730775, 1.75, 66.56842503028857, 3.698245835016031, 0.012679700005769]], ['split_heads', [3, 5, 4, 6, 8, 10, 16.36452797660028, 30.0, 1.8, 54.0, 3.0, 0.01]], ['forward', [4, 7, 9, 12, 11, 21, 27.651484454403228, 72.64806399138325, 3.428571428571428, 249.07907654188543, 13.837726474549191, 0.024216021330461003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [1, 5, 3, 6, 6, 9, 11.60964047443681, 23.264662506490403, 0.6000000000000001, 13.95879750389424, 0.7754887502163461, 0.007754887502163001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [8, 41, 51, 85, 49, 136, 243.65963218934144, 763.6005387996684, 8.292682926829269, 6332.29715102164, 351.7942861678689, 0.254533512933222]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prepare_inputs_for_generation', [1, 1, 2, 2, 2, 4, 0.0, 4.0, 1.0, 4.0, 0.22222222222222202, 0.001333333333333]], ['forward', [3, 7, 7, 10, 10, 17, 24.406371956566698, 56.472777613085164, 2.1428571428571432, 121.0130948851825, 6.722949715843472, 0.018824259204361]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 12, 15, 22, 17, 37, 54.62919048309069, 151.23612512626258, 4.583333333333333, 693.1655734953702, 38.50919852752057, 0.050412041708754005]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_longformer.py': {'total': [15, 204, 249, 427, 219, 676, 1623.7781286963127, 5255.756052290393, 15.698529411764707, 82507.6409679411, 4583.757831552283, 1.751918684096797], 'functions': [['_get_question_end_index', [2, 8, 4, 8, 10, 12, 26.0, 39.863137138648355, 1.0, 39.863137138648355, 2.214618729924908, 0.013287712379549002]], ['_compute_global_attention_mask', [6, 10, 7, 13, 16, 20, 48.72905595320056, 80.0, 3.9, 312.0, 17.333333333333332, 0.026666666666666002]], ['__init__', [6, 9, 8, 16, 15, 24, 44.039100017307746, 93.76537429460444, 5.333333333333333, 500.08199623789034, 27.78233312432724, 0.031255124764868004]], ['_pad_and_transpose_last_two_dims', [1, 2, 3, 3, 3, 6, 2.0, 9.509775004326938, 0.75, 7.132331253245203, 0.396240625180289, 0.0031699250014420003]], ['_pad_by_window_overlap_except_last_row', [2, 3, 5, 7, 5, 12, 6.754887502163469, 27.863137138648348, 2.333333333333333, 65.01398665684614, 3.611888147602563, 0.009287712379549]], ['_chunk', [3, 8, 6, 12, 11, 18, 28.75488750216347, 62.26976913547136, 2.25, 140.10698055481055, 7.78372114193392, 0.020756589711823002]], ['_mask_invalid_locations', [3, 7, 9, 14, 10, 23, 24.406371956566698, 76.40434618240934, 3.0, 229.21303854722802, 12.734057697068224, 0.025468115394136]], ['_sliding_chunks_query_key_matmul', [7, 16, 26, 47, 23, 73, 83.65148445440323, 330.22002279216196, 10.28125, 3395.0746093319153, 188.61525607399528, 0.11007334093072]], ['_sliding_chunks_matmul_attn_probs_value', [7, 19, 19, 37, 26, 56, 100.36210720983135, 263.2246242159012, 6.815789473684211, 1794.0836229452214, 99.67131238584562, 0.08774154140530001]], ['forward', [8, 17, 21, 33, 25, 54, 93.48686830125578, 250.76823424783512, 7.764705882352941, 1947.1415835714256, 108.17453242063476, 0.083589411415945]], ['_get_global_attn_indices', [3, 5, 3, 5, 8, 8, 16.36452797660028, 24.0, 1.5, 36.0, 2.0, 0.008]], ['_concat_with_global_key_attn_probs', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['_compute_attn_output_with_global_indices', [3, 5, 5, 7, 8, 12, 16.36452797660028, 36.0, 2.1, 75.60000000000001, 4.2, 0.012]], ['_compute_global_attn_output_from_hidden', [4, 10, 18, 29, 14, 47, 41.219280948873624, 178.94568133670737, 5.8, 1037.8849517529027, 57.66027509738348, 0.059648560445569]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prune_heads', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 8, 5, 10, 9, 15, 24.0, 47.548875021634686, 0.625, 29.718046888521677, 1.651002604917871, 0.015849625007211002]], ['_init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_pad_to_window_size', [7, 12, 12, 23, 19, 35, 62.67103446305711, 148.67746297052548, 6.708333333333333, 997.3779807606084, 55.409887820033795, 0.049559154323508006]], ['_merge_to_attention_mask', [3, 5, 4, 8, 8, 12, 16.36452797660028, 36.0, 2.4, 86.39999999999999, 4.8, 0.012]], ['forward', [6, 15, 15, 28, 21, 43, 74.11313393845472, 188.86964917948671, 5.6, 1057.6700354051256, 58.75944641139587, 0.062956549726495]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 10, 7, 12, 15, 19, 44.82892142331043, 74.23092131656186, 3.0, 222.69276394968557, 12.371820219426976, 0.024743640438853003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 9, 9, 14, 14, 23, 40.13896548741762, 87.56916320732489, 3.8888888888888893, 340.54674580626346, 18.919263655903524, 0.029189721069108002]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [7, 17, 15, 25, 24, 40, 89.13835275565901, 183.39850002884629, 5.147058823529412, 943.9628677955325, 52.44238154419625, 0.06113283334294801]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 9, 10, 15, 13, 25, 36.52932501298081, 92.5109929535273, 3.333333333333333, 308.3699765117577, 17.13166536176432, 0.030836997651175]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 14, 25, 36, 18, 61, 61.30296890880645, 254.36542508798104, 5.142857142857143, 1308.1650433096167, 72.67583573942315, 0.084788475029327]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_marian.py': {'total': [4, 8, 4, 8, 12, 12, 32.0, 43.01955000865388, 2.0, 86.03910001730776, 4.779950000961542, 0.014339850002884002], 'functions': [['adjust_logits_during_generation', [4, 8, 4, 8, 12, 12, 32.0, 43.01955000865388, 2.0, 86.03910001730776, 4.779950000961542, 0.014339850002884002]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_mmbt.py': {'total': [6, 25, 29, 51, 31, 80, 131.60617974869504, 396.3357048309501, 6.12, 2425.5745135654147, 134.75413964252303, 0.13211190161031602], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 11, 8, 16, 14, 24, 42.808635307173745, 91.37651812938249, 2.181818181818181, 199.36694864592542, 11.075941591440301, 0.030458839376460004]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 11, 13, 23, 16, 36, 49.663388279447084, 144.0, 5.227272727272727, 752.7272727272727, 41.81818181818182, 0.048]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 8, 12, 12, 20, 32.0, 71.69925001442313, 3.0, 215.0977500432694, 11.949875002403855, 0.023899750004807003]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_mobilebert.py': {'total': [15, 156, 169, 290, 171, 459, 1195.1261050766386, 3404.7943043326277, 13.942307692307692, 47470.68982002221, 2637.2605455567896, 1.134931434777542], 'functions': [['load_tf_weights_in_mobilebert', [6, 27, 15, 29, 33, 44, 143.89173756274062, 221.95334125177195, 3.222222222222222, 715.1829884779319, 39.732388248773994, 0.073984447083923]], ['mish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [6, 13, 11, 20, 19, 31, 63.61549134016113, 131.68575291675114, 4.615384615384615, 607.780398077313, 33.76557767096183, 0.043895250972250006]], ['__init__', [2, 3, 2, 4, 5, 6, 6.754887502163469, 13.931568569324174, 1.333333333333333, 18.575424759098897, 1.03196804217216, 0.004643856189774]], ['transpose_for_scores', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['forward', [5, 10, 10, 16, 15, 26, 44.82892142331043, 101.57915548582149, 4.0, 406.31662194328595, 22.573145663515888, 0.033859718495273]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['forward', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prune_heads', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['forward', [2, 3, 3, 5, 5, 8, 6.754887502163469, 18.575424759098897, 1.666666666666666, 30.95904126516483, 1.719946736953601, 0.006191808253032001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [2, 2, 2, 4, 4, 6, 4.0, 12.0, 2.0, 24.0, 1.333333333333333, 0.004]], ['forward', [3, 11, 6, 12, 14, 18, 42.808635307173745, 68.53238859703687, 1.636363636363636, 112.14390861333307, 6.23021714518517, 0.022844129532345003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 8, 5, 10, 9, 15, 24.0, 47.548875021634686, 0.625, 29.718046888521677, 1.651002604917871, 0.015849625007211002]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 16, 15, 29, 21, 44, 75.60964047443682, 193.26196660226546, 4.53125, 875.7182861665153, 48.65101589813974, 0.064420655534088]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tie_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['forward', [4, 12, 10, 16, 16, 26, 51.01955000865388, 104.0, 2.666666666666666, 277.3333333333333, 15.407407407407407, 0.034666666666666006]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tie_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['forward', [4, 9, 6, 10, 13, 16, 36.52932501298081, 59.207035490257475, 2.222222222222222, 131.57118997834996, 7.309510554352776, 0.019735678496752]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 7, 5, 8, 10, 13, 24.406371956566698, 43.18506523353572, 1.714285714285714, 74.03154040034694, 4.11286335557483, 0.014395021744511]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 8, 12, 12, 20, 32.0, 71.69925001442313, 3.0, 215.0977500432694, 11.949875002403855, 0.023899750004807003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 16, 14, 23, 22, 37, 79.50977500432694, 164.99896988958, 4.3125, 711.5580576488137, 39.53100320271187, 0.05499965662986]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 13, 21, 30, 16, 51, 52.860603837997665, 204.0, 3.461538461538461, 706.1538461538462, 39.23076923076923, 0.068]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 9, 10, 15, 13, 25, 36.52932501298081, 92.5109929535273, 3.333333333333333, 308.3699765117577, 17.13166536176432, 0.030836997651175]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_openai.py': {'total': [13, 115, 116, 197, 128, 313, 835.3370721944375, 2191.0, 11.134782608695652, 24396.308695652173, 1355.3504830917873, 0.7303333333333331], 'functions': [['load_tf_weights_in_openai_gpt', [5, 22, 20, 37, 27, 57, 109.71713608445735, 271.0285876233177, 4.204545454545454, 1139.552016143495, 63.30844534130527, 0.090342862541105]], ['__init__', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['prune_heads', [5, 11, 9, 18, 16, 27, 49.663388279447084, 108.0, 4.090909090909091, 441.8181818181818, 24.545454545454547, 0.036000000000000004]], ['_attn', [6, 13, 14, 23, 19, 37, 63.61549134016113, 157.17331799741265, 5.307692307692307, 834.2276109093441, 46.34597838385245, 0.052391105999137]], ['merge_heads', [3, 6, 5, 7, 9, 12, 20.264662506490406, 38.03910001730775, 1.75, 66.56842503028857, 3.698245835016031, 0.012679700005769]], ['split_heads', [3, 5, 4, 6, 8, 10, 16.36452797660028, 30.0, 1.8, 54.0, 3.0, 0.01]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [1, 6, 3, 6, 7, 9, 15.509775004326936, 25.26619429851844, 0.5, 12.63309714925922, 0.701838730514401, 0.008422064766172]], ['_init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [7, 27, 32, 54, 34, 86, 148.0334470128169, 437.5218043475292, 7.0, 3062.6526304327044, 170.14736835737247, 0.14584060144917602]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 7, 7, 10, 10, 17, 24.406371956566698, 56.472777613085164, 2.1428571428571432, 121.0130948851825, 6.722949715843472, 0.018824259204361]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 12, 15, 22, 17, 37, 54.62919048309069, 151.23612512626258, 4.583333333333333, 693.1655734953702, 38.50919852752057, 0.050412041708754005]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_reformer.py': {'total': [20, 295, 338, 551, 315, 889, 2506.787049451262, 7377.995928346291, 18.677966101694917, 137805.95784809516, 7655.886547116398, 2.45933197611543], 'functions': [['mish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_get_least_common_mult_chunk_len', [2, 17, 9, 18, 19, 27, 71.48686830125578, 114.6940428629768, 1.058823529411764, 121.44075126668132, 6.746708403704518, 0.038231347620992]], ['__init__', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['forward', [7, 14, 17, 24, 21, 41, 72.95445336320968, 180.0850143339292, 6.0, 1080.5100860035752, 60.028338111309736, 0.060028338111309004]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 9, 8, 13, 14, 21, 40.13896548741762, 79.95445336320968, 3.611111111111111, 288.7244149227016, 16.04024527348342, 0.026651484454403]], ['_look_adjacent', [4, 7, 6, 11, 11, 17, 27.651484454403228, 58.81033751683406, 3.1428571428571432, 184.83248933862134, 10.268471629923408, 0.019603445838944]], ['_split_hidden_size_dim', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['_merge_hidden_size_dims', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['_split_seq_length_dim_to', [2, 6, 3, 6, 8, 9, 17.509775004326936, 27.0, 1.0, 27.0, 1.5, 0.009000000000000001]], ['__init__', [2, 6, 5, 6, 8, 11, 17.509775004326936, 33.0, 1.0, 33.0, 1.833333333333333, 0.011]], ['forward', [10, 25, 29, 49, 35, 78, 149.31568569324173, 400.08407532170736, 9.8, 3920.8239381527324, 217.82355211959623, 0.133361358440569]], ['_hash_vectors', [9, 25, 31, 52, 34, 83, 144.62572975734892, 422.2594158237782, 9.36, 3952.348132110564, 219.57489622836468, 0.14075313860792601]], ['_get_sorted_bucket_idx_and_undo_sorted_bucket_idx', [4, 7, 10, 14, 11, 24, 27.651484454403228, 83.02635884729514, 4.0, 332.10543538918057, 18.450301966065588, 0.027675452949098]], ['_set_num_buckets', [5, 16, 13, 26, 21, 39, 75.60964047443682, 171.30037948837168, 4.0625, 695.9077916715099, 38.661543981750555, 0.057100126496123005]], ['_attend', [6, 12, 15, 23, 18, 38, 58.52932501298082, 158.45715005480787, 5.75, 911.1286128151453, 50.61825626750807, 0.052819050018269004]], ['_compute_attn_mask', [5, 16, 19, 27, 21, 46, 75.60964047443682, 202.04660144782298, 4.21875, 852.3840998580032, 47.35467221433351, 0.067348867149274]], ['_len_and_dim_norm', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_len_norm', [4, 6, 4, 7, 10, 11, 23.509775004326936, 36.541209043760986, 2.333333333333333, 85.26282110210897, 4.736823394561609, 0.012180403014586]], ['_gather_by_expansion', [1, 1, 4, 4, 2, 8, 0.0, 8.0, 2.0, 16.0, 0.8888888888888881, 0.002666666666666]], ['forward', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['backward', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [2, 4, 3, 4, 6, 7, 10.0, 18.094737505048094, 1.0, 18.094737505048094, 1.005263194724894, 0.006031579168349]], ['forward', [9, 26, 31, 48, 35, 79, 150.74075768464922, 405.21335833865237, 8.307692307692308, 3366.3879000441893, 187.02155000245497, 0.135071119446217]], ['_compute_attn_mask', [5, 11, 12, 19, 16, 31, 49.663388279447084, 124.0, 4.318181818181818, 535.4545454545455, 29.74747474747475, 0.041333333333333]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [2, 18, 10, 20, 20, 30, 77.05865002596161, 129.65784284662087, 1.111111111111111, 144.06426982957873, 8.003570546087708, 0.04321928094887301]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward_chunk', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_init_attention_seed', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_init_feed_forward_seed', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['forward', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['backward_pass', [2, 7, 4, 8, 9, 12, 21.651484454403228, 38.03910001730775, 1.142857142857142, 43.47325716263743, 2.415180953479857, 0.012679700005769]], ['forward', [3, 4, 5, 8, 7, 13, 12.75488750216347, 36.49561398674886, 3.0, 109.48684196024658, 6.08260233112481, 0.012165204662249001]], ['backward', [3, 6, 8, 11, 9, 19, 20.264662506490406, 60.22857502740394, 2.75, 165.62858132536084, 9.201587851408936, 0.020076191675801002]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward_chunk', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['dummy_inputs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [10, 25, 27, 47, 35, 74, 149.31568569324173, 379.5669432539275, 9.4, 3567.9292665869184, 198.21829258816214, 0.126522314417975]], ['_pad_to_mult_of_chunk_length', [3, 9, 13, 18, 12, 31, 33.28421251514428, 111.13383752235585, 3.0, 333.4015125670675, 18.522306253725972, 0.037044612507451]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tie_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 7, 6, 9, 10, 15, 24.406371956566698, 49.82892142331044, 1.928571428571428, 96.09863417352727, 5.338813009640404, 0.016609640474436003]], ['prepare_inputs_for_generation', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tie_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 7, 5, 8, 10, 13, 24.406371956566698, 43.18506523353572, 1.714285714285714, 74.03154040034694, 4.11286335557483, 0.014395021744511]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['tie_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 16, 14, 23, 22, 37, 79.50977500432694, 164.99896988958, 4.3125, 711.5580576488137, 39.53100320271187, 0.05499965662986]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_retribert.py': {'total': [8, 22, 16, 32, 30, 48, 122.10749561002054, 235.53074858920888, 5.818181818181818, 1370.3607190644882, 76.13115105913823, 0.07851024952973601], 'functions': [['_init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['embed_sentences_checkpointed', [5, 12, 11, 22, 17, 33, 54.62919048309069, 134.8862737612612, 4.583333333333333, 618.2287547391138, 34.346041929950765, 0.044962091253753]], ['embed_questions', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['embed_answers', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_roberta.py': {'total': [10, 47, 68, 107, 57, 175, 294.2849569777226, 1020.7557524788299, 11.382978723404255, 11619.24101225902, 645.5133895699456, 0.34025191749294303], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 2, 4, 5, 6, 6.754887502163469, 13.931568569324174, 1.333333333333333, 18.575424759098897, 1.03196804217216, 0.004643856189774]], ['create_position_ids_from_inputs_embeds', [2, 4, 4, 7, 6, 11, 10.0, 28.43458750793272, 1.75, 49.76052813888226, 2.764473785493459, 0.009478195835977001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 10, 7, 12, 15, 19, 44.82892142331043, 74.23092131656186, 3.0, 222.69276394968557, 12.371820219426976, 0.024743640438853003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 8, 12, 12, 20, 32.0, 71.69925001442313, 3.0, 215.0977500432694, 11.949875002403855, 0.023899750004807003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 13, 21, 30, 16, 51, 52.860603837997665, 204.0, 3.461538461538461, 706.1538461538462, 39.23076923076923, 0.068]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 9, 10, 15, 13, 25, 36.52932501298081, 92.5109929535273, 3.333333333333333, 308.3699765117577, 17.13166536176432, 0.030836997651175]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 16, 14, 23, 22, 37, 79.50977500432694, 164.99896988958, 4.3125, 711.5580576488137, 39.53100320271187, 0.05499965662986]], ['create_position_ids_from_input_ids', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_t5.py': {'total': [17, 204, 197, 365, 221, 562, 1634.6616380634407, 4376.801238377984, 15.208333333333334, 66563.8521669985, 3697.9917870554727, 1.458933746125994], 'functions': [['load_tf_weights_in_t5', [7, 16, 9, 17, 23, 26, 83.65148445440323, 117.61261085748234, 3.71875, 437.37189662626247, 24.298438701459027, 0.03920420361916]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 8, 5, 9, 13, 14, 35.60964047443681, 51.80615605397529, 2.8125, 145.70481390180552, 8.09471188343364, 0.017268718684658003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['prune_heads', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['_relative_position_bucket', [7, 18, 15, 29, 25, 44, 94.71013448036484, 204.32967235008786, 5.638888888888889, 1152.1923190852178, 64.01068439362321, 0.068109890783362]], ['compute_bias', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['forward', [8, 25, 27, 49, 33, 76, 140.0964047443681, 383.37395307124245, 7.84, 3005.651792078541, 166.9806551154745, 0.12779131769041402]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 16, 13, 25, 22, 38, 79.50977500432694, 169.4584015082173, 4.6875, 794.3362570697685, 44.12979205943159, 0.056486133836072004]], ['dummy_inputs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_init_weights', [5, 29, 29, 51, 34, 80, 152.49108933313642, 406.9970273000272, 4.396551724137931, 1789.3834820949469, 99.41019344971927, 0.13566567576667501]], ['_shift_right', [4, 8, 6, 10, 12, 16, 32.0, 57.359400011538504, 2.5, 143.39850002884626, 7.966583334935903, 0.019119800003846003]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [7, 36, 35, 68, 43, 103, 205.76878450632645, 558.9052697343161, 6.611111111111111, 3694.9848387990896, 205.27693548883832, 0.18630175657810502]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_encoder', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_decoder', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 12, 11, 20, 16, 31, 51.01955000865388, 124.0, 3.333333333333333, 413.33333333333337, 22.962962962962965, 0.041333333333333]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_encoder', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_decoder', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [9, 28, 28, 50, 37, 78, 163.13526283059372, 406.3373625190581, 8.035714285714286, 3265.21094881386, 181.40060826743667, 0.135445787506352]], ['prepare_inputs_for_generation', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_reorder_cache', [3, 11, 6, 12, 14, 18, 42.808635307173745, 68.53238859703687, 1.636363636363636, 112.14390861333307, 6.23021714518517, 0.022844129532345003]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_albert.py': {'total': [13, 141, 137, 254, 154, 391, 1054.7824570240641, 2841.313537411707, 11.709219858156029, 33269.56489550871, 1848.309160861595, 0.947104512470568], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]], ['_embedding', [4, 9, 7, 13, 13, 20, 36.52932501298081, 74.00879436282185, 2.8888888888888893, 213.80318371481866, 11.87795465082326, 0.024669598120940002]], ['_linear', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [5, 8, 7, 14, 13, 21, 35.60964047443681, 77.70923408096293, 4.375, 339.97789910421284, 18.887661061345156, 0.025903078026987002]], ['transpose_for_scores', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['call', [6, 8, 9, 15, 14, 24, 39.50977500432694, 91.37651812938249, 5.625, 513.9929144777765, 28.555161915432027, 0.030458839376460004]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [6, 12, 11, 19, 18, 30, 58.52932501298082, 125.09775004326937, 4.75, 594.2143127055296, 33.01190626141831, 0.041699250014423005]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [2, 12, 8, 16, 14, 24, 45.01955000865388, 91.37651812938249, 1.333333333333333, 121.83535750584332, 6.768630972546851, 0.030458839376460004]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 20, 16, 31, 25, 47, 98.04820237218406, 218.26124091941205, 3.875, 845.7623085627217, 46.986794920151205, 0.07275374697313701]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [9, 35, 25, 48, 44, 73, 208.05423060605463, 398.5385081605227, 6.171428571428572, 2459.5519360763687, 136.64177422646492, 0.13284616938684002]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 15, 11, 19, 20, 30, 70.2129994085646, 129.65784284662087, 3.166666666666666, 410.5831690142994, 22.810176056349967, 0.04321928094887301]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['dummy_inputs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 29, 23, 41, 34, 64, 152.49108933313642, 325.59762184002176, 3.534482758620689, 1150.8191806414561, 63.93439892452534, 0.10853254061334001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_auto.py': {'total': [2, 9, 8, 9, 11, 17, 30.529325012980813, 58.81033751683406, 1.0, 58.81033751683406, 3.267240973157447, 0.019603445838944], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_bert.py': {'total': [13, 145, 128, 239, 158, 367, 1089.1925343879996, 2680.487534580997, 10.713793103448277, 28718.188861872957, 1595.4549367707198, 0.8934958448603321], 'functions': [['gelu', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['gelu_new', [3, 13, 7, 14, 16, 21, 52.860603837997665, 84.0, 1.615384615384615, 135.6923076923077, 7.538461538461539, 0.028]], ['swish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]], ['_embedding', [4, 9, 7, 13, 13, 20, 36.52932501298081, 74.00879436282185, 2.8888888888888893, 213.80318371481866, 11.87795465082326, 0.024669598120940002]], ['_linear', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [5, 8, 7, 14, 13, 21, 35.60964047443681, 77.70923408096293, 4.375, 339.97789910421284, 18.887661061345156, 0.025903078026987002]], ['transpose_for_scores', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['call', [6, 8, 9, 15, 14, 24, 39.50977500432694, 91.37651812938249, 5.625, 513.9929144777765, 28.555161915432027, 0.030458839376460004]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [2, 14, 10, 20, 16, 30, 55.30296890880645, 120.0, 1.428571428571428, 171.42857142857144, 9.523809523809526, 0.04]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [9, 35, 25, 48, 44, 73, 208.05423060605463, 398.5385081605227, 6.171428571428572, 2459.5519360763687, 136.64177422646492, 0.13284616938684002]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['dummy_inputs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 30, 25, 44, 35, 69, 158.81635834269238, 353.92052816920267, 3.666666666666666, 1297.7086032870764, 72.09492240483758, 0.11797350938973401]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 15, 11, 19, 20, 30, 70.2129994085646, 129.65784284662087, 3.166666666666666, 410.5831690142994, 22.810176056349967, 0.04321928094887301]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_camembert.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_ctrl.py': {'total': [11, 108, 107, 185, 119, 292, 767.581598038665, 2013.2867868859196, 9.421296296296296, 18967.771348670583, 1053.7650749261436, 0.6710955956286391], 'functions': [['angle_defn', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['positional_encoding', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['scaled_dot_product_attention', [5, 12, 11, 19, 17, 30, 54.62919048309069, 122.6238852375102, 3.958333333333333, 485.3862123984779, 26.965900688804325, 0.040874628412503]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['split_into_heads', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['call', [4, 8, 7, 11, 12, 18, 32.0, 64.52932501298082, 2.75, 177.45564378569725, 9.85864687698318, 0.021509775004326003]], ['point_wise_feed_forward_network', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 6, 3, 6, 7, 9, 15.509775004326936, 25.26619429851844, 0.5, 12.63309714925922, 0.701838730514401, 0.008422064766172]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [9, 69, 74, 129, 78, 203, 450.01751253067454, 1275.9366504290365, 8.41304347826087, 10734.510515566024, 596.3616953092236, 0.425312216809678]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prepare_inputs_for_generation', [1, 1, 2, 2, 2, 4, 0.0, 4.0, 1.0, 4.0, 0.22222222222222202, 0.001333333333333]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_distilbert.py': {'total': [15, 138, 116, 218, 153, 334, 1039.5797339695152, 2423.967539459346, 11.847826086956522, 28718.74584794225, 1595.485880441236, 0.807989179819782], 'functions': [['gelu', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['gelu_new', [3, 13, 7, 14, 16, 21, 52.860603837997665, 84.0, 1.615384615384615, 135.6923076923077, 7.538461538461539, 0.028]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]], ['_embedding', [4, 6, 5, 9, 10, 14, 23.509775004326936, 46.50699332842308, 3.0, 139.52097998526924, 7.75116555473718, 0.015502331109474]], ['_linear', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [7, 18, 12, 21, 25, 33, 94.71013448036484, 153.24725426256592, 4.083333333333333, 625.7596215721442, 34.764423420674675, 0.051082418087521]], ['__init__', [2, 3, 2, 4, 5, 6, 6.754887502163469, 13.931568569324174, 1.333333333333333, 18.575424759098897, 1.03196804217216, 0.004643856189774]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['call', [2, 8, 5, 10, 10, 15, 26.0, 49.82892142331044, 1.25, 62.28615177913805, 3.460341765507669, 0.016609640474436003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [4, 17, 13, 25, 21, 38, 77.48686830125578, 166.9080620655929, 2.941176470588235, 490.9060648988027, 27.272559161044594, 0.055636020688530005]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [7, 24, 18, 35, 31, 53, 129.690584471711, 262.5724044505044, 5.104166666666667, 1340.213314382783, 74.45629524348794, 0.087524134816834]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['dummy_inputs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 24, 19, 34, 29, 53, 121.64874049174458, 257.47299274176135, 3.541666666666666, 911.8835159604047, 50.66019533113359, 0.08582433091392001]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['call', [5, 15, 11, 19, 20, 30, 70.2129994085646, 129.65784284662087, 3.166666666666666, 410.5831690142994, 22.810176056349967, 0.04321928094887301]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_electra.py': {'total': [11, 75, 55, 103, 86, 158, 505.2151495922013, 1015.3498312429315, 7.553333333333334, 7669.27572532161, 426.0708736289783, 0.33844994374764303], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]], ['_embedding', [4, 9, 7, 13, 13, 20, 36.52932501298081, 74.00879436282185, 2.8888888888888893, 213.80318371481866, 11.87795465082326, 0.024669598120940002]], ['_linear', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_extended_attention_mask', [4, 7, 4, 7, 11, 11, 27.651484454403228, 38.053747805010275, 2.0, 76.10749561002055, 4.228194200556697, 0.012684582601670002]], ['get_head_mask', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [6, 26, 19, 37, 32, 56, 137.72120767599534, 280.0, 4.269230769230769, 1195.3846153846155, 66.41025641025641, 0.093333333333333]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 15, 11, 19, 20, 30, 70.2129994085646, 129.65784284662087, 3.166666666666666, 410.5831690142994, 22.810176056349967, 0.04321928094887301]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_flaubert.py': {'total': [11, 66, 57, 107, 77, 164, 436.9837596826682, 1027.752992673964, 8.916666666666666, 9164.130851342845, 509.1183806301581, 0.342584330891321], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [11, 66, 57, 107, 77, 164, 436.9837596826682, 1027.752992673964, 8.916666666666666, 9164.130851342845, 509.1183806301581, 0.342584330891321]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_gpt2.py': {'total': [14, 141, 133, 233, 155, 366, 1059.9797095970364, 2663.0615323303714, 11.567375886524824, 30804.633753410184, 1711.3685418561213, 0.887687177443457], 'functions': [['gelu', [3, 13, 7, 14, 16, 21, 52.860603837997665, 84.0, 1.615384615384615, 135.6923076923077, 7.538461538461539, 0.028]], ['__init__', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['causal_attention_mask', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['_attn', [7, 12, 12, 22, 19, 34, 62.67103446305711, 144.4295354570819, 6.416666666666667, 926.7561858496089, 51.486454769422714, 0.048143178485693]], ['merge_heads', [3, 6, 5, 7, 9, 12, 20.264662506490406, 38.03910001730775, 1.75, 66.56842503028857, 3.698245835016031, 0.012679700005769]], ['split_heads', [3, 5, 4, 6, 8, 10, 16.36452797660028, 30.0, 1.8, 54.0, 3.0, 0.01]], ['call', [4, 7, 5, 8, 11, 13, 27.651484454403228, 44.97261104228487, 2.285714285714285, 102.79453952522255, 5.710807751401252, 0.014990870347428001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['call', [1, 5, 3, 6, 6, 9, 11.60964047443681, 23.264662506490403, 0.6000000000000001, 13.95879750389424, 0.7754887502163461, 0.007754887502163001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [9, 65, 61, 108, 74, 169, 419.9832328598303, 1049.3976187912926, 7.476923076923077, 7846.265272808742, 435.90362626715233, 0.34979920626376404]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prepare_inputs_for_generation', [1, 1, 2, 2, 2, 4, 0.0, 4.0, 1.0, 4.0, 0.22222222222222202, 0.001333333333333]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 29, 26, 44, 34, 70, 152.49108933313642, 356.1223988875238, 3.793103448275862, 1350.8090992285386, 75.04494995714103, 0.11870746629584102]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_mobilebert.py': {'total': [15, 150, 139, 255, 165, 394, 1142.9261625085098, 2902.3309524128513, 12.75, 37004.71964326385, 2055.817757959103, 0.9674436508042831], 'functions': [['mish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]], ['_embedding', [6, 13, 10, 18, 19, 28, 63.61549134016113, 118.94197037642039, 4.153846153846154, 494.066646178977, 27.448147009943167, 0.039647323458806005]], ['_linear', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [5, 9, 7, 14, 14, 21, 40.13896548741762, 79.95445336320968, 3.8888888888888893, 310.93398530137097, 17.27411029452061, 0.026651484454403]], ['transpose_for_scores', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['call', [6, 8, 9, 15, 14, 24, 39.50977500432694, 91.37651812938249, 5.625, 513.9929144777765, 28.555161915432027, 0.030458839376460004]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['call', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['call', [2, 3, 3, 5, 5, 8, 6.754887502163469, 18.575424759098897, 1.666666666666666, 30.95904126516483, 1.719946736953601, 0.006191808253032001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [2, 2, 2, 4, 4, 6, 4.0, 12.0, 2.0, 24.0, 1.333333333333333, 0.004]], ['call', [3, 11, 6, 12, 14, 18, 42.808635307173745, 68.53238859703687, 1.636363636363636, 112.14390861333307, 6.23021714518517, 0.022844129532345003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [2, 14, 10, 20, 16, 30, 55.30296890880645, 120.0, 1.428571428571428, 171.42857142857144, 9.523809523809526, 0.04]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [9, 35, 25, 48, 44, 73, 208.05423060605463, 398.5385081605227, 6.171428571428572, 2459.5519360763687, 136.64177422646492, 0.13284616938684002]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 15, 11, 19, 20, 30, 70.2129994085646, 129.65784284662087, 3.166666666666666, 410.5831690142994, 22.810176056349967, 0.04321928094887301]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['dummy_inputs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 30, 25, 44, 35, 69, 158.81635834269238, 353.92052816920267, 3.666666666666666, 1297.7086032870764, 72.09492240483758, 0.11797350938973401]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_openai.py': {'total': [14, 127, 116, 204, 141, 320, 940.8659241288715, 2284.656432767614, 11.244094488188976, 25688.89280308782, 1427.1607112826566, 0.761552144255871], 'functions': [['gelu', [3, 13, 7, 14, 16, 21, 52.860603837997665, 84.0, 1.615384615384615, 135.6923076923077, 7.538461538461539, 0.028]], ['swish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['causal_attention_mask', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['_attn', [7, 12, 12, 22, 19, 34, 62.67103446305711, 144.4295354570819, 6.416666666666667, 926.7561858496089, 51.486454769422714, 0.048143178485693]], ['merge_heads', [3, 6, 5, 7, 9, 12, 20.264662506490406, 38.03910001730775, 1.75, 66.56842503028857, 3.698245835016031, 0.012679700005769]], ['split_heads', [3, 5, 4, 6, 8, 10, 16.36452797660028, 30.0, 1.8, 54.0, 3.0, 0.01]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['call', [1, 6, 3, 6, 7, 9, 15.509775004326936, 25.26619429851844, 0.5, 12.63309714925922, 0.701838730514401, 0.008422064766172]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [9, 53, 51, 89, 62, 140, 332.1091091048304, 833.5874834541626, 7.556603773584905, 6299.09032308287, 349.94946239349275, 0.27786249448472]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 26, 24, 40, 31, 64, 133.82107314610522, 317.06856386476005, 3.846153846153846, 1219.4944764029233, 67.74969313349574, 0.10568952128825301]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_pytorch_utils.py': {'total': [11, 68, 46, 85, 79, 131, 452.0012210100334, 825.7952780112005, 6.875, 5677.3425363270035, 315.40791868483353, 0.2752650926704], 'functions': [['convert_tf_weight_name_to_pt_weight_name', [4, 19, 16, 27, 23, 43, 88.71062275542812, 194.51316411045156, 2.842105263157894, 552.8268874718096, 30.71260485954498, 0.06483772137015001]], ['load_pytorch_checkpoint_in_tf2_model', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['load_pytorch_model_in_tf2_model', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['load_pytorch_weights_in_tf2_model', [9, 25, 16, 31, 34, 47, 144.62572975734892, 239.11075353876598, 5.58, 1334.2380047463141, 74.12433359701745, 0.079703584512921]], ['load_tf2_checkpoint_in_pytorch_model', [3, 4, 3, 6, 7, 9, 12.75488750216347, 25.26619429851844, 2.25, 56.848937171666485, 3.158274287314805, 0.008422064766172]], ['load_tf2_model_in_pytorch_model', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['load_tf2_weights_in_pytorch_model', [7, 20, 11, 21, 27, 32, 106.09004635215048, 152.156400069231, 3.675, 559.174770254424, 31.065265014134663, 0.05071880002307701]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_roberta.py': {'total': [8, 64, 53, 98, 72, 151, 408.0, 931.6586752177891, 6.125, 5706.409385708958, 317.02274365049766, 0.31055289173926304], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['create_position_ids_from_input_ids', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['create_position_ids_from_inputs_embeds', [1, 4, 3, 6, 5, 9, 8.0, 20.89735285398626, 0.75, 15.673014640489694, 0.8707230355827601, 0.006965784284662001]], ['_embedding', [2, 3, 2, 4, 5, 6, 6.754887502163469, 13.931568569324174, 1.333333333333333, 18.575424759098897, 1.03196804217216, 0.004643856189774]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['dummy_inputs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 29, 23, 41, 34, 64, 152.49108933313642, 325.59762184002176, 3.534482758620689, 1150.8191806414561, 63.93439892452534, 0.10853254061334001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 15, 11, 19, 20, 30, 70.2129994085646, 129.65784284662087, 3.166666666666666, 410.5831690142994, 22.810176056349967, 0.04321928094887301]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_t5.py': {'total': [15, 174, 168, 316, 189, 484, 1353.6755272118066, 3660.1253333229993, 13.620689655172415, 49853.43126422706, 2769.635070234837, 1.220041777774333], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['call', [3, 6, 4, 7, 9, 11, 20.264662506490406, 34.86917501586544, 1.75, 61.021056277764515, 3.390058682098028, 0.011623058338621001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_relative_position_bucket', [6, 16, 13, 25, 22, 38, 79.50977500432694, 169.4584015082173, 4.6875, 794.3362570697685, 44.12979205943159, 0.056486133836072004]], ['compute_bias', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['call', [8, 26, 28, 51, 34, 79, 146.2114326716684, 401.90956445877686, 7.846153846153846, 3153.444274984249, 175.19134861023608, 0.133969854819592]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [6, 16, 13, 25, 22, 38, 79.50977500432694, 169.4584015082173, 4.6875, 794.3362570697685, 44.12979205943159, 0.056486133836072004]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__call__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_embed_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [10, 72, 64, 123, 82, 187, 477.4538810527201, 1188.8622248635818, 8.541666666666666, 10154.864837376426, 564.1591576320237, 0.39628740828786]], ['dummy_inputs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_encoder', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_decoder', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [4, 12, 11, 20, 16, 31, 51.01955000865388, 124.0, 3.333333333333333, 413.33333333333337, 22.962962962962965, 0.041333333333333]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_encoder', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_decoder', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [6, 19, 15, 27, 25, 42, 96.22039775975506, 195.04195997053841, 4.2631578947368425, 831.494671453348, 46.19414841407489, 0.065013986656846]], ['prepare_inputs_for_generation', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_reorder_cache', [3, 12, 6, 12, 15, 18, 47.77443751081735, 70.32403072095333, 1.5, 105.48604608143, 5.860335893412778, 0.023441343573651]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_transfo_xl.py': {'total': [18, 151, 123, 229, 169, 352, 1168.0577656640487, 2605.109561571329, 13.649006622516556, 35557.15765826827, 1975.3976476815706, 0.8683698538571091], 'functions': [['__init__', [2, 6, 3, 6, 8, 9, 17.509775004326936, 27.0, 1.0, 27.0, 1.5, 0.009000000000000001]], ['call', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 2, 4, 3, 6, 2.0, 9.509775004326938, 1.0, 9.509775004326938, 0.5283208335737181, 0.0031699250014420003]], ['__init__', [5, 12, 8, 16, 17, 24, 54.62919048309069, 98.09910819000817, 3.333333333333333, 326.99702730002724, 18.16650151666818, 0.032699702730002]], ['build', [2, 5, 3, 6, 7, 9, 13.60964047443681, 25.26619429851844, 1.2, 30.319433158222125, 1.684412953234562, 0.008422064766172]], ['_rel_shift', [2, 2, 5, 6, 4, 11, 4.0, 22.0, 3.0, 66.0, 3.666666666666666, 0.007333333333333001]], ['call', [6, 24, 19, 35, 30, 54, 125.5488750216347, 264.97209216286, 4.375, 1159.2529032125126, 64.40293906736181, 0.088324030720953]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [5, 12, 8, 16, 17, 24, 54.62919048309069, 98.09910819000817, 3.333333333333333, 326.99702730002724, 18.16650151666818, 0.032699702730002]], ['build', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['call', [8, 15, 10, 19, 23, 29, 82.60335893412778, 131.18329672565338, 5.066666666666666, 664.6620367433104, 36.92566870796169, 0.043727765575217]], ['__init__', [2, 6, 4, 8, 8, 12, 17.509775004326936, 36.0, 1.333333333333333, 48.0, 2.666666666666666, 0.012]], ['build', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['backward_compatible', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['reset_length', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['init_mems', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_update_mems', [4, 12, 6, 12, 16, 18, 51.01955000865388, 72.0, 2.0, 144.0, 8.0, 0.024]], ['call', [10, 36, 33, 62, 46, 95, 219.33658100079685, 524.7383858254162, 8.61111111111111, 4518.580544607751, 251.0322524782084, 0.174912795275138]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_output_embeddings', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['reset_length', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['init_mems', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 18, 10, 19, 23, 29, 86.66829050039843, 131.18329672565338, 2.6388888888888893, 346.17814413714086, 19.232119118730047, 0.043727765575217]], ['prepare_inputs_for_generation', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_transfo_xl_utilities.py': {'total': [12, 43, 38, 73, 55, 111, 276.3489344608441, 641.7309282012372, 10.186046511627907, 6536.701082607951, 363.1500601448862, 0.21391030940041203], 'functions': [['__init__', [2, 7, 4, 8, 9, 12, 21.651484454403228, 38.03910001730775, 1.142857142857142, 43.47325716263743, 2.415180953479857, 0.012679700005769]], ['build', [7, 10, 8, 16, 17, 24, 52.87076540327685, 98.09910819000817, 5.6, 549.3550058640457, 30.519722548002537, 0.032699702730002]], ['_logit', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_gather_logprob', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [8, 22, 24, 45, 30, 69, 122.10749561002054, 338.57545109698776, 8.181818181818182, 2770.162781702627, 153.89793231681261, 0.11285848369899501]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_utils.py': {'total': [16, 105, 78, 142, 121, 220, 768.9957793549429, 1522.149912200411, 10.81904761904762, 16468.2123834254, 914.9006879680778, 0.507383304066803], 'functions': [['num_parameters', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['keras_serializable', [4, 10, 8, 15, 14, 23, 41.219280948873624, 87.56916320732489, 3.0, 262.7074896219747, 14.594860534554151, 0.029189721069108002]], ['compute_loss', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['compute_loss', [2, 3, 5, 6, 5, 11, 6.754887502163469, 25.541209043760983, 2.0, 51.082418087521965, 2.837912115973442, 0.008513736347920001]], ['compute_loss', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['dummy_inputs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['get_input_embeddings', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['set_input_embeddings', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['resize_token_embeddings', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_get_word_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_get_resized_embeddings', [2, 3, 2, 4, 5, 6, 6.754887502163469, 13.931568569324174, 1.333333333333333, 18.575424759098897, 1.03196804217216, 0.004643856189774]], ['prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_pretrained', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [11, 23, 17, 33, 34, 50, 142.09567279432156, 254.373142062517, 7.891304347826087, 2007.3358819281232, 111.51866010711795, 0.084791047354172]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['__init__', [3, 5, 3, 5, 8, 8, 16.36452797660028, 24.0, 1.5, 36.0, 2.0, 0.008]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_config', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['call', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]], ['_embedding', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_linear', [2, 3, 3, 4, 5, 7, 6.754887502163469, 16.253496664211536, 1.333333333333333, 21.67132888561538, 1.203962715867521, 0.005417832221403]], ['__init__', [3, 19, 10, 21, 22, 31, 85.46551025759159, 138.24238017775622, 1.657894736842105, 229.1913145052274, 12.732850805845967, 0.046080793392585]], ['call', [7, 18, 17, 30, 25, 47, 94.71013448036484, 218.26124091941205, 5.833333333333333, 1273.1905720299035, 70.73280955721685, 0.07275374697313701]], ['shape_list', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_initializer', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['cast_bool_to_primitive', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_xlm.py': {'total': [17, 180, 160, 304, 197, 464, 1418.0204256405973, 3536.632044227759, 14.355555555555556, 50770.317790469606, 2820.5732105816446, 1.178877348075919], 'functions': [['create_sinusoidal_embeddings', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['gelu', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['get_masks', [4, 8, 4, 8, 12, 12, 32.0, 43.01955000865388, 2.0, 86.03910001730776, 4.779950000961542, 0.014339850002884002]], ['__init__', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [12, 29, 24, 45, 41, 69, 183.90099886735348, 369.6710883186478, 9.310344827586206, 3441.765305035686, 191.20918361309367, 0.123223696106215]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [6, 10, 7, 13, 16, 20, 48.72905595320056, 80.0, 3.9, 312.0, 17.333333333333332, 0.026666666666666002]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [9, 72, 60, 116, 81, 176, 472.76392511682724, 1115.813600507694, 7.25, 8089.648603680782, 449.4249224267101, 0.371937866835898]], ['dummy_inputs', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prepare_inputs_for_generation', [2, 5, 3, 6, 7, 9, 13.60964047443681, 25.26619429851844, 1.2, 30.319433158222125, 1.684412953234562, 0.008422064766172]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['dummy_inputs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 35, 26, 47, 40, 73, 191.13454606751063, 388.50075092677747, 3.357142857142857, 1304.2525209684673, 72.45847338713708, 0.129500250308925]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 15, 11, 19, 20, 30, 70.2129994085646, 129.65784284662087, 3.166666666666666, 410.5831690142994, 22.810176056349967, 0.04321928094887301]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_xlm_roberta.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_tf_xlnet.py': {'total': [16, 248, 237, 449, 264, 686, 2036.6406849759453, 5518.454365879899, 14.483870967741936, 79928.5809767766, 4440.4767209320335, 1.839484788626633], 'functions': [['gelu', [3, 13, 7, 14, 16, 21, 52.860603837997665, 84.0, 1.615384615384615, 135.6923076923077, 7.538461538461539, 0.028]], ['swish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [4, 10, 5, 10, 14, 15, 41.219280948873624, 57.110323830864054, 2.0, 114.22064766172811, 6.345591536762672, 0.019036774610288]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['rel_shift', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['rel_attn_core', [6, 24, 16, 32, 30, 48, 125.5488750216347, 235.53074858920888, 4.0, 942.1229943568355, 52.34016635315753, 0.07851024952973601]], ['post_attention', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['call', [5, 19, 15, 30, 24, 45, 92.32026322986493, 206.32331253245206, 3.947368421052631, 814.4341284175739, 45.246340467642995, 0.06877443751081701]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['create_mask', [3, 6, 5, 8, 9, 13, 20.264662506490406, 41.20902501875006, 2.0, 82.41805003750012, 4.578780557638896, 0.013736341672916002]], ['cache_mem', [5, 7, 6, 10, 12, 16, 31.26112492884004, 57.359400011538504, 3.571428571428571, 204.85500004120897, 11.38083333562272, 0.019119800003846003]], ['positional_embedding', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['relative_positional_encoding', [10, 26, 30, 51, 36, 81, 155.43071362054204, 418.7639251168273, 9.807692307692308, 4107.1077271073445, 228.1726515059636, 0.13958797503894202]], ['call', [11, 90, 89, 178, 101, 267, 622.3205264746811, 1777.7424658947293, 10.877777777777778, 19337.887490121557, 1074.3270827845308, 0.592580821964909]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prepare_inputs_for_generation', [2, 2, 4, 6, 4, 10, 4.0, 20.0, 3.0, 60.0, 3.333333333333333, 0.006666666666666]], ['call', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['dummy_inputs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 38, 29, 52, 43, 81, 211.03088598529305, 439.5274451308699, 3.421052631578947, 1503.646522816134, 83.53591793422966, 0.146509148376956]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [3, 9, 5, 10, 12, 15, 33.28421251514428, 53.77443751081735, 1.666666666666666, 89.62406251802892, 4.9791145843349405, 0.017924812503605]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['call', [5, 15, 11, 19, 20, 30, 70.2129994085646, 129.65784284662087, 3.166666666666666, 410.5831690142994, 22.810176056349967, 0.04321928094887301]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_transfo_xl.py': {'total': [21, 235, 206, 378, 256, 584, 1943.220148321129, 4672.0, 16.88936170212766, 78907.09787234043, 4383.727659574468, 1.557333333333333], 'functions': [['build_tf_to_pytorch_map', [3, 21, 21, 41, 24, 62, 96.99355338051744, 284.2676750447117, 2.928571428571428, 832.49819120237, 46.24989951124277, 0.09475589168157]], ['load_tf_weights_in_transfo_xl', [6, 22, 16, 32, 28, 48, 113.61727061434748, 230.75303625876498, 4.363636363636363, 1006.9223400382471, 55.94013000212484, 0.076917678752921]], ['__init__', [2, 6, 3, 6, 8, 9, 17.509775004326936, 27.0, 1.0, 27.0, 1.5, 0.009000000000000001]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 2, 4, 3, 6, 2.0, 9.509775004326938, 1.0, 9.509775004326938, 0.5283208335737181, 0.0031699250014420003]], ['__init__', [5, 12, 9, 18, 17, 27, 54.62919048309069, 110.36149671375918, 3.75, 413.85561267659693, 22.99197848203316, 0.036787165571253]], ['_rel_shift', [1, 6, 3, 6, 7, 9, 15.509775004326936, 25.26619429851844, 0.5, 12.63309714925922, 0.701838730514401, 0.008422064766172]], ['forward', [6, 26, 23, 39, 32, 62, 137.72120767599534, 310.0, 4.5, 1395.0, 77.5, 0.10333333333333301]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [7, 14, 10, 20, 21, 30, 72.95445336320968, 131.76952268336282, 5.0, 658.847613416814, 36.602645189823, 0.04392317422778701]], ['forward', [8, 15, 10, 19, 23, 29, 82.60335893412778, 131.18329672565338, 5.066666666666666, 664.6620367433104, 36.92566870796169, 0.043727765575217]], ['_init_weight', [2, 4, 3, 5, 6, 8, 10.0, 20.67970000576925, 1.25, 25.84962500721156, 1.43609027817842, 0.006893233335256]], ['_init_bias', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_init_weights', [4, 28, 22, 39, 32, 61, 142.6059378176129, 305.0, 2.785714285714285, 849.6428571428571, 47.20238095238095, 0.101666666666666]], ['resize_token_embeddings', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_get_new_num_tokens_layer', [5, 11, 9, 16, 16, 25, 49.663388279447084, 100.0, 3.636363636363636, 363.6363636363636, 20.2020202020202, 0.033333333333333]], ['_get_embedding_shapes', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resize_token_embeddings', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_resize_cutoffs', [2, 4, 3, 5, 6, 8, 10.0, 20.67970000576925, 1.25, 25.84962500721156, 1.43609027817842, 0.006893233335256]], ['__init__', [3, 7, 5, 9, 10, 14, 24.406371956566698, 46.50699332842308, 1.928571428571428, 89.6920585619588, 4.982892142331044, 0.015502331109474]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['backward_compatible', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['reset_length', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['init_mems', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_update_mems', [4, 12, 6, 12, 16, 18, 51.01955000865388, 72.0, 2.0, 144.0, 8.0, 0.024]], ['forward', [9, 26, 32, 57, 35, 89, 150.74075768464922, 456.506188508102, 9.865384615384615, 4503.609128935698, 250.20050716309436, 0.15216872950270002]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['tie_weights', [3, 8, 5, 11, 11, 16, 28.75488750216347, 55.350905898196764, 2.0625, 114.16124341503082, 6.342291300835046, 0.018450301966065]], ['reset_length', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['init_mems', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 9, 8, 14, 14, 22, 40.13896548741762, 83.76180828526728, 3.8888888888888893, 325.7403655538172, 18.096686975212066, 0.027920602761755002]], ['get_output_embeddings', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['prepare_inputs_for_generation', [1, 1, 2, 2, 2, 4, 0.0, 4.0, 1.0, 4.0, 0.22222222222222202, 0.001333333333333]], ['_resize_cutoffs', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_transfo_xl_utilities.py': {'total': [15, 59, 63, 113, 74, 176, 405.6792988464764, 1092.8637923506953, 14.364406779661017, 15698.340068088379, 872.1300037826877, 0.36428793078356503], 'functions': [['__init__', [7, 15, 11, 22, 22, 33, 78.25484338853101, 147.1612434150308, 5.133333333333334, 755.4277161971582, 41.96820645539768, 0.049053747805010005]], ['_compute_logit', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [12, 32, 40, 69, 44, 109, 203.01955000865388, 595.0780464314654, 12.9375, 7698.822225707084, 427.71234587261574, 0.19835934881048803]], ['log_prob', [4, 10, 11, 20, 14, 31, 41.219280948873624, 118.02800258378572, 4.0, 472.1120103351429, 26.22844501861905, 0.039342667527928005]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_utils.py': {'total': [19, 213, 215, 365, 232, 580, 1728.203771863532, 4557.628977173992, 16.279342723004696, 74195.20412371277, 4121.95578465071, 1.519209659057997], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['find_pruneable_heads_and_indices', [3, 6, 4, 7, 9, 11, 20.264662506490406, 34.86917501586544, 1.75, 61.021056277764515, 3.390058682098028, 0.011623058338621001]], ['num_parameters', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_hook_rss_memory_pre_forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_hook_rss_memory_post_forward', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['add_memory_hooks', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['reset_memory_hooks_state', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['device', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['dtype', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['invert_attention_mask', [4, 15, 10, 18, 19, 28, 66.60335893412778, 118.94197037642039, 2.4, 285.4607289034089, 15.858929383522716, 0.039647323458806005]], ['get_extended_attention_mask', [5, 13, 7, 13, 18, 20, 59.715356810271004, 83.39850002884624, 2.5, 208.4962500721156, 11.583125004006423, 0.027799500009615]], ['get_head_mask', [4, 6, 4, 7, 10, 11, 23.509775004326936, 36.541209043760986, 2.333333333333333, 85.26282110210897, 4.736823394561609, 0.012180403014586]], ['_convert_head_mask_to_5d', [2, 6, 11, 14, 8, 25, 17.509775004326936, 75.0, 2.333333333333333, 175.0, 9.722222222222221, 0.025]], ['dummy_inputs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['base_model', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['set_input_embeddings', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tie_weights', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_tie_or_clone_weights', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['resize_token_embeddings', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_resize_token_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_get_resized_embeddings', [2, 3, 2, 4, 5, 6, 6.754887502163469, 13.931568569324174, 1.333333333333333, 18.575424759098897, 1.03196804217216, 0.004643856189774]], ['init_weights', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prune_heads', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['save_pretrained', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [12, 46, 39, 71, 58, 110, 297.1033999872765, 644.3779094640329, 9.26086956521739, 5967.499770253869, 331.52776501410386, 0.21479263648801003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 14, 11, 21, 19, 32, 64.91260938324326, 135.93368043019473, 3.75, 509.7513016132302, 28.319516756290568, 0.045311226810064005]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [6, 19, 22, 36, 25, 58, 96.22039775975506, 269.343659006934, 5.684210526315789, 1531.0060617236247, 85.05589231797916, 0.08978121966897801]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [3, 8, 17, 22, 11, 39, 28.75488750216347, 134.91783312685462, 4.125, 556.5360616482753, 30.918670091570853, 0.044972611042284005]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [7, 28, 31, 49, 35, 80, 154.25742227201613, 410.3426413555973, 6.125, 2513.3486783030335, 139.6304821279463, 0.136780880451865]], ['__init__', [3, 15, 8, 17, 18, 25, 63.35824643629125, 104.2481250360578, 1.7000000000000002, 177.22181256129826, 9.845656253405458, 0.034749375012019]], ['forward', [6, 15, 18, 28, 21, 46, 74.11313393845472, 202.04660144782298, 5.6, 1131.4609681078086, 62.858942672656035, 0.067348867149274]], ['prune_linear_layer', [2, 4, 4, 8, 6, 12, 10.0, 31.019550008653873, 2.0, 62.039100017307746, 3.446616667628208, 0.010339850002884001]], ['prune_conv1d_layer', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['prune_layer', [1, 2, 2, 4, 3, 6, 2.0, 9.509775004326938, 1.0, 9.509775004326938, 0.5283208335737181, 0.0031699250014420003]], ['apply_chunking_to_forward', [4, 10, 7, 14, 14, 21, 41.219280948873624, 79.95445336320968, 2.8, 223.8724694169871, 12.437359412054839, 0.026651484454403]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_xlm.py': {'total': [19, 157, 148, 268, 176, 416, 1225.9660803314137, 3103.1235533531158, 16.21656050955414, 50321.99087157345, 2795.6661595318583, 1.034374517784372], 'functions': [['create_sinusoidal_embeddings', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['get_masks', [6, 16, 8, 16, 22, 24, 79.50977500432694, 107.02635884729514, 3.0, 321.07907654188546, 17.837726474549193, 0.035675452949098005]], ['__init__', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['prune_heads', [4, 6, 4, 8, 10, 12, 23.509775004326936, 39.863137138648355, 2.666666666666666, 106.3016990363956, 5.905649946466422, 0.013287712379549002]], ['forward', [11, 26, 22, 40, 37, 62, 160.26518047667867, 322.9861086689949, 8.461538461538462, 2732.9593810453416, 151.8310767247412, 0.10766203622299801]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['dummy_inputs', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_init_weights', [2, 11, 8, 16, 13, 24, 40.053747805010275, 88.81055323538621, 1.4545454545454541, 129.17898652419814, 7.176610362455452, 0.029603517745128004]], ['__init__', [6, 10, 7, 13, 16, 20, 48.72905595320056, 80.0, 3.9, 312.0, 17.333333333333332, 0.026666666666666002]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [11, 47, 46, 85, 58, 131, 299.11942383385923, 767.3955103617119, 9.946808510638299, 7633.136193491497, 424.0631218606387, 0.25579850345390404]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [4, 10, 9, 16, 14, 25, 41.219280948873624, 95.18387305144009, 3.2, 304.58839376460827, 16.921577431367126, 0.031727957683813]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prepare_inputs_for_generation', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 8, 12, 12, 20, 32.0, 71.69925001442313, 3.0, 215.0977500432694, 11.949875002403855, 0.023899750004807003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 15, 14, 23, 21, 37, 74.11313393845472, 162.51574464281416, 4.6, 747.572425356945, 41.53180140871917, 0.054171914880938005]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 9, 10, 15, 13, 25, 36.52932501298081, 92.5109929535273, 3.333333333333333, 308.3699765117577, 17.13166536176432, 0.030836997651175]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_xlm_roberta.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\modeling_xlnet.py': {'total': [17, 243, 273, 483, 260, 756, 1995.2163066774606, 6064.9100666495115, 16.895061728395063, 102467.02995320811, 5692.612775178229, 2.02163668888317], 'functions': [['build_tf_xlnet_to_pytorch_map', [5, 26, 19, 39, 31, 58, 133.82107314610522, 287.3433860024388, 3.75, 1077.5376975091456, 59.863205417174754, 0.09578112866747901]], ['load_tf_weights_in_xlnet', [6, 19, 14, 29, 25, 43, 96.22039775975506, 199.68581616031315, 4.578947368421052, 914.3508424182759, 50.79726902323755, 0.066561938720104]], ['__init__', [4, 10, 5, 10, 14, 15, 41.219280948873624, 57.110323830864054, 2.0, 114.22064766172811, 6.345591536762672, 0.019036774610288]], ['prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['rel_shift', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['rel_shift_bnij', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['rel_attn_core', [6, 25, 15, 30, 31, 45, 131.60617974869504, 222.9388339674094, 3.6, 802.5798022826739, 44.58776679348188, 0.074312944655803]], ['post_attention', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['forward', [4, 13, 9, 18, 17, 27, 56.105716335834195, 110.36149671375918, 2.769230769230769, 305.6164524381023, 16.978691802116796, 0.036787165571253]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_init_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_input_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prune_heads', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['create_mask', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['cache_mem', [5, 7, 6, 10, 12, 16, 31.26112492884004, 57.359400011538504, 3.571428571428571, 204.85500004120897, 11.38083333562272, 0.019119800003846003]], ['positional_embedding', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['relative_positional_encoding', [6, 15, 18, 27, 21, 45, 74.11313393845472, 197.65428402504423, 5.4, 1067.333133735239, 59.29628520751328, 0.065884761341681]], ['forward', [11, 65, 80, 155, 76, 235, 429.5076556518598, 1468.2629656592428, 13.115384615384615, 19256.833511146222, 1069.824083952568, 0.48942098855308]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_output_embeddings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prepare_inputs_for_generation', [1, 1, 2, 2, 2, 4, 0.0, 4.0, 1.0, 4.0, 0.22222222222222202, 0.001333333333333]], ['forward', [3, 7, 6, 9, 10, 15, 24.406371956566698, 49.82892142331044, 1.928571428571428, 96.09863417352727, 5.338813009640404, 0.016609640474436003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 8, 12, 12, 20, 32.0, 71.69925001442313, 3.0, 215.0977500432694, 11.949875002403855, 0.023899750004807003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 9, 10, 15, 13, 25, 36.52932501298081, 92.5109929535273, 3.333333333333333, 308.3699765117577, 17.13166536176432, 0.030836997651175]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [3, 13, 22, 31, 16, 53, 52.860603837997665, 212.0, 3.576923076923077, 758.3076923076924, 42.12820512820513, 0.070666666666666]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 16, 14, 23, 22, 37, 79.50977500432694, 164.99896988958, 4.3125, 711.5580576488137, 39.53100320271187, 0.05499965662986]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [7, 28, 31, 49, 35, 80, 154.25742227201613, 410.3426413555973, 6.125, 2513.3486783030335, 139.6304821279463, 0.136780880451865]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\optimization.py': {'total': [15, 62, 53, 99, 77, 152, 427.76353017811414, 952.551554185625, 11.975806451612904, 11407.573048110107, 633.7540582283393, 0.317517184728541], 'functions': [['get_constant_schedule', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_constant_schedule_with_warmup', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['get_linear_schedule_with_warmup', [3, 7, 5, 10, 10, 15, 24.406371956566698, 49.82892142331044, 2.1428571428571432, 106.77626019280808, 5.932014455156004, 0.016609640474436003]], ['get_cosine_schedule_with_warmup', [5, 17, 10, 20, 22, 30, 81.0965087756926, 133.78294855911892, 2.941176470588235, 393.4792604679969, 21.859958914888715, 0.044594316186372]], ['get_cosine_with_hard_restarts_schedule_with_warmup', [7, 16, 11, 22, 23, 33, 83.65148445440323, 149.27754454988144, 4.8125, 718.3981831463044, 39.91101017479469, 0.049759181516627005]], ['__init__', [3, 9, 9, 13, 12, 22, 33.28421251514428, 78.86917501586544, 2.166666666666666, 170.8832125343751, 9.493511807465284, 0.026289725005288003]], ['step', [10, 21, 16, 30, 31, 46, 125.4579468272276, 227.8930302777963, 7.142857142857143, 1627.8073591271166, 90.4337421737287, 0.075964343425932]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\optimization_tf.py': {'total': [13, 45, 28, 53, 58, 81, 295.2391056706696, 474.4964606053333, 7.655555555555556, 3632.5340150786074, 201.80744528214484, 0.158165486868444], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__call__', [5, 8, 5, 10, 13, 15, 35.60964047443681, 55.506595772116384, 3.125, 173.4581117878637, 9.636561765992427, 0.018502198590705]], ['get_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['create_optimizer', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prepare_local', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_decay_weights_op', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['apply_gradients', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_get_lr', [2, 4, 3, 6, 6, 9, 10.0, 23.264662506490403, 1.5, 34.89699375973561, 1.938721875540867, 0.007754887502163001]], ['_resource_apply_dense', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_resource_apply_sparse', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_config', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_do_use_weight_decay', [2, 5, 3, 6, 7, 9, 13.60964047443681, 25.26619429851844, 1.2, 30.319433158222125, 1.684412953234562, 0.008422064766172]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['step', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['gradients', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['__call__', [5, 10, 7, 13, 15, 20, 44.82892142331043, 78.13781191217038, 3.25, 253.94788871455373, 14.10821603969743, 0.026045937304056]], ['reset', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\pipelines.py': {'total': [18, 232, 196, 363, 250, 559, 1898.1102408955583, 4452.873415126107, 14.081896551724139, 62704.90278972842, 3483.6057105404675, 1.484291138375369], 'functions': [['get_framework', [3, 11, 6, 11, 14, 17, 42.808635307173745, 64.72503367497926, 1.5, 97.08755051246888, 5.393752806248271, 0.021575011224993]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__call__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['handle_kwargs', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['handle_args', [3, 4, 3, 5, 7, 8, 12.75488750216347, 22.458839376460833, 1.875, 42.11032383086406, 2.339462435048003, 0.0074862797921530005]], ['__call__', [2, 6, 4, 8, 8, 12, 17.509775004326936, 36.0, 1.333333333333333, 48.0, 2.666666666666666, 0.012]], ['__init__', [5, 12, 8, 14, 17, 22, 54.62919048309069, 89.92418250750748, 2.916666666666666, 262.2788656468968, 14.571048091494267, 0.029974727502502]], ['__iter__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_binary', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_str', [1, 4, 3, 6, 5, 9, 8.0, 20.89735285398626, 0.75, 15.673014640489694, 0.8707230355827601, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__iter__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__iter__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__iter__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['save', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_binary', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['transform', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['predict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [7, 16, 10, 20, 23, 30, 83.65148445440323, 135.7068586817104, 4.375, 593.717506732483, 32.98430592958239, 0.045235619560570005]], ['save_pretrained', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['transform', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['predict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['device_placement', [2, 7, 4, 7, 9, 11, 21.651484454403228, 34.86917501586544, 1.0, 34.86917501586544, 1.937176389770302, 0.011623058338621001]], ['ensure_tensor_on_device', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_parse_and_tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__call__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__call__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_parse_and_tokenize', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__call__', [9, 36, 25, 48, 45, 73, 214.64662506490404, 400.90527603206624, 6.0, 2405.4316561923974, 133.63509201068874, 0.13363509201068802]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__call__', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['ensure_exactly_one_mask_token', [2, 2, 2, 4, 4, 6, 4.0, 12.0, 2.0, 24.0, 1.333333333333333, 0.004]], ['__call__', [3, 10, 7, 14, 13, 21, 37.974168451037094, 77.70923408096293, 2.1, 163.18939157002217, 9.066077309445676, 0.025903078026987002]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__call__', [8, 31, 25, 44, 39, 69, 177.58008562199316, 364.69275310149516, 5.67741935483871, 2070.5136950278434, 115.02853861265797, 0.121564251033831]], ['group_entities', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__call__', [8, 21, 15, 28, 29, 43, 116.23866587835397, 208.89318279048564, 5.333333333333333, 1114.09697488259, 61.894276382366115, 0.06963106093016101]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['create_sample', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__call__', [6, 25, 20, 37, 31, 57, 131.60617974869504, 282.3891896920519, 4.44, 1253.8080022327106, 69.65600012403948, 0.09412972989735001]], ['decode', [4, 7, 9, 14, 11, 23, 27.651484454403228, 79.56692722865785, 4.0, 318.2677089146314, 17.681539384146188, 0.026522309076219]], ['span_to_answer', [4, 11, 10, 19, 15, 29, 46.053747805010275, 113.29982727264704, 3.454545454545454, 391.399403305508, 21.744411294750442, 0.037766609090882]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__call__', [10, 22, 16, 30, 32, 46, 131.32677655889415, 230.0, 6.818181818181818, 1568.1818181818182, 87.12121212121212, 0.07666666666666601]], ['__call__', [7, 15, 11, 20, 22, 31, 78.25484338853101, 138.24238017775622, 4.666666666666667, 645.1311074961957, 35.840617083121984, 0.046080793392585]], ['pipeline', [5, 13, 8, 16, 18, 24, 59.715356810271004, 100.07820003461549, 3.076923076923077, 307.9329231834323, 17.107384621301794, 0.033359400011538004]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\testing_utils.py': {'total': [2, 7, 6, 7, 9, 13, 21.651484454403228, 41.20902501875006, 1.0, 41.20902501875006, 2.289390278819448, 0.013736341672916002], 'functions': [['parse_flag_from_env', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['parse_int_from_env', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['slow', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['custom_tokenizers', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['require_torch', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['require_tf', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['require_multigpu', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_albert.py': {'total': [11, 66, 45, 83, 77, 128, 436.9837596826682, 802.1486772089474, 6.916666666666667, 5548.195017361887, 308.2330565201048, 0.267382892402982], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__getstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__setstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['preprocess_text', [1, 2, 2, 2, 3, 4, 2.0, 6.339850002884625, 0.5, 3.169925001442312, 0.176106944524572, 0.002113283334294]], ['_tokenize', [6, 15, 12, 20, 21, 32, 74.11313393845472, 140.55415752892034, 4.0, 562.2166301156814, 31.234257228648964, 0.046851385842973006]], ['_convert_token_to_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_id_to_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build_inputs_with_special_tokens', [2, 9, 7, 14, 11, 21, 30.529325012980813, 72.64806399138325, 1.555555555555555, 113.00809954215173, 6.278227752341762, 0.024216021330461003]], ['get_special_tokens_mask', [4, 22, 12, 24, 26, 36, 106.10749561002054, 169.21582985307933, 2.181818181818181, 369.1981742249003, 20.511009679161127, 0.056405276617693005]], ['create_token_type_ids_from_sequences', [3, 15, 10, 20, 18, 30, 63.35824643629125, 125.09775004326937, 2.0, 250.19550008653874, 13.899750004807707, 0.041699250014423005]], ['save_vocabulary', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_auto.py': {'total': [3, 5, 3, 5, 8, 8, 16.36452797660028, 24.0, 1.5, 36.0, 2.0, 0.008], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [3, 5, 3, 5, 8, 8, 16.36452797660028, 24.0, 1.5, 36.0, 2.0, 0.008]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_bart.py': {'total': [2, 8, 6, 12, 10, 18, 26.0, 59.794705707972525, 1.5, 89.69205856195879, 4.982892142331043, 0.019931568569324], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build_inputs_with_special_tokens', [2, 5, 4, 8, 7, 12, 13.60964047443681, 33.68825906469125, 1.6, 53.901214503506004, 2.994511916861444, 0.011229419688230002]], ['set_lang', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['prepare_translation_batch', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_bert.py': {'total': [17, 150, 96, 196, 167, 292, 1153.8096718756378, 2156.0416534024234, 11.106666666666667, 23946.435963789583, 1330.3575535438658, 0.7186805511341411], 'functions': [['load_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['whitespace_tokenize', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_tokenize', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_convert_token_to_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_id_to_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build_inputs_with_special_tokens', [2, 11, 7, 14, 13, 21, 40.053747805010275, 77.70923408096293, 1.272727272727272, 98.90266155758918, 5.494592308754955, 0.025903078026987002]], ['get_special_tokens_mask', [4, 22, 12, 24, 26, 36, 106.10749561002054, 169.21582985307933, 2.181818181818181, 369.1981742249003, 20.511009679161127, 0.056405276617693005]], ['create_token_type_ids_from_sequences', [3, 15, 10, 20, 18, 30, 63.35824643629125, 125.09775004326937, 2.0, 250.19550008653874, 13.899750004807707, 0.041699250014423005]], ['save_vocabulary', [2, 5, 3, 6, 7, 9, 13.60964047443681, 25.26619429851844, 1.2, 30.319433158222125, 1.684412953234562, 0.008422064766172]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['tokenize', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_run_strip_accents', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_run_split_on_punc', [6, 8, 6, 11, 14, 17, 39.50977500432694, 64.72503367497926, 4.125, 266.99076390928946, 14.832820217182748, 0.021575011224993]], ['_tokenize_chinese_chars', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_is_chinese_char', [4, 41, 25, 56, 45, 81, 227.65963218934144, 444.84010080270366, 2.731707317073171, 1215.1729582903126, 67.50960879390625, 0.148280033600901]], ['_clean_text', [2, 6, 3, 7, 8, 10, 17.509775004326936, 30.0, 1.166666666666666, 35.0, 1.9444444444444442, 0.01]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [6, 12, 8, 16, 18, 24, 58.52932501298082, 100.07820003461549, 4.0, 400.31280013846197, 22.23960000769233, 0.033359400011538004]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build_inputs_with_special_tokens', [1, 8, 4, 8, 9, 12, 24.0, 38.03910001730775, 0.5, 19.019550008653876, 1.056641667147437, 0.012679700005769]], ['create_token_type_ids_from_sequences', [3, 15, 10, 20, 18, 30, 63.35824643629125, 125.09775004326937, 2.0, 250.19550008653874, 13.899750004807707, 0.041699250014423005]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_bert_japanese.py': {'total': [7, 24, 15, 29, 31, 44, 129.690584471711, 217.98463765702255, 4.229166666666667, 921.8933634244912, 51.21629796802729, 0.072661545885674], 'functions': [['__init__', [3, 9, 6, 11, 12, 17, 33.28421251514428, 60.94436251225966, 1.833333333333333, 111.73133127247604, 6.207296181804224, 0.020314787504086003]], ['_tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]], ['tokenize', [5, 10, 6, 12, 15, 18, 44.82892142331043, 70.32403072095333, 3.0, 210.97209216286, 11.720671786825555, 0.023441343573651]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_camembert.py': {'total': [9, 64, 39, 77, 73, 116, 412.5293250129808, 718.019648830082, 5.4140625, 3887.4032549941157, 215.9668474996731, 0.23933988294336], 'functions': [['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['build_inputs_with_special_tokens', [2, 12, 8, 16, 14, 24, 45.01955000865388, 91.37651812938249, 1.333333333333333, 121.83535750584332, 6.768630972546851, 0.030458839376460004]], ['get_special_tokens_mask', [5, 22, 12, 24, 27, 36, 109.71713608445735, 171.1759500778849, 2.727272727272727, 466.8435002124133, 25.93575001180074, 0.05705865002596101]], ['create_token_type_ids_from_sequences', [3, 14, 10, 20, 17, 30, 58.05785641096992, 122.6238852375102, 2.1428571428571432, 262.7654683660933, 14.59808157589407, 0.040874628412503]], ['vocab_size', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_token_to_id', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['_convert_id_to_token', [2, 3, 2, 4, 5, 6, 6.754887502163469, 13.931568569324174, 1.333333333333333, 18.575424759098897, 1.03196804217216, 0.004643856189774]], ['__getstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__setstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_vocabulary', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_ctrl.py': {'total': [10, 31, 24, 43, 41, 67, 186.7993665708668, 358.95598430941163, 6.935483870967742, 2489.5334395652744, 138.30741330918192, 0.11965199476980301], 'functions': [['get_pairs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['bpe', [9, 24, 19, 35, 33, 54, 138.56842503028858, 272.3972824453565, 6.5625, 1787.607166047652, 99.31150922486955, 0.09079909414845201]], ['_tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_token_to_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_id_to_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_vocabulary', [3, 6, 4, 7, 9, 11, 20.264662506490406, 34.86917501586544, 1.75, 61.021056277764515, 3.390058682098028, 0.011623058338621001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_distilbert.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_electra.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_flaubert.py': {'total': [3, 5, 3, 7, 8, 10, 16.36452797660028, 30.0, 2.1, 63.0, 3.5, 0.01], 'functions': [['convert_to_unicode', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['preprocess_text', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_tokenize', [2, 3, 2, 5, 5, 7, 6.754887502163469, 16.253496664211536, 1.666666666666666, 27.089161107019226, 1.5049533948344012, 0.005417832221403]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_gpt2.py': {'total': [12, 50, 35, 66, 62, 101, 325.2123594973901, 601.3738273490744, 7.92, 4762.8807126046695, 264.60448403359277, 0.200457942449691], 'functions': [['bytes_to_unicode', [3, 14, 10, 20, 17, 30, 58.05785641096992, 122.6238852375102, 2.1428571428571432, 262.7654683660933, 14.59808157589407, 0.040874628412503]], ['get_pairs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['bpe', [8, 19, 14, 28, 27, 42, 104.71062275542812, 199.7052750908657, 5.894736842105263, 1177.2100426408927, 65.40055792449404, 0.06656842503028801]], ['_tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_token_to_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_id_to_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_vocabulary', [3, 6, 4, 7, 9, 11, 20.264662506490406, 34.86917501586544, 1.75, 61.021056277764515, 3.390058682098028, 0.011623058338621001]], ['prepare_for_tokenization', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_batch_encode_plus', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['_encode_plus', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_longformer.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_marian.py': {'total': [7, 32, 20, 39, 39, 59, 179.65148445440323, 311.8387309128727, 4.265625, 1330.1870865502226, 73.89928258612348, 0.103946243637624], 'functions': [['__init__', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['_setup_normalizer', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['normalize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_token_to_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['remove_language_code', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_tokenize', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_convert_id_to_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build_inputs_with_special_tokens', [2, 6, 4, 8, 8, 12, 17.509775004326936, 36.0, 1.333333333333333, 48.0, 2.666666666666666, 0.012]], ['prepare_translation_batch', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_vocabulary', [2, 6, 5, 9, 8, 14, 17.509775004326936, 42.0, 1.5, 63.0, 3.5, 0.014]], ['get_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__getstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__setstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_special_tokens_to_add', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_special_token_mask', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_special_tokens_mask', [2, 7, 4, 8, 9, 12, 21.651484454403228, 38.03910001730775, 1.142857142857142, 43.47325716263743, 2.415180953479857, 0.012679700005769]], ['load_spm', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_json', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['load_json', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_mobilebert.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_openai.py': {'total': [11, 34, 26, 48, 45, 74, 211.02748440752185, 406.39712912839593, 7.764705882352941, 3155.554179114604, 175.30856550636688, 0.135465709709465], 'functions': [['get_pairs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['text_standardize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['bpe', [9, 25, 20, 38, 34, 58, 144.62572975734892, 295.07284479251973, 6.84, 2018.298258380835, 112.1276810211575, 0.09835761493083901]], ['_tokenize', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_convert_token_to_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_id_to_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_vocabulary', [3, 6, 4, 7, 9, 11, 20.264662506490406, 34.86917501586544, 1.75, 61.021056277764515, 3.390058682098028, 0.011623058338621001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_reformer.py': {'total': [3, 6, 4, 6, 9, 10, 20.264662506490406, 31.699250014423125, 1.5, 47.548875021634686, 2.641604167868593, 0.010566416671474], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__getstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__setstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_tokenize', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['_convert_token_to_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_id_to_token', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_vocabulary', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_retribert.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_roberta.py': {'total': [9, 76, 52, 103, 85, 155, 503.3718160346933, 993.4555951013439, 6.098684210526316, 6058.771951703591, 336.5984417613106, 0.331151865033781], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build_inputs_with_special_tokens', [2, 12, 8, 16, 14, 24, 45.01955000865388, 91.37651812938249, 1.333333333333333, 121.83535750584332, 6.768630972546851, 0.030458839376460004]], ['get_special_tokens_mask', [5, 22, 12, 24, 27, 36, 109.71713608445735, 171.1759500778849, 2.727272727272727, 466.8435002124133, 25.93575001180074, 0.05705865002596101]], ['create_token_type_ids_from_sequences', [3, 14, 10, 20, 17, 30, 58.05785641096992, 122.6238852375102, 2.1428571428571432, 262.7654683660933, 14.59808157589407, 0.040874628412503]], ['prepare_for_tokenization', [5, 11, 6, 11, 16, 17, 49.663388279447084, 68.0, 2.5, 170.0, 9.444444444444445, 0.022666666666666002]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build_inputs_with_special_tokens', [2, 11, 6, 12, 13, 18, 40.053747805010275, 66.60791492653966, 1.09090909090909, 72.66317991986145, 4.036843328881192, 0.022202638308846]], ['create_token_type_ids_from_sequences', [3, 14, 10, 20, 17, 30, 58.05785641096992, 122.6238852375102, 2.1428571428571432, 262.7654683660933, 14.59808157589407, 0.040874628412503]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_t5.py': {'total': [7, 19, 11, 20, 26, 31, 100.36210720983135, 145.71363126237387, 3.684210526315789, 536.8396941245353, 29.82442745136307, 0.048571210420791], 'functions': [['__init__', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['vocab_size', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__getstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__setstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_tokenize', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['_convert_token_to_id', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['_convert_id_to_token', [2, 5, 3, 6, 7, 9, 13.60964047443681, 25.26619429851844, 1.2, 30.319433158222125, 1.684412953234562, 0.008422064766172]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_vocabulary', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_transfo_xl.py': {'total': [19, 151, 115, 228, 170, 343, 1173.7097383935152, 2541.421091095232, 14.344370860927153, 36455.08664445214, 2025.282591358452, 0.8471403636984101], 'functions': [['__init__', [3, 7, 6, 12, 10, 18, 24.406371956566698, 59.794705707972525, 2.571428571428571, 153.75781467764364, 8.542100815424646, 0.019931568569324]], ['_compile_space_around_punctuation_pattern', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['count_file', [4, 7, 4, 9, 11, 13, 27.651484454403228, 44.97261104228487, 2.571428571428571, 115.64385696587539, 6.42465872032641, 0.014990870347428001]], ['count_sents', [4, 7, 4, 9, 11, 13, 27.651484454403228, 44.97261104228487, 2.571428571428571, 115.64385696587539, 6.42465872032641, 0.014990870347428001]], ['_build_from_file', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]], ['save_vocabulary', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build_vocab', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['encode_file', [4, 7, 4, 9, 11, 13, 27.651484454403228, 44.97261104228487, 2.571428571428571, 115.64385696587539, 6.42465872032641, 0.014990870347428001]], ['encode_sents', [4, 7, 4, 9, 11, 13, 27.651484454403228, 44.97261104228487, 2.571428571428571, 115.64385696587539, 6.42465872032641, 0.014990870347428001]], ['add_special', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['add_symbol', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['move_added_token', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['_convert_id_to_token', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['_convert_token_to_id', [1, 4, 3, 6, 5, 9, 8.0, 20.89735285398626, 0.75, 15.673014640489694, 0.8707230355827601, 0.006965784284662001]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_to_tensor', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_tokenize', [2, 7, 4, 8, 9, 12, 21.651484454403228, 38.03910001730775, 1.142857142857142, 43.47325716263743, 2.415180953479857, 0.012679700005769]], ['prepare_for_tokenization', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [2, 8, 5, 10, 10, 15, 26.0, 49.82892142331044, 1.25, 62.28615177913805, 3.460341765507669, 0.016609640474436003]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['save_pretrained', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [6, 9, 7, 13, 15, 20, 44.039100017307746, 78.13781191217038, 4.333333333333333, 338.5971849527383, 18.810954719596573, 0.026045937304056]], ['get_batch', [3, 9, 8, 16, 12, 24, 33.28421251514428, 86.03910001730776, 2.666666666666666, 229.43760004615402, 12.746533335897446, 0.028679700005769002]], ['get_fixlen_iter', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_varlen_iter', [6, 11, 7, 14, 17, 21, 53.563522809337215, 85.83671966625714, 3.818181818181818, 327.74020236207275, 18.207789020115154, 0.028612239888752004]], ['__iter__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_sent_stream', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['stream_iterator', [10, 16, 19, 34, 26, 53, 97.21928094887363, 249.1233050614779, 10.625, 2646.9351162782027, 147.0519509043446, 0.083041101687159]], ['__iter__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_sent_stream', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__iter__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [3, 8, 5, 10, 11, 15, 28.75488750216347, 51.89147427955947, 1.875, 97.296514274174, 5.405361904120777, 0.017297158093186]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build_corpus', [2, 6, 6, 12, 8, 18, 17.509775004326936, 54.0, 2.0, 108.0, 6.0, 0.018000000000000002]], ['get_iterator', [2, 8, 7, 14, 10, 21, 26.0, 69.76048999263462, 1.75, 122.08085748711058, 6.782269860395032, 0.023253496664211]], ['get_lm_corpus', [2, 5, 4, 8, 7, 12, 13.60964047443681, 33.68825906469125, 1.6, 53.901214503506004, 2.994511916861444, 0.011229419688230002]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_utils.py': {'total': [18, 158, 99, 200, 176, 299, 1229.056008237944, 2230.370053972552, 11.39240506329114, 25409.279095889833, 1411.6266164383242, 0.743456684657517], 'functions': [['_is_whitespace', [2, 11, 6, 14, 13, 20, 40.053747805010275, 74.00879436282185, 1.272727272727272, 94.1930110072278, 5.232945055957099, 0.024669598120940002]], ['_is_control', [2, 7, 4, 9, 9, 13, 21.651484454403228, 41.20902501875006, 1.2857142857142851, 52.98303216696437, 2.943501787053576, 0.013736341672916002]], ['_is_punctuation', [4, 21, 13, 28, 25, 41, 100.23866587835397, 190.3981037807637, 2.666666666666666, 507.7282767487032, 28.207126486039066, 0.063466034593587]], ['_is_end_of_word', [2, 5, 3, 5, 7, 8, 13.60964047443681, 22.458839376460833, 1.0, 22.458839376460833, 1.247713298692268, 0.0074862797921530005]], ['_is_start_of_word', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['is_fast', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_added_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__len__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_add_tokens', [6, 13, 7, 14, 19, 21, 63.61549134016113, 89.20647778231529, 3.230769230769231, 288.20554360440326, 16.011419089133515, 0.029735492594105004]], ['num_special_tokens_to_add', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [9, 48, 37, 70, 57, 107, 296.6075250475963, 624.1192315156275, 6.5625, 4095.782456821305, 227.54346982340584, 0.208039743838542]], ['_tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_ids', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_convert_token_to_id_with_added_voc', [2, 3, 2, 4, 5, 6, 6.754887502163469, 13.931568569324174, 1.333333333333333, 18.575424759098897, 1.03196804217216, 0.004643856189774]], ['_convert_token_to_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_encode_plus', [3, 11, 5, 12, 14, 17, 42.808635307173745, 64.72503367497926, 1.636363636363636, 105.91369146814789, 5.8840939704526605, 0.021575011224993]], ['_batch_encode_plus', [4, 15, 8, 16, 19, 24, 66.60335893412778, 101.95026032264605, 2.133333333333333, 217.49388868831156, 12.082993816017309, 0.033983420107548006]], ['_batch_prepare_for_model', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['prepare_for_tokenization', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_special_tokens_mask', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['convert_ids_to_tokens', [2, 6, 4, 8, 8, 12, 17.509775004326936, 36.0, 1.333333333333333, 48.0, 2.666666666666666, 0.012]], ['_convert_id_to_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['decode', [2, 5, 3, 6, 7, 9, 13.60964047443681, 25.26619429851844, 1.2, 30.319433158222125, 1.684412953234562, 0.008422064766172]], ['save_vocabulary', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_utils_base.py': {'total': [18, 393, 268, 515, 411, 783, 3462.0841524135935, 6798.784759022758, 11.793893129770993, 80184.14086023024, 4454.6744922350135, 2.266261586340919], 'functions': [['_missing_', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['is_fast', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__getitem__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__getattr__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__getstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__setstate__', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]], ['keys', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['values', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['items', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['encodings', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokens', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['words', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['token_to_word', [4, 7, 6, 11, 11, 17, 27.651484454403228, 58.81033751683406, 3.1428571428571432, 184.83248933862134, 10.268471629923408, 0.019603445838944]], ['word_to_tokens', [4, 7, 6, 11, 11, 17, 27.651484454403228, 58.81033751683406, 3.1428571428571432, 184.83248933862134, 10.268471629923408, 0.019603445838944]], ['token_to_chars', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['char_to_token', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['word_to_chars', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['char_to_word', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['convert_to_tensors', [6, 12, 9, 17, 18, 26, 58.52932501298082, 108.41805003750011, 4.25, 460.77671265937545, 25.598706258854193, 0.0361393500125]], ['to', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['sanitize_special_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['add_special_tokens', [5, 9, 6, 11, 14, 17, 40.13896548741762, 64.72503367497926, 3.055555555555555, 197.77093622910328, 10.987274234950183, 0.021575011224993]], ['add_tokens', [1, 2, 2, 2, 3, 4, 2.0, 6.339850002884625, 0.5, 3.169925001442312, 0.176106944524572, 0.002113283334294]], ['bos_token', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['eos_token', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['unk_token', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['sep_token', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['pad_token', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['cls_token', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['mask_token', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['additional_special_tokens', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['bos_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['eos_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['unk_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['sep_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['pad_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['cls_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['mask_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['additional_special_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['bos_token_id', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['eos_token_id', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['unk_token_id', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['sep_token_id', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['pad_token_id', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['pad_token_type_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['cls_token_id', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['mask_token_id', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['additional_special_tokens_ids', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['special_tokens_map', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['special_tokens_map_extended', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['all_special_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['all_special_tokens_extended', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['all_special_ids', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['max_len', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['max_len_single_sentence', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['max_len_sentences_pair', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['max_len_single_sentence', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['max_len_sentences_pair', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['from_pretrained', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_from_pretrained', [9, 27, 20, 38, 36, 58, 156.9112875713945, 299.8556500836541, 6.333333333333333, 1899.0857838631425, 105.50476577017459, 0.099951883361218]], ['save_pretrained', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['encode', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_special_tokens_to_add', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_get_padding_truncation_strategies', [10, 37, 33, 67, 47, 100, 225.9690554771448, 555.4588851677638, 9.054054054054054, 5029.154771113537, 279.3974872840854, 0.18515296172258702]], ['__call__', [6, 40, 22, 46, 46, 68, 228.38689879982144, 375.60221301187687, 3.45, 1295.8276348909753, 71.99042416060973, 0.125200737670625]], ['encode_plus', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_encode_plus', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['batch_encode_plus', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_batch_encode_plus', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['pad', [5, 14, 8, 14, 19, 22, 64.91260938324326, 93.45440529575887, 2.5, 233.6360132393972, 12.979778513299843, 0.031151468431919002]], ['create_token_type_ids_from_sequences', [3, 10, 5, 10, 13, 15, 37.974168451037094, 55.506595772116384, 1.5, 83.25989365817458, 4.625549647676365, 0.018502198590705]], ['build_inputs_with_special_tokens', [2, 3, 2, 4, 5, 6, 6.754887502163469, 13.931568569324174, 1.333333333333333, 18.575424759098897, 1.03196804217216, 0.004643856189774]], ['prepare_for_model', [10, 36, 23, 48, 46, 71, 219.33658100079685, 392.1728988800479, 6.666666666666667, 2614.4859925336527, 145.24922180742516, 0.130724299626682]], ['truncate_sequences', [10, 21, 26, 41, 31, 67, 125.4579468272276, 331.9311527959207, 9.761904761904763, 3240.2803011030355, 180.01557228350197, 0.11064371759864002]], ['_pad', [11, 60, 41, 83, 71, 124, 392.4671835415214, 762.5686428185805, 7.608333333333333, 5801.876424111367, 322.32646800618704, 0.254189547606193]], ['batch_decode', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['decode', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_special_tokens_mask', [3, 6, 3, 6, 9, 9, 20.264662506490406, 28.529325012980813, 1.5, 42.793987519471216, 2.377443751081734, 0.009509775004326001]], ['clean_up_tokenization', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_utils_fast.py': {'total': [11, 42, 25, 47, 53, 72, 264.53107956171823, 412.41027272855035, 6.154761904761905, 2538.2870357221495, 141.0159464290083, 0.137470090909516], 'functions': [['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['is_fast', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_added_vocab', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__len__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['backend_tokenizer', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['decoder', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_encoding', [5, 10, 7, 14, 15, 21, 44.82892142331043, 82.0447025077789, 3.5, 287.15645877722613, 15.953136598734785, 0.027348234169259]], ['convert_tokens_to_ids', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_convert_token_to_id_with_added_voc', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_convert_id_to_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_add_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['num_special_tokens_to_add', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_ids_to_tokens', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_truncation_and_padding', [2, 5, 3, 6, 7, 9, 13.60964047443681, 25.26619429851844, 1.2, 30.319433158222125, 1.684412953234562, 0.008422064766172]], ['_batch_encode_plus', [4, 7, 4, 7, 11, 11, 27.651484454403228, 38.053747805010275, 2.0, 76.10749561002055, 4.228194200556697, 0.012684582601670002]], ['_encode_plus', [4, 9, 5, 9, 13, 14, 36.52932501298081, 51.80615605397529, 2.0, 103.61231210795059, 5.75623956155281, 0.017268718684658003]], ['decode', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_vocabulary', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_xlm.py': {'total': [14, 109, 74, 144, 123, 218, 791.0350603094913, 1513.4681621639543, 9.247706422018348, 13996.109242763907, 777.5616245979949, 0.504489387387984], 'functions': [['get_pairs', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['lowercase_and_remove_accent', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['replace_unicode_punct', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['remove_non_printing_char', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['romanian_preprocessing', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [4, 8, 5, 9, 12, 14, 32.0, 50.18947501009619, 2.25, 112.92631877271643, 6.273684376262024, 0.016729825003365003]], ['moses_punct_norm', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['moses_tokenize', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['moses_pipeline', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['ja_tokenize', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['bpe', [9, 25, 20, 38, 34, 58, 144.62572975734892, 295.07284479251973, 6.84, 2018.298258380835, 112.1276810211575, 0.09835761493083901]], ['_tokenize', [4, 14, 11, 22, 18, 33, 61.30296890880645, 137.6075250475963, 3.1428571428571432, 432.48079300673123, 24.026710722596178, 0.045869175015865]], ['_convert_token_to_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_id_to_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build_inputs_with_special_tokens', [2, 9, 7, 14, 11, 21, 30.529325012980813, 72.64806399138325, 1.555555555555555, 113.00809954215173, 6.278227752341762, 0.024216021330461003]], ['get_special_tokens_mask', [4, 22, 12, 24, 26, 36, 106.10749561002054, 169.21582985307933, 2.181818181818181, 369.1981742249003, 20.511009679161127, 0.056405276617693005]], ['create_token_type_ids_from_sequences', [3, 15, 10, 20, 18, 30, 63.35824643629125, 125.09775004326937, 2.0, 250.19550008653874, 13.899750004807707, 0.041699250014423005]], ['save_vocabulary', [3, 6, 4, 7, 9, 11, 20.264662506490406, 34.86917501586544, 1.75, 61.021056277764515, 3.390058682098028, 0.011623058338621001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_xlm_roberta.py': {'total': [8, 64, 39, 77, 72, 116, 408.0, 715.7113001673082, 4.8125, 3444.3606320551708, 191.3533684475095, 0.23857043338910203], 'functions': [['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__getstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__setstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build_inputs_with_special_tokens', [2, 12, 8, 16, 14, 24, 45.01955000865388, 91.37651812938249, 1.333333333333333, 121.83535750584332, 6.768630972546851, 0.030458839376460004]], ['get_special_tokens_mask', [5, 22, 12, 24, 27, 36, 109.71713608445735, 171.1759500778849, 2.727272727272727, 466.8435002124133, 25.93575001180074, 0.05705865002596101]], ['create_token_type_ids_from_sequences', [3, 14, 10, 20, 17, 30, 58.05785641096992, 122.6238852375102, 2.1428571428571432, 262.7654683660933, 14.59808157589407, 0.040874628412503]], ['vocab_size', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['get_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_token_to_id', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_convert_id_to_token', [2, 3, 2, 4, 5, 6, 6.754887502163469, 13.931568569324174, 1.333333333333333, 18.575424759098897, 1.03196804217216, 0.004643856189774]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_vocabulary', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\tokenization_xlnet.py': {'total': [11, 62, 43, 79, 73, 122, 407.2139190489966, 755.1585961833622, 7.008064516129032, 5292.200161962433, 294.0111201090241, 0.25171953206112], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['vocab_size', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_vocab', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__getstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__setstate__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['preprocess_text', [1, 2, 2, 2, 3, 4, 2.0, 6.339850002884625, 0.5, 3.169925001442312, 0.176106944524572, 0.002113283334294]], ['_tokenize', [6, 15, 12, 20, 21, 32, 74.11313393845472, 140.55415752892034, 4.0, 562.2166301156814, 31.234257228648964, 0.046851385842973006]], ['_convert_token_to_id', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_convert_id_to_token', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['build_inputs_with_special_tokens', [2, 9, 7, 14, 11, 21, 30.529325012980813, 72.64806399138325, 1.555555555555555, 113.00809954215173, 6.278227752341762, 0.024216021330461003]], ['get_special_tokens_mask', [4, 18, 10, 20, 22, 30, 83.05865002596161, 133.78294855911892, 2.222222222222222, 297.2954412424865, 16.51641340236036, 0.044594316186372]], ['create_token_type_ids_from_sequences', [3, 15, 10, 20, 18, 30, 63.35824643629125, 125.09775004326937, 2.0, 250.19550008653874, 13.899750004807707, 0.041699250014423005]], ['save_vocabulary', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\trainer.py': {'total': [19, 206, 170, 317, 225, 487, 1664.129731355171, 3805.311440122697, 14.618932038834952, 55629.58932975487, 3090.532740541937, 1.268437146707565], 'functions': [['is_tensorboard_available', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['torch_distributed_zero_first', [3, 4, 3, 5, 7, 8, 12.75488750216347, 22.458839376460833, 1.875, 42.11032383086406, 2.339462435048003, 0.0074862797921530005]], ['__init__', [4, 9, 7, 12, 13, 19, 36.52932501298081, 70.30835464468075, 2.666666666666666, 187.48894571914866, 10.416052539952704, 0.023436118214893]], ['__iter__', [4, 10, 7, 14, 14, 21, 41.219280948873624, 79.95445336320968, 2.8, 223.8724694169871, 12.437359412054839, 0.026651484454403]], ['__len__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_tpu_sampler', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [4, 11, 7, 12, 15, 19, 46.053747805010275, 74.23092131656186, 2.181818181818181, 161.9583737815895, 8.997687432310528, 0.024743640438853003]], ['get_train_dataloader', [3, 5, 3, 5, 8, 8, 16.36452797660028, 24.0, 1.5, 36.0, 2.0, 0.008]], ['get_eval_dataloader', [5, 7, 6, 11, 12, 17, 31.26112492884004, 60.94436251225966, 3.928571428571428, 239.42428129816292, 13.301348961009051, 0.020314787504086003]], ['get_test_dataloader', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['get_optimizers', [3, 5, 4, 7, 8, 11, 16.36452797660028, 33.0, 2.1, 69.3, 3.849999999999999, 0.011]], ['_setup_wandb', [3, 5, 3, 5, 8, 8, 16.36452797660028, 24.0, 1.5, 36.0, 2.0, 0.008]], ['num_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['train', [17, 82, 72, 138, 99, 210, 590.8061326799387, 1392.164890216718, 14.304878048780488, 19914.74897834403, 1106.374943241335, 0.46405496340557206]], ['_log', [2, 4, 3, 6, 6, 9, 10.0, 23.264662506490403, 1.5, 34.89699375973561, 1.938721875540867, 0.007754887502163001]], ['_training_step', [5, 10, 7, 14, 15, 21, 44.82892142331043, 82.0447025077789, 3.5, 287.15645877722613, 15.953136598734785, 0.027348234169259]], ['is_local_master', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['is_world_master', [3, 7, 4, 7, 10, 11, 24.406371956566698, 36.541209043760986, 1.5, 54.81181356564148, 3.045100753646748, 0.012180403014586]], ['save_model', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_save_tpu', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['_save', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['_sorted_checkpoints', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_rotate_checkpoints', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['evaluate', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['predict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prediction_loop', [10, 20, 26, 50, 30, 76, 119.65784284662087, 372.92368526624745, 12.5, 4661.546065828093, 258.97478143489406, 0.12430789508874901]], ['distributed_concat', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\trainer_tf.py': {'total': [15, 94, 74, 144, 109, 218, 674.7347109918256, 1475.4641828013698, 11.48936170212766, 16952.14167473914, 941.785648596619, 0.491821394267123], 'functions': [['__init__', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_train_tfdataset', [5, 8, 6, 11, 13, 17, 35.60964047443681, 62.907475208398566, 3.4375, 216.24444602887007, 12.013580334937226, 0.020969158402799]], ['get_eval_tfdataset', [3, 4, 4, 8, 7, 12, 12.75488750216347, 33.68825906469125, 3.0, 101.06477719407376, 5.614709844115208, 0.011229419688230002]], ['get_test_tfdataset', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_optimizers', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_setup_wandb', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_evaluate_steps', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prediction_loop', [7, 15, 15, 29, 22, 44, 78.25484338853101, 196.21499122004107, 6.7666666666666675, 1327.7214405889445, 73.76230225494136, 0.065404997073347]], ['_log', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['evaluate', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['train', [11, 37, 32, 64, 48, 96, 230.80352233328142, 536.156400069231, 9.513513513513514, 5100.731157415387, 283.37395318974376, 0.17871880002307702]], ['_training_steps', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_apply_gradients', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_step', [3, 5, 3, 5, 8, 8, 16.36452797660028, 24.0, 1.5, 36.0, 2.0, 0.008]], ['_accumulate_next_gradients', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_accumulate_gradients', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_run_model', [6, 12, 7, 14, 18, 21, 58.52932501298082, 87.56842503028855, 3.5, 306.4894876060099, 17.02719375588944, 0.029189475010096003]], ['predict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['save_model', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\trainer_utils.py': {'total': [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001], 'functions': [['is_wandb_available', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['set_seed', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\training_args.py': {'total': [6, 20, 13, 22, 26, 35, 101.94833690207419, 164.51539013493823, 3.3, 542.9007874452961, 30.16115485807201, 0.054838463378312004], 'functions': [['default_logdir', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['train_batch_size', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['eval_batch_size', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_setup_devices', [2, 5, 3, 5, 7, 8, 13.60964047443681, 22.458839376460833, 1.0, 22.458839376460833, 1.247713298692268, 0.0074862797921530005]], ['device', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['n_gpu', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_json_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_sanitized_dict', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\training_args_tf.py': {'total': [4, 13, 7, 14, 17, 21, 56.105716335834195, 85.83671966625714, 2.153846153846153, 184.87908851193845, 10.27106047288547, 0.028612239888752004], 'functions': [['_setup_strategy', [2, 5, 3, 6, 7, 9, 13.60964047443681, 25.26619429851844, 1.2, 30.319433158222125, 1.684412953234562, 0.008422064766172]], ['strategy', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['n_replicas', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['train_batch_size', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['eval_batch_size', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['n_gpu', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\__init__.py': {'total': [2, 4, 3, 4, 6, 7, 10.0, 18.094737505048094, 1.0, 18.094737505048094, 1.005263194724894, 0.006031579168349], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark.py': {'total': [5, 20, 12, 21, 25, 33, 98.04820237218406, 153.24725426256592, 2.625, 402.27404243923553, 22.34855791329086, 0.051082418087521], 'functions': [['framework_version', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_inference_speed', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_inference_memory', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_train_speed', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_train_memory', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prepare_inference_func', [3, 7, 4, 7, 10, 11, 24.406371956566698, 36.541209043760986, 1.5, 54.81181356564148, 3.045100753646748, 0.012180403014586]], ['_prepare_train_func', [3, 7, 4, 7, 10, 11, 24.406371956566698, 36.541209043760986, 1.5, 54.81181356564148, 3.045100753646748, 0.012180403014586]], ['_measure_speed', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['_measure_memory', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark_args.py': {'total': [3, 5, 3, 5, 8, 8, 16.36452797660028, 24.0, 1.5, 36.0, 2.0, 0.008], 'functions': [['_setup_devices', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['is_tpu', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['device_idx', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['device', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['n_gpu', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['is_gpu', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark_args_tf.py': {'total': [3, 6, 4, 6, 9, 10, 20.264662506490406, 31.699250014423125, 1.5, 47.548875021634686, 2.641604167868593, 0.010566416671474], 'functions': [['_setup_tpu', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['_setup_strategy', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['is_tpu', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['strategy', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['gpu_list', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['n_gpu', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['is_gpu', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark_args_utils.py': {'total': [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001], 'functions': [['list_field', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_json_string', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['model_names', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['do_multi_processing', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark_tf.py': {'total': [10, 28, 15, 28, 38, 43, 167.82521876648653, 225.66088307807416, 5.0, 1128.3044153903709, 62.68357863279838, 0.07522029435935801], 'functions': [['run_with_tf_optimizations', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['random_input_ids', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['framework_version', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_inference_speed', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_train_speed', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_inference_memory', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_train_memory', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_prepare_inference_func', [4, 9, 5, 9, 13, 14, 36.52932501298081, 51.80615605397529, 2.0, 103.61231210795059, 5.75623956155281, 0.017268718684658003]], ['_measure_speed', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_measure_memory', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\benchmark_utils.py': {'total': [17, 153, 120, 220, 170, 340, 1179.8672082332316, 2519.192918286819, 12.222222222222221, 30790.135667950006, 1710.5630926638892, 0.839730972762272], 'functions': [['separate_process_wrapper_fn', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['is_memory_tracing_enabled', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__repr__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['measure_peak_memory_cpu', [7, 11, 7, 13, 18, 20, 57.705232259413506, 83.39850002884624, 4.136363636363637, 344.9665228465913, 19.16480682481063, 0.027799500009615]], ['start_memory_tracing', [10, 31, 23, 43, 41, 66, 186.7993665708668, 353.5984323047935, 6.935483870967742, 2452.3762240493743, 136.24312355829858, 0.11786614410159701]], ['stop_memory_tracing', [6, 16, 11, 21, 22, 32, 79.50977500432694, 142.7018117963935, 3.9375, 561.8883839482994, 31.21602133046108, 0.04756727059879701]], ['bytes_to_mega_bytes', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [4, 7, 4, 7, 11, 11, 27.651484454403228, 38.053747805010275, 2.0, 76.10749561002055, 4.228194200556697, 0.012684582601670002]], ['print_fn', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['framework_version', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_inference_speed', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_train_speed', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_inference_memory', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_train_memory', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['inference_speed', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['train_speed', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['inference_memory', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['train_memory', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['run', [3, 45, 48, 85, 48, 133, 251.8882768369988, 742.8000125959139, 2.833333333333333, 2104.600035688423, 116.92222420491238, 0.247600004198637]], ['environment_info', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['print_results', [4, 14, 10, 20, 18, 30, 61.30296890880645, 125.09775004326937, 2.857142857142857, 357.42214298076965, 19.85678572115387, 0.041699250014423005]], ['print_memory_trace_statistics', [2, 7, 4, 7, 9, 11, 21.651484454403228, 34.86917501586544, 1.0, 34.86917501586544, 1.937176389770302, 0.011623058338621001]], ['save_to_csv', [3, 6, 4, 6, 9, 10, 20.264662506490406, 31.699250014423125, 1.5, 47.548875021634686, 2.641604167868593, 0.010566416671474]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\benchmark\\__init__.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\convert.py': {'total': [2, 10, 8, 16, 12, 24, 35.219280948873624, 86.03910001730776, 1.6, 137.66256002769242, 7.647920001538468, 0.028679700005769002], 'functions': [['convert_command_factory', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['register_subcommand', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['run', [2, 10, 8, 16, 12, 24, 35.219280948873624, 86.03910001730776, 1.6, 137.66256002769242, 7.647920001538468, 0.028679700005769002]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\download.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['download_command_factory', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['register_subcommand', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['run', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\env.py': {'total': [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001], 'functions': [['info_command_factory', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['register_subcommand', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['run', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['format_dict', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\run.py': {'total': [4, 6, 4, 6, 10, 10, 23.509775004326936, 33.219280948873624, 2.0, 66.43856189774725, 3.6910312165415142, 0.011073093649624001], 'functions': [['try_infer_format_from_ext', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['run_command_factory', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['register_subcommand', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['run', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\serving.py': {'total': [3, 4, 3, 4, 7, 7, 12.75488750216347, 19.651484454403228, 1.5, 29.47722668160484, 1.6376237045336022, 0.006550494818134], 'functions': [['Body', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['serve_command_factory', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['register_subcommand', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['run', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['model_info', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['detokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\train.py': {'total': [3, 10, 7, 12, 13, 19, 37.974168451037094, 70.30835464468075, 1.8, 126.55503836042534, 7.030835464468074, 0.023436118214893], 'functions': [['train_command_factory', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['register_subcommand', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 4, 3, 6, 5, 9, 8.0, 20.89735285398626, 0.75, 15.673014640489694, 0.8707230355827601, 0.006965784284662001]], ['run', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['run_torch', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['run_tf', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\transformers_cli.py': {'total': [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145], 'functions': [['main', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\user.py': {'total': [8, 26, 20, 40, 34, 60, 146.2114326716684, 305.2477704750204, 6.153846153846154, 1878.447818307818, 104.3582121282121, 0.101749256825006], 'functions': [['register_subcommand', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['bold', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['red', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['run', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['run', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['run', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['tabulate', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['run', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['run', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['walk_dir', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['run', [6, 16, 11, 22, 22, 33, 79.50977500432694, 147.1612434150308, 4.125, 607.0401290870021, 33.72445161594456, 0.049053747805010005]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\commands\\__init__.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': [['register_subcommand', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['run', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\data_collator.py': {'total': [10, 37, 24, 43, 47, 67, 225.9690554771448, 372.1574530624017, 5.8108108108108105, 2162.5365515788208, 120.14091953215672, 0.124052484354133], 'functions': [['default_data_collator', [6, 20, 12, 23, 26, 35, 101.94833690207419, 164.51539013493823, 3.45, 567.5780959655369, 31.53211644252983, 0.054838463378312004]], ['__call__', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['_tensorize_batch', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['mask_tokens', [5, 10, 8, 13, 15, 21, 44.82892142331043, 82.0447025077789, 3.25, 266.6452831502814, 14.8136268416823, 0.027348234169259]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\__init__.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\datasets\\glue.py': {'total': [7, 22, 13, 25, 29, 38, 117.75898006442377, 184.60327781484776, 3.977272727272727, 734.2175822181445, 40.7898656787858, 0.061534425938282004], 'functions': [['__post_init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [7, 20, 12, 23, 27, 35, 106.09004635215048, 166.4210625757214, 4.025, 669.8447768672787, 37.213598714848814, 0.055473687525240005]], ['__len__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__getitem__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_labels', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\datasets\\language_modeling.py': {'total': [5, 19, 12, 22, 24, 34, 92.32026322986493, 155.88872502451935, 2.894736842105263, 451.2568355972929, 25.069824199849606, 0.051962908341506006], 'functions': [['__init__', [4, 14, 9, 17, 18, 26, 61.30296890880645, 108.41805003750011, 2.428571428571428, 263.30097866250026, 14.627832147916681, 0.0361393500125]], ['__len__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__getitem__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [3, 5, 3, 5, 8, 8, 16.36452797660028, 24.0, 1.5, 36.0, 2.0, 0.008]], ['__len__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__getitem__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\datasets\\__init__.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\metrics\\squad_metrics.py': {'total': [19, 170, 135, 249, 189, 384, 1340.3070818988376, 2903.901090900892, 13.91470588235294, 40406.92959132976, 2244.8294217405423, 0.9679670303002971], 'functions': [['normalize_answer', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_tokens', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['compute_exact', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['compute_f1', [6, 21, 14, 28, 27, 42, 107.74844088268091, 199.7052750908657, 4.0, 798.8211003634628, 44.37895002019238, 0.06656842503028801]], ['get_raw_scores', [3, 4, 3, 5, 7, 8, 12.75488750216347, 22.458839376460833, 1.875, 42.11032383086406, 2.339462435048003, 0.0074862797921530005]], ['apply_no_ans_threshold', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['make_eval_dict', [3, 11, 9, 17, 14, 26, 42.808635307173745, 98.9912279734977, 2.318181818181818, 229.47966484765377, 12.748870269314098, 0.032997075991165005]], ['merge_eval', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['find_best_thresh_v2', [7, 15, 13, 23, 22, 36, 78.25484338853101, 160.5395382709427, 5.366666666666666, 861.5621887207258, 47.86456604004032, 0.05351317942364701]], ['find_all_best_thresh_v2', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['find_best_thresh', [7, 10, 7, 12, 17, 19, 52.87076540327685, 77.66179398375645, 4.2, 326.1795347317771, 18.121085262876505, 0.025887264661252]], ['find_all_best_thresh', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['squad_evaluate', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['get_final_text', [8, 19, 14, 27, 27, 41, 104.71062275542812, 194.95038758870223, 5.684210526315789, 1108.1390452410442, 61.56328029116912, 0.06498346252956701]], ['_get_best_indexes', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_compute_softmax', [7, 8, 7, 13, 15, 20, 43.65148445440323, 78.13781191217038, 5.6875, 444.408805250469, 24.6893780694705, 0.026045937304056]], ['compute_predictions_logits', [10, 37, 33, 62, 47, 95, 225.9690554771448, 527.6859409093755, 8.378378378378379, 4421.152477889363, 245.6195821049646, 0.17589531363645802]], ['compute_predictions_log_probs', [10, 30, 26, 47, 40, 73, 180.4259988171292, 388.50075092677747, 7.833333333333333, 3043.2558822597566, 169.06977123665314, 0.129500250308925]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\metrics\\__init__.py': {'total': [3, 28, 19, 38, 31, 57, 139.36082531977635, 282.3891896920519, 2.035714285714285, 574.8637075873913, 31.936872643743964, 0.09412972989735001], 'functions': [['is_sklearn_available', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['simple_accuracy', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['acc_and_f1', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['pearson_and_spearman', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['glue_compute_metrics', [1, 14, 12, 24, 15, 36, 53.30296890880645, 140.64806144190666, 0.8571428571428571, 120.55548123591998, 6.697526735328888, 0.046882687147302]], ['xnli_compute_metrics', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\processors\\glue.py': {'total': [7, 41, 46, 87, 48, 133, 239.31111664374467, 742.8000125959139, 7.426829268292683, 5516.648874035507, 306.4804930019726, 0.247600004198637], 'functions': [['glue_convert_examples_to_features', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_tf_glue_convert_examples_to_features', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['_glue_convert_examples_to_features', [4, 18, 11, 22, 22, 33, 83.05865002596161, 147.1612434150308, 2.444444444444444, 359.72748390340865, 19.984860216856035, 0.049053747805010005]], ['get_example_from_tensor_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_train_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_dev_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_test_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_labels', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_create_examples', [2, 6, 3, 6, 8, 9, 17.509775004326936, 27.0, 1.0, 27.0, 1.5, 0.009000000000000001]], ['get_example_from_tensor_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_train_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_dev_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_test_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_labels', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_create_examples', [3, 5, 3, 5, 8, 8, 16.36452797660028, 24.0, 1.5, 36.0, 2.0, 0.008]], ['get_dev_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_test_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_example_from_tensor_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_train_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_dev_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_test_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_labels', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_create_examples', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['get_example_from_tensor_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_train_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_dev_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_test_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_labels', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_create_examples', [2, 6, 4, 8, 8, 12, 17.509775004326936, 36.0, 1.333333333333333, 48.0, 2.666666666666666, 0.012]], ['get_example_from_tensor_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_train_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_dev_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_test_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_labels', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_create_examples', [3, 7, 4, 7, 10, 11, 24.406371956566698, 36.541209043760986, 1.5, 54.81181356564148, 3.045100753646748, 0.012180403014586]], ['get_example_from_tensor_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_train_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_dev_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_test_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_labels', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_create_examples', [2, 6, 3, 6, 8, 9, 17.509775004326936, 27.0, 1.0, 27.0, 1.5, 0.009000000000000001]], ['get_example_from_tensor_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_train_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_dev_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_test_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_labels', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_create_examples', [3, 7, 4, 7, 10, 11, 24.406371956566698, 36.541209043760986, 1.5, 54.81181356564148, 3.045100753646748, 0.012180403014586]], ['get_example_from_tensor_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_train_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_dev_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_test_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_labels', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_create_examples', [3, 7, 4, 7, 10, 11, 24.406371956566698, 36.541209043760986, 1.5, 54.81181356564148, 3.045100753646748, 0.012180403014586]], ['get_example_from_tensor_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_train_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_dev_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_test_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_labels', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_create_examples', [3, 7, 4, 7, 10, 11, 24.406371956566698, 36.541209043760986, 1.5, 54.81181356564148, 3.045100753646748, 0.012180403014586]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\processors\\squad.py': {'total': [16, 179, 139, 262, 195, 401, 1403.603024130302, 3050.539455813594, 11.70949720670391, 35720.28323678934, 1984.4601798216302, 1.016846485271198], 'functions': [['_improve_answer_span', [4, 6, 5, 9, 10, 14, 23.509775004326936, 46.50699332842308, 3.0, 139.52097998526924, 7.75116555473718, 0.015502331109474]], ['_check_is_max_context', [8, 16, 12, 24, 24, 36, 88.0, 165.05865002596164, 6.0, 990.3519001557698, 55.01955000865388, 0.055019550008653]], ['_new_check_is_max_context', [8, 19, 12, 24, 27, 36, 104.71062275542812, 171.1759500778849, 5.052631578947368, 864.8890109198394, 48.049389495546635, 0.05705865002596101]], ['_is_whitespace', [2, 12, 6, 15, 14, 21, 45.01955000865388, 79.95445336320968, 1.25, 99.9430667040121, 5.552392594667339, 0.026651484454403]], ['squad_convert_example_to_features', [13, 86, 73, 138, 99, 211, 600.7644852402146, 1398.7942468367976, 10.430232558139535, 14589.749295495436, 810.5416275275243, 0.46626474894559905]], ['squad_convert_example_to_features_init', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['squad_convert_examples_to_features', [5, 15, 12, 18, 20, 30, 70.2129994085646, 129.65784284662087, 3.0, 388.9735285398626, 21.609640474436812, 0.04321928094887301]], ['_get_example_from_tensor_dict', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['get_examples_from_dataset', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_train_examples', [1, 4, 3, 6, 5, 9, 8.0, 20.89735285398626, 0.75, 15.673014640489694, 0.8707230355827601, 0.006965784284662001]], ['get_dev_examples', [1, 4, 3, 6, 5, 9, 8.0, 20.89735285398626, 0.75, 15.673014640489694, 0.8707230355827601, 0.006965784284662001]], ['_create_examples', [3, 4, 3, 5, 7, 8, 12.75488750216347, 22.458839376460833, 1.875, 42.11032383086406, 2.339462435048003, 0.0074862797921530005]], ['__init__', [6, 12, 9, 16, 18, 25, 58.52932501298082, 104.2481250360578, 4.0, 416.9925001442312, 23.166250008012845, 0.034749375012019]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\processors\\utils.py': {'total': [12, 77, 53, 104, 89, 157, 525.5621136421613, 1016.6901486617244, 8.103896103896103, 8239.151334609298, 457.73062970051654, 0.33889671622057405], 'functions': [['to_json_string', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['to_json_string', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_example_from_tensor_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_train_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_dev_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_test_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_labels', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tfds_map', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_read_tsv', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 3, 2, 4, 4, 6, 4.754887502163469, 12.0, 0.6666666666666661, 8.0, 0.44444444444444403, 0.004]], ['__len__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__getitem__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['create_from_csv', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['create_from_examples', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['add_examples_from_csv', [2, 6, 3, 6, 8, 9, 17.509775004326936, 27.0, 1.0, 27.0, 1.5, 0.009000000000000001]], ['add_examples', [5, 18, 12, 24, 23, 36, 86.66829050039843, 162.84823041805248, 3.333333333333333, 542.8274347268416, 30.157079707046755, 0.054282743472684004]], ['get_features', [9, 45, 33, 64, 54, 97, 275.6627143478162, 558.2240877098565, 6.4, 3572.6341613430814, 198.4796756301712, 0.18607469590328501]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\processors\\xnli.py': {'total': [5, 19, 9, 20, 24, 29, 92.32026322986493, 132.96391252091354, 2.6315789473684212, 349.9050329497725, 19.439168497209582, 0.044321304173637006], 'functions': [['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_train_examples', [4, 11, 5, 11, 15, 16, 46.053747805010275, 62.5102495297363, 2.0, 125.0204990594726, 6.945583281081811, 0.020836749843245003]], ['get_test_examples', [4, 8, 4, 9, 12, 13, 32.0, 46.604512509375034, 2.25, 104.86015314609382, 5.825564063671879, 0.015534837503125001]], ['get_labels', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\transformers-3.0.1\\src\\transformers\\data\\processors\\__init__.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}}"
transformers,"{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'C', 'endline': 87, 'name': 'convert_tf_checkpoint_to_pytorch', 'lineno': 30, 'complexity': 14, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\file_utils.py': [{'type': 'function', 'rank': 'B', 'endline': 97, 'name': 'cached_path', 'lineno': 72, 'complexity': 6, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'B', 'endline': 215, 'name': 'get_from_cache', 'lineno': 161, 'complexity': 6, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 69, 'name': 'filename_to_url', 'lineno': 48, 'complexity': 4, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 110, 'name': 'split_s3_path', 'lineno': 100, 'complexity': 4, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 158, 'name': 'http_get', 'lineno': 149, 'complexity': 4, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 233, 'name': 'get_file_extension', 'lineno': 230, 'complexity': 3, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 45, 'name': 'url_to_filename', 'lineno': 30, 'complexity': 2, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 227, 'name': 'read_set_from_file', 'lineno': 218, 'complexity': 2, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 129, 'name': 's3_request', 'lineno': 113, 'complexity': 1, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'endline': 127, 'name': 'wrapper', 'lineno': 120, 'complexity': 3, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'endline': 138, 'name': 's3_etag', 'lineno': 133, 'complexity': 1, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 146, 'name': 's3_get', 'lineno': 142, 'complexity': 1, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\modeling.py': [{'type': 'method', 'rank': 'B', 'endline': 532, 'name': 'from_pretrained', 'lineno': 446, 'complexity': 10, 'col_offset': 4, 'classname': 'PreTrainedBertModel', 'closures': [{'type': 'function', 'rank': 'A', 'endline': 521, 'name': 'load', 'lineno': 515, 'complexity': 4, 'col_offset': 8, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'endline': 532, 'name': 'PreTrainedBertModel', 'lineno': 417, 'complexity': 7, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 430, 'name': '__init__', 'lineno': 421, 'complexity': 2, 'col_offset': 4, 'classname': 'PreTrainedBertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 443, 'name': 'init_bert_weights', 'lineno': 432, 'complexity': 5, 'col_offset': 4, 'classname': 'PreTrainedBertModel', 'closures': []}, {'type': 'method', 'rank': 'B', 'endline': 532, 'name': 'from_pretrained', 'lineno': 446, 'complexity': 10, 'col_offset': 4, 'classname': 'PreTrainedBertModel', 'closures': [{'type': 'function', 'rank': 'A', 'endline': 521, 'name': 'load', 'lineno': 515, 'complexity': 4, 'col_offset': 8, 'closures': []}]}]}, {'type': 'method', 'rank': 'A', 'endline': 443, 'name': 'init_bert_weights', 'lineno': 432, 'complexity': 5, 'col_offset': 4, 'classname': 'PreTrainedBertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 964, 'name': 'forward', 'lineno': 940, 'complexity': 5, 'col_offset': 4, 'classname': 'BertForQuestionAnswering', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 123, 'name': '__init__', 'lineno': 69, 'complexity': 4, 'col_offset': 4, 'classname': 'BertConfig', 'closures': []}, {'type': 'class', 'rank': 'A', 'endline': 333, 'name': 'BertEncoder', 'lineno': 319, 'complexity': 4, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 323, 'name': '__init__', 'lineno': 320, 'complexity': 2, 'col_offset': 4, 'classname': 'BertEncoder', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 333, 'name': 'forward', 'lineno': 325, 'complexity': 4, 'col_offset': 4, 'classname': 'BertEncoder', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'endline': 333, 'name': 'forward', 'lineno': 325, 'complexity': 4, 'col_offset': 4, 'classname': 'BertEncoder', 'closures': []}, {'type': 'class', 'rank': 'A', 'endline': 615, 'name': 'BertModel', 'lineno': 535, 'complexity': 4, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 584, 'name': '__init__', 'lineno': 579, 'complexity': 1, 'col_offset': 4, 'classname': 'BertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 615, 'name': 'forward', 'lineno': 586, 'complexity': 4, 'col_offset': 4, 'classname': 'BertModel', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'endline': 615, 'name': 'forward', 'lineno': 586, 'complexity': 4, 'col_offset': 4, 'classname': 'BertModel', 'closures': []}, {'type': 'class', 'rank': 'A', 'endline': 964, 'name': 'BertForQuestionAnswering', 'lineno': 877, 'complexity': 4, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 938, 'name': '__init__', 'lineno': 932, 'complexity': 1, 'col_offset': 4, 'classname': 'BertForQuestionAnswering', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 964, 'name': 'forward', 'lineno': 940, 'complexity': 5, 'col_offset': 4, 'classname': 'BertForQuestionAnswering', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'endline': 198, 'name': 'BertEmbeddings', 'lineno': 170, 'complexity': 3, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 182, 'name': '__init__', 'lineno': 173, 'complexity': 1, 'col_offset': 4, 'classname': 'BertEmbeddings', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 198, 'name': 'forward', 'lineno': 184, 'complexity': 2, 'col_offset': 4, 'classname': 'BertEmbeddings', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'endline': 288, 'name': 'BertIntermediate', 'lineno': 278, 'complexity': 3, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 283, 'name': '__init__', 'lineno': 279, 'complexity': 2, 'col_offset': 4, 'classname': 'BertIntermediate', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 288, 'name': 'forward', 'lineno': 285, 'complexity': 1, 'col_offset': 4, 'classname': 'BertIntermediate', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'endline': 363, 'name': 'BertPredictionHeadTransform', 'lineno': 351, 'complexity': 3, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 357, 'name': '__init__', 'lineno': 352, 'complexity': 2, 'col_offset': 4, 'classname': 'BertPredictionHeadTransform', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 363, 'name': 'forward', 'lineno': 359, 'complexity': 1, 'col_offset': 4, 'classname': 'BertPredictionHeadTransform', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'endline': 686, 'name': 'BertForPreTraining', 'lineno': 618, 'complexity': 3, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 672, 'name': '__init__', 'lineno': 668, 'complexity': 1, 'col_offset': 4, 'classname': 'BertForPreTraining', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 686, 'name': 'forward', 'lineno': 674, 'complexity': 3, 'col_offset': 4, 'classname': 'BertForPreTraining', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'endline': 686, 'name': 'forward', 'lineno': 674, 'complexity': 3, 'col_offset': 4, 'classname': 'BertForPreTraining', 'closures': []}, {'type': 'class', 'rank': 'A', 'endline': 747, 'name': 'BertForMaskedLM', 'lineno': 689, 'complexity': 3, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 735, 'name': '__init__', 'lineno': 731, 'complexity': 1, 'col_offset': 4, 'classname': 'BertForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 747, 'name': 'forward', 'lineno': 737, 'complexity': 2, 'col_offset': 4, 'classname': 'BertForMaskedLM', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'endline': 809, 'name': 'BertForNextSentencePrediction', 'lineno': 750, 'complexity': 3, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 797, 'name': '__init__', 'lineno': 793, 'complexity': 1, 'col_offset': 4, 'classname': 'BertForNextSentencePrediction', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 809, 'name': 'forward', 'lineno': 799, 'complexity': 2, 'col_offset': 4, 'classname': 'BertForNextSentencePrediction', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'endline': 874, 'name': 'BertForSequenceClassification', 'lineno': 812, 'complexity': 3, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 862, 'name': '__init__', 'lineno': 857, 'complexity': 1, 'col_offset': 4, 'classname': 'BertForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 874, 'name': 'forward', 'lineno': 864, 'complexity': 2, 'col_offset': 4, 'classname': 'BertForSequenceClassification', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'endline': 151, 'name': 'BertConfig', 'lineno': 66, 'complexity': 2, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 123, 'name': '__init__', 'lineno': 69, 'complexity': 4, 'col_offset': 4, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 132, 'name': 'from_dict', 'lineno': 127, 'complexity': 2, 'col_offset': 4, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 139, 'name': 'from_json_file', 'lineno': 135, 'complexity': 1, 'col_offset': 4, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 142, 'name': '__repr__', 'lineno': 141, 'complexity': 1, 'col_offset': 4, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 147, 'name': 'to_dict', 'lineno': 144, 'complexity': 1, 'col_offset': 4, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 151, 'name': 'to_json_string', 'lineno': 149, 'complexity': 1, 'col_offset': 4, 'classname': 'BertConfig', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'endline': 132, 'name': 'from_dict', 'lineno': 127, 'complexity': 2, 'col_offset': 4, 'classname': 'BertConfig', 'closures': []}, {'type': 'class', 'rank': 'A', 'endline': 167, 'name': 'BertLayerNorm', 'lineno': 154, 'complexity': 2, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 161, 'name': '__init__', 'lineno': 155, 'complexity': 1, 'col_offset': 4, 'classname': 'BertLayerNorm', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 167, 'name': 'forward', 'lineno': 163, 'complexity': 1, 'col_offset': 4, 'classname': 'BertLayerNorm', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'endline': 198, 'name': 'forward', 'lineno': 184, 'complexity': 2, 'col_offset': 4, 'classname': 'BertEmbeddings', 'closures': []}, {'type': 'class', 'rank': 'A', 'endline': 249, 'name': 'BertSelfAttention', 'lineno': 201, 'complexity': 2, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 216, 'name': '__init__', 'lineno': 202, 'complexity': 2, 'col_offset': 4, 'classname': 'BertSelfAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 221, 'name': 'transpose_for_scores', 'lineno': 218, 'complexity': 1, 'col_offset': 4, 'classname': 'BertSelfAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 249, 'name': 'forward', 'lineno': 223, 'complexity': 1, 'col_offset': 4, 'classname': 'BertSelfAttention', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'endline': 216, 'name': '__init__', 'lineno': 202, 'complexity': 2, 'col_offset': 4, 'classname': 'BertSelfAttention', 'closures': []}, {'type': 'class', 'rank': 'A', 'endline': 263, 'name': 'BertSelfOutput', 'lineno': 252, 'complexity': 2, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 257, 'name': '__init__', 'lineno': 253, 'complexity': 1, 'col_offset': 4, 'classname': 'BertSelfOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 263, 'name': 'forward', 'lineno': 259, 'complexity': 1, 'col_offset': 4, 'classname': 'BertSelfOutput', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'endline': 275, 'name': 'BertAttention', 'lineno': 266, 'complexity': 2, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 270, 'name': '__init__', 'lineno': 267, 'complexity': 1, 'col_offset': 4, 'classname': 'BertAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 275, 'name': 'forward', 'lineno': 272, 'complexity': 1, 'col_offset': 4, 'classname': 'BertAttention', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'endline': 283, 'name': '__init__', 'lineno': 279, 'complexity': 2, 'col_offset': 4, 'classname': 'BertIntermediate', 'closures': []}, {'type': 'class', 'rank': 'A', 'endline': 302, 'name': 'BertOutput', 'lineno': 291, 'complexity': 2, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 296, 'name': '__init__', 'lineno': 292, 'complexity': 1, 'col_offset': 4, 'classname': 'BertOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 302, 'name': 'forward', 'lineno': 298, 'complexity': 1, 'col_offset': 4, 'classname': 'BertOutput', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'endline': 316, 'name': 'BertLayer', 'lineno': 305, 'complexity': 2, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 310, 'name': '__init__', 'lineno': 306, 'complexity': 1, 'col_offset': 4, 'classname': 'BertLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 316, 'name': 'forward', 'lineno': 312, 'complexity': 1, 'col_offset': 4, 'classname': 'BertLayer', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'endline': 323, 'name': '__init__', 'lineno': 320, 'complexity': 2, 'col_offset': 4, 'classname': 'BertEncoder', 'closures': []}, {'type': 'class', 'rank': 'A', 'endline': 348, 'name': 'BertPooler', 'lineno': 336, 'complexity': 2, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 340, 'name': '__init__', 'lineno': 337, 'complexity': 1, 'col_offset': 4, 'classname': 'BertPooler', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 348, 'name': 'forward', 'lineno': 342, 'complexity': 1, 'col_offset': 4, 'classname': 'BertPooler', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'endline': 357, 'name': '__init__', 'lineno': 352, 'complexity': 2, 'col_offset': 4, 'classname': 'BertPredictionHeadTransform', 'closures': []}, {'type': 'class', 'rank': 'A', 'endline': 382, 'name': 'BertLMPredictionHead', 'lineno': 366, 'complexity': 2, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 377, 'name': '__init__', 'lineno': 367, 'complexity': 1, 'col_offset': 4, 'classname': 'BertLMPredictionHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 382, 'name': 'forward', 'lineno': 379, 'complexity': 1, 'col_offset': 4, 'classname': 'BertLMPredictionHead', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'endline': 392, 'name': 'BertOnlyMLMHead', 'lineno': 385, 'complexity': 2, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 388, 'name': '__init__', 'lineno': 386, 'complexity': 1, 'col_offset': 4, 'classname': 'BertOnlyMLMHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 392, 'name': 'forward', 'lineno': 390, 'complexity': 1, 'col_offset': 4, 'classname': 'BertOnlyMLMHead', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'endline': 402, 'name': 'BertOnlyNSPHead', 'lineno': 395, 'complexity': 2, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 398, 'name': '__init__', 'lineno': 396, 'complexity': 1, 'col_offset': 4, 'classname': 'BertOnlyNSPHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 402, 'name': 'forward', 'lineno': 400, 'complexity': 1, 'col_offset': 4, 'classname': 'BertOnlyNSPHead', 'closures': []}]}, {'type': 'class', 'rank': 'A', 'endline': 414, 'name': 'BertPreTrainingHeads', 'lineno': 405, 'complexity': 2, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 409, 'name': '__init__', 'lineno': 406, 'complexity': 1, 'col_offset': 4, 'classname': 'BertPreTrainingHeads', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 414, 'name': 'forward', 'lineno': 411, 'complexity': 1, 'col_offset': 4, 'classname': 'BertPreTrainingHeads', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'endline': 430, 'name': '__init__', 'lineno': 421, 'complexity': 2, 'col_offset': 4, 'classname': 'PreTrainedBertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 747, 'name': 'forward', 'lineno': 737, 'complexity': 2, 'col_offset': 4, 'classname': 'BertForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 809, 'name': 'forward', 'lineno': 799, 'complexity': 2, 'col_offset': 4, 'classname': 'BertForNextSentencePrediction', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 874, 'name': 'forward', 'lineno': 864, 'complexity': 2, 'col_offset': 4, 'classname': 'BertForSequenceClassification', 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 56, 'name': 'gelu', 'lineno': 51, 'complexity': 1, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 60, 'name': 'swish', 'lineno': 59, 'complexity': 1, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 139, 'name': 'from_json_file', 'lineno': 135, 'complexity': 1, 'col_offset': 4, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 142, 'name': '__repr__', 'lineno': 141, 'complexity': 1, 'col_offset': 4, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 147, 'name': 'to_dict', 'lineno': 144, 'complexity': 1, 'col_offset': 4, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 151, 'name': 'to_json_string', 'lineno': 149, 'complexity': 1, 'col_offset': 4, 'classname': 'BertConfig', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 161, 'name': '__init__', 'lineno': 155, 'complexity': 1, 'col_offset': 4, 'classname': 'BertLayerNorm', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 167, 'name': 'forward', 'lineno': 163, 'complexity': 1, 'col_offset': 4, 'classname': 'BertLayerNorm', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 182, 'name': '__init__', 'lineno': 173, 'complexity': 1, 'col_offset': 4, 'classname': 'BertEmbeddings', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 221, 'name': 'transpose_for_scores', 'lineno': 218, 'complexity': 1, 'col_offset': 4, 'classname': 'BertSelfAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 249, 'name': 'forward', 'lineno': 223, 'complexity': 1, 'col_offset': 4, 'classname': 'BertSelfAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 257, 'name': '__init__', 'lineno': 253, 'complexity': 1, 'col_offset': 4, 'classname': 'BertSelfOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 263, 'name': 'forward', 'lineno': 259, 'complexity': 1, 'col_offset': 4, 'classname': 'BertSelfOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 270, 'name': '__init__', 'lineno': 267, 'complexity': 1, 'col_offset': 4, 'classname': 'BertAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 275, 'name': 'forward', 'lineno': 272, 'complexity': 1, 'col_offset': 4, 'classname': 'BertAttention', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 288, 'name': 'forward', 'lineno': 285, 'complexity': 1, 'col_offset': 4, 'classname': 'BertIntermediate', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 296, 'name': '__init__', 'lineno': 292, 'complexity': 1, 'col_offset': 4, 'classname': 'BertOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 302, 'name': 'forward', 'lineno': 298, 'complexity': 1, 'col_offset': 4, 'classname': 'BertOutput', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 310, 'name': '__init__', 'lineno': 306, 'complexity': 1, 'col_offset': 4, 'classname': 'BertLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 316, 'name': 'forward', 'lineno': 312, 'complexity': 1, 'col_offset': 4, 'classname': 'BertLayer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 340, 'name': '__init__', 'lineno': 337, 'complexity': 1, 'col_offset': 4, 'classname': 'BertPooler', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 348, 'name': 'forward', 'lineno': 342, 'complexity': 1, 'col_offset': 4, 'classname': 'BertPooler', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 363, 'name': 'forward', 'lineno': 359, 'complexity': 1, 'col_offset': 4, 'classname': 'BertPredictionHeadTransform', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 377, 'name': '__init__', 'lineno': 367, 'complexity': 1, 'col_offset': 4, 'classname': 'BertLMPredictionHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 382, 'name': 'forward', 'lineno': 379, 'complexity': 1, 'col_offset': 4, 'classname': 'BertLMPredictionHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 388, 'name': '__init__', 'lineno': 386, 'complexity': 1, 'col_offset': 4, 'classname': 'BertOnlyMLMHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 392, 'name': 'forward', 'lineno': 390, 'complexity': 1, 'col_offset': 4, 'classname': 'BertOnlyMLMHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 398, 'name': '__init__', 'lineno': 396, 'complexity': 1, 'col_offset': 4, 'classname': 'BertOnlyNSPHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 402, 'name': 'forward', 'lineno': 400, 'complexity': 1, 'col_offset': 4, 'classname': 'BertOnlyNSPHead', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 409, 'name': '__init__', 'lineno': 406, 'complexity': 1, 'col_offset': 4, 'classname': 'BertPreTrainingHeads', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 414, 'name': 'forward', 'lineno': 411, 'complexity': 1, 'col_offset': 4, 'classname': 'BertPreTrainingHeads', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 584, 'name': '__init__', 'lineno': 579, 'complexity': 1, 'col_offset': 4, 'classname': 'BertModel', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 672, 'name': '__init__', 'lineno': 668, 'complexity': 1, 'col_offset': 4, 'classname': 'BertForPreTraining', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 735, 'name': '__init__', 'lineno': 731, 'complexity': 1, 'col_offset': 4, 'classname': 'BertForMaskedLM', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 797, 'name': '__init__', 'lineno': 793, 'complexity': 1, 'col_offset': 4, 'classname': 'BertForNextSentencePrediction', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 862, 'name': '__init__', 'lineno': 857, 'complexity': 1, 'col_offset': 4, 'classname': 'BertForSequenceClassification', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 938, 'name': '__init__', 'lineno': 932, 'complexity': 1, 'col_offset': 4, 'classname': 'BertForQuestionAnswering', 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\optimization.py': [{'type': 'method', 'rank': 'B', 'endline': 161, 'name': 'step', 'lineno': 93, 'complexity': 10, 'col_offset': 4, 'classname': 'BertAdam', 'closures': []}, {'type': 'class', 'rank': 'B', 'endline': 161, 'name': 'BertAdam', 'lineno': 44, 'complexity': 9, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'endline': 76, 'name': '__init__', 'lineno': 58, 'complexity': 8, 'col_offset': 4, 'classname': 'BertAdam', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 91, 'name': 'get_lr', 'lineno': 78, 'complexity': 5, 'col_offset': 4, 'classname': 'BertAdam', 'closures': []}, {'type': 'method', 'rank': 'B', 'endline': 161, 'name': 'step', 'lineno': 93, 'complexity': 10, 'col_offset': 4, 'classname': 'BertAdam', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'endline': 76, 'name': '__init__', 'lineno': 58, 'complexity': 8, 'col_offset': 4, 'classname': 'BertAdam', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 91, 'name': 'get_lr', 'lineno': 78, 'complexity': 5, 'col_offset': 4, 'classname': 'BertAdam', 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 25, 'name': 'warmup_cosine', 'lineno': 22, 'complexity': 2, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 30, 'name': 'warmup_constant', 'lineno': 27, 'complexity': 2, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 35, 'name': 'warmup_linear', 'lineno': 32, 'complexity': 2, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\tokenization.py': [{'type': 'method', 'rank': 'C', 'endline': 251, 'name': '_is_chinese_char', 'lineno': 231, 'complexity': 17, 'col_offset': 4, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'function', 'rank': 'B', 'endline': 366, 'name': '_is_punctuation', 'lineno': 353, 'complexity': 10, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'B', 'endline': 326, 'name': 'tokenize', 'lineno': 275, 'complexity': 9, 'col_offset': 4, 'classname': 'WordpieceTokenizer', 'closures': []}, {'type': 'function', 'rank': 'B', 'endline': 338, 'name': '_is_whitespace', 'lineno': 329, 'complexity': 6, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'B', 'endline': 264, 'name': 'BasicTokenizer', 'lineno': 154, 'complexity': 6, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 163, 'name': '__init__', 'lineno': 157, 'complexity': 1, 'col_offset': 4, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 185, 'name': 'tokenize', 'lineno': 165, 'complexity': 3, 'col_offset': 4, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 196, 'name': '_run_strip_accents', 'lineno': 187, 'complexity': 3, 'col_offset': 4, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 216, 'name': '_run_split_on_punc', 'lineno': 198, 'complexity': 5, 'col_offset': 4, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 229, 'name': '_tokenize_chinese_chars', 'lineno': 218, 'complexity': 3, 'col_offset': 4, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'C', 'endline': 251, 'name': '_is_chinese_char', 'lineno': 231, 'complexity': 17, 'col_offset': 4, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'endline': 264, 'name': '_clean_text', 'lineno': 253, 'complexity': 6, 'col_offset': 4, 'classname': 'BasicTokenizer', 'closures': []}]}, {'type': 'method', 'rank': 'B', 'endline': 264, 'name': '_clean_text', 'lineno': 253, 'complexity': 6, 'col_offset': 4, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'class', 'rank': 'B', 'endline': 326, 'name': 'WordpieceTokenizer', 'lineno': 267, 'complexity': 6, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 273, 'name': '__init__', 'lineno': 270, 'complexity': 1, 'col_offset': 4, 'classname': 'WordpieceTokenizer', 'closures': []}, {'type': 'method', 'rank': 'B', 'endline': 326, 'name': 'tokenize', 'lineno': 275, 'complexity': 9, 'col_offset': 4, 'classname': 'WordpieceTokenizer', 'closures': []}]}, {'type': 'function', 'rank': 'A', 'endline': 350, 'name': '_is_control', 'lineno': 341, 'complexity': 5, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 216, 'name': '_run_split_on_punc', 'lineno': 198, 'complexity': 5, 'col_offset': 4, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'class', 'rank': 'A', 'endline': 151, 'name': 'BertTokenizer', 'lineno': 88, 'complexity': 4, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'endline': 99, 'name': '__init__', 'lineno': 90, 'complexity': 3, 'col_offset': 4, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 106, 'name': 'tokenize', 'lineno': 101, 'complexity': 3, 'col_offset': 4, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 113, 'name': 'convert_tokens_to_ids', 'lineno': 108, 'complexity': 2, 'col_offset': 4, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 120, 'name': 'convert_ids_to_tokens', 'lineno': 115, 'complexity': 2, 'col_offset': 4, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 151, 'name': 'from_pretrained', 'lineno': 123, 'complexity': 4, 'col_offset': 4, 'classname': 'BertTokenizer', 'closures': []}]}, {'type': 'method', 'rank': 'A', 'endline': 151, 'name': 'from_pretrained', 'lineno': 123, 'complexity': 4, 'col_offset': 4, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 48, 'name': 'convert_to_unicode', 'lineno': 41, 'complexity': 3, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 61, 'name': 'printable_text', 'lineno': 51, 'complexity': 3, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 76, 'name': 'load_vocab', 'lineno': 64, 'complexity': 3, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 99, 'name': '__init__', 'lineno': 90, 'complexity': 3, 'col_offset': 4, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 106, 'name': 'tokenize', 'lineno': 101, 'complexity': 3, 'col_offset': 4, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 185, 'name': 'tokenize', 'lineno': 165, 'complexity': 3, 'col_offset': 4, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 196, 'name': '_run_strip_accents', 'lineno': 187, 'complexity': 3, 'col_offset': 4, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 229, 'name': '_tokenize_chinese_chars', 'lineno': 218, 'complexity': 3, 'col_offset': 4, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'function', 'rank': 'A', 'endline': 85, 'name': 'whitespace_tokenize', 'lineno': 79, 'complexity': 2, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 113, 'name': 'convert_tokens_to_ids', 'lineno': 108, 'complexity': 2, 'col_offset': 4, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 120, 'name': 'convert_ids_to_tokens', 'lineno': 115, 'complexity': 2, 'col_offset': 4, 'classname': 'BertTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 163, 'name': '__init__', 'lineno': 157, 'complexity': 1, 'col_offset': 4, 'classname': 'BasicTokenizer', 'closures': []}, {'type': 'method', 'rank': 'A', 'endline': 273, 'name': '__init__', 'lineno': 270, 'complexity': 1, 'col_offset': 4, 'classname': 'WordpieceTokenizer', 'closures': []}]}","{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\setup.py': {'loc': 30, 'lloc': 2, 'sloc': 29, 'comments': 0, 'multi': 0, 'blank': 1, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': {'loc': 112, 'lloc': 68, 'sloc': 82, 'comments': 20, 'multi': 0, 'blank': 9, 'single_comments': 21}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\file_utils.py': {'loc': 233, 'lloc': 149, 'sloc': 138, 'comments': 14, 'multi': 32, 'blank': 48, 'single_comments': 15}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\modeling.py': {'loc': 964, 'lloc': 452, 'sloc': 474, 'comments': 48, 'multi': 291, 'blank': 147, 'single_comments': 52}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\optimization.py': {'loc': 161, 'lloc': 85, 'sloc': 89, 'comments': 31, 'multi': 18, 'blank': 22, 'single_comments': 32}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\tokenization.py': {'loc': 366, 'lloc': 235, 'sloc': 237, 'comments': 47, 'multi': 20, 'blank': 50, 'single_comments': 59}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\__init__.py': {'loc': 5, 'lloc': 3, 'sloc': 5, 'comments': 0, 'multi': 0, 'blank': 0, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\__main__.py': {'loc': 19, 'lloc': 14, 'sloc': 16, 'comments': 2, 'multi': 0, 'blank': 1, 'single_comments': 2}}","{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\setup.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': {'total': [5, 20, 12, 22, 25, 34, 98.04820237218406, 157.89111045234063, 2.75, 434.2005537439367, 24.122252985774264, 0.05263037015078], 'functions': [['convert_tf_checkpoint_to_pytorch', [5, 18, 11, 20, 23, 31, 86.66829050039843, 140.2304206377674, 2.777777777777777, 389.52894621602053, 21.64049701200114, 0.046743473545922]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\file_utils.py': {'total': [9, 32, 19, 33, 41, 52, 188.52932501298082, 278.59270424014034, 4.640625, 1292.8442681144013, 71.82468156191118, 0.092864234746713], 'functions': [['url_to_filename', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['filename_to_url', [3, 6, 4, 6, 9, 10, 20.264662506490406, 31.699250014423125, 1.5, 47.548875021634686, 2.641604167868593, 0.010566416671474]], ['cached_path', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['split_s3_path', [2, 4, 3, 4, 6, 7, 10.0, 18.094737505048094, 1.0, 18.094737505048094, 1.005263194724894, 0.006031579168349]], ['s3_request', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['s3_etag', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['s3_get', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['http_get', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_from_cache', [4, 7, 4, 7, 11, 11, 27.651484454403228, 38.053747805010275, 2.0, 76.10749561002055, 4.228194200556697, 0.012684582601670002]], ['read_set_from_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_file_extension', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\modeling.py': {'total': [14, 91, 79, 135, 105, 214, 645.5122811668878, 1436.8485407805501, 10.384615384615385, 14921.119461951868, 828.9510812195482, 0.47894951359351606], 'functions': [['gelu', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['swish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_dict', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['from_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__repr__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_json_string', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 10, 8, 14, 15, 22, 44.82892142331043, 85.95159310338741, 3.5, 300.83057586185595, 16.712809770103107, 0.028650531034462003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 6, 3, 6, 8, 9, 17.509775004326936, 27.0, 1.0, 27.0, 1.5, 0.009000000000000001]], ['__init__', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['transpose_for_scores', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['forward', [3, 7, 7, 10, 10, 17, 24.406371956566698, 56.472777613085164, 2.1428571428571432, 121.0130948851825, 6.722949715843472, 0.018824259204361]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['init_bert_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['from_pretrained', [7, 17, 10, 19, 24, 29, 89.13835275565901, 132.96391252091354, 3.9117647058823533, 520.1235401553382, 28.895752230852125, 0.044321304173637006]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 9, 8, 12, 14, 20, 40.13896548741762, 76.14709844115208, 3.333333333333333, 253.82366147050695, 14.101314526139275, 0.02538236614705]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 5, 9, 12, 14, 32.0, 50.18947501009619, 2.25, 112.92631877271643, 6.273684376262024, 0.016729825003365003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 12, 12, 19, 18, 31, 58.52932501298082, 129.26767504471167, 4.75, 614.0214564623805, 34.112303136798914, 0.043089225014903004]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\optimization.py': {'total': [16, 66, 51, 89, 82, 140, 462.93001187765793, 890.0572806465318, 10.787878787878787, 9601.830057883797, 533.4350032157665, 0.29668576021551], 'functions': [['warmup_cosine', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['warmup_constant', [2, 2, 2, 4, 4, 6, 4.0, 12.0, 2.0, 24.0, 1.333333333333333, 0.004]], ['warmup_linear', [3, 3, 3, 6, 6, 9, 9.509775004326938, 23.264662506490403, 3.0, 69.79398751947122, 3.877443751081734, 0.007754887502163001]], ['__init__', [8, 18, 18, 26, 26, 44, 99.05865002596161, 206.81934759820808, 5.777777777777778, 1194.9562305674244, 66.3864572537458, 0.068939782532736]], ['get_lr', [5, 9, 5, 9, 14, 14, 40.13896548741762, 53.30296890880645, 2.5, 133.25742227201613, 7.4031901262231194, 0.017767656302935]], ['step', [10, 27, 18, 34, 37, 52, 161.6012435072873, 270.8915750127054, 6.296296296296297, 1705.6136204503675, 94.75631224724265, 0.090297191670901]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\tokenization.py': {'total': [14, 116, 71, 150, 130, 221, 848.8287643436047, 1551.9432866792883, 9.051724137931034, 14047.762508734937, 780.4312504852743, 0.5173144288930961], 'functions': [['convert_to_unicode', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['printable_text', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['load_vocab', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['whitespace_tokenize', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_ids', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_ids_to_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_run_strip_accents', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_run_split_on_punc', [3, 3, 3, 5, 6, 8, 9.509775004326938, 20.67970000576925, 2.5, 51.69925001442312, 2.87218055635684, 0.006893233335256]], ['_tokenize_chinese_chars', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_is_chinese_char', [4, 41, 25, 56, 45, 81, 227.65963218934144, 444.84010080270366, 2.731707317073171, 1215.1729582903126, 67.50960879390625, 0.148280033600901]], ['_clean_text', [2, 6, 3, 7, 8, 10, 17.509775004326936, 30.0, 1.166666666666666, 35.0, 1.9444444444444442, 0.01]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [6, 12, 8, 16, 18, 24, 58.52932501298082, 100.07820003461549, 4.0, 400.31280013846197, 22.23960000769233, 0.033359400011538004]], ['_is_whitespace', [2, 11, 6, 14, 13, 20, 40.053747805010275, 74.00879436282185, 1.272727272727272, 94.1930110072278, 5.232945055957099, 0.024669598120940002]], ['_is_control', [2, 7, 4, 9, 9, 13, 21.651484454403228, 41.20902501875006, 1.2857142857142851, 52.98303216696437, 2.943501787053576, 0.013736341672916002]], ['_is_punctuation', [4, 21, 13, 28, 25, 41, 100.23866587835397, 190.3981037807637, 2.666666666666666, 507.7282767487032, 28.207126486039066, 0.063466034593587]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\__init__.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.1.2\\pytorch_pretrained_bert\\__main__.py': {'total': [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001], 'functions': []}}"
transformers,"{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'C', 'name': 'convert_tf_checkpoint_to_pytorch', 'endline': 87, 'lineno': 30, 'col_offset': 0, 'complexity': 14, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\file_utils.py': [{'type': 'function', 'rank': 'B', 'name': 'cached_path', 'endline': 97, 'lineno': 72, 'col_offset': 0, 'complexity': 6, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'get_from_cache', 'endline': 215, 'lineno': 161, 'col_offset': 0, 'complexity': 6, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'filename_to_url', 'endline': 69, 'lineno': 48, 'col_offset': 0, 'complexity': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'split_s3_path', 'endline': 110, 'lineno': 100, 'col_offset': 0, 'complexity': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'http_get', 'endline': 158, 'lineno': 149, 'col_offset': 0, 'complexity': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'get_file_extension', 'endline': 233, 'lineno': 230, 'col_offset': 0, 'complexity': 3, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'url_to_filename', 'endline': 45, 'lineno': 30, 'col_offset': 0, 'complexity': 2, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'read_set_from_file', 'endline': 227, 'lineno': 218, 'col_offset': 0, 'complexity': 2, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 's3_request', 'endline': 129, 'lineno': 113, 'col_offset': 0, 'complexity': 1, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'wrapper', 'endline': 127, 'lineno': 120, 'col_offset': 4, 'complexity': 3, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 's3_etag', 'endline': 138, 'lineno': 133, 'col_offset': 0, 'complexity': 1, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 's3_get', 'endline': 146, 'lineno': 142, 'col_offset': 0, 'complexity': 1, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\modeling.py': [{'type': 'method', 'rank': 'B', 'classname': 'PreTrainedBertModel', 'name': 'from_pretrained', 'endline': 532, 'lineno': 446, 'col_offset': 4, 'complexity': 10, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'load', 'endline': 521, 'lineno': 515, 'col_offset': 8, 'complexity': 4, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'PreTrainedBertModel', 'endline': 532, 'lineno': 417, 'col_offset': 0, 'complexity': 7, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'PreTrainedBertModel', 'name': '__init__', 'endline': 430, 'lineno': 421, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'PreTrainedBertModel', 'name': 'init_bert_weights', 'endline': 443, 'lineno': 432, 'col_offset': 4, 'complexity': 5, 'closures': []}, {'type': 'method', 'rank': 'B', 'classname': 'PreTrainedBertModel', 'name': 'from_pretrained', 'endline': 532, 'lineno': 446, 'col_offset': 4, 'complexity': 10, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'load', 'endline': 521, 'lineno': 515, 'col_offset': 8, 'complexity': 4, 'closures': []}]}]}, {'type': 'method', 'rank': 'A', 'classname': 'PreTrainedBertModel', 'name': 'init_bert_weights', 'endline': 443, 'lineno': 432, 'col_offset': 4, 'complexity': 5, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForQuestionAnswering', 'name': 'forward', 'endline': 965, 'lineno': 941, 'col_offset': 4, 'complexity': 5, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': '__init__', 'endline': 123, 'lineno': 69, 'col_offset': 4, 'complexity': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertEncoder', 'endline': 333, 'lineno': 319, 'col_offset': 0, 'complexity': 4, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertEncoder', 'name': '__init__', 'endline': 323, 'lineno': 320, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertEncoder', 'name': 'forward', 'endline': 333, 'lineno': 325, 'col_offset': 4, 'complexity': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertEncoder', 'name': 'forward', 'endline': 333, 'lineno': 325, 'col_offset': 4, 'complexity': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertModel', 'endline': 615, 'lineno': 535, 'col_offset': 0, 'complexity': 4, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertModel', 'name': '__init__', 'endline': 584, 'lineno': 579, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertModel', 'name': 'forward', 'endline': 615, 'lineno': 586, 'col_offset': 4, 'complexity': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertModel', 'name': 'forward', 'endline': 615, 'lineno': 586, 'col_offset': 4, 'complexity': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertForQuestionAnswering', 'endline': 965, 'lineno': 878, 'col_offset': 0, 'complexity': 4, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForQuestionAnswering', 'name': '__init__', 'endline': 939, 'lineno': 933, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForQuestionAnswering', 'name': 'forward', 'endline': 965, 'lineno': 941, 'col_offset': 4, 'complexity': 5, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertEmbeddings', 'endline': 198, 'lineno': 170, 'col_offset': 0, 'complexity': 3, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertEmbeddings', 'name': '__init__', 'endline': 182, 'lineno': 173, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertEmbeddings', 'name': 'forward', 'endline': 198, 'lineno': 184, 'col_offset': 4, 'complexity': 2, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertIntermediate', 'endline': 288, 'lineno': 278, 'col_offset': 0, 'complexity': 3, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertIntermediate', 'name': '__init__', 'endline': 283, 'lineno': 279, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertIntermediate', 'name': 'forward', 'endline': 288, 'lineno': 285, 'col_offset': 4, 'complexity': 1, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertPredictionHeadTransform', 'endline': 363, 'lineno': 351, 'col_offset': 0, 'complexity': 3, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertPredictionHeadTransform', 'name': '__init__', 'endline': 357, 'lineno': 352, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPredictionHeadTransform', 'name': 'forward', 'endline': 363, 'lineno': 359, 'col_offset': 4, 'complexity': 1, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForPreTraining', 'endline': 686, 'lineno': 618, 'col_offset': 0, 'complexity': 3, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForPreTraining', 'name': '__init__', 'endline': 672, 'lineno': 668, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForPreTraining', 'name': 'forward', 'endline': 686, 'lineno': 674, 'col_offset': 4, 'complexity': 3, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertForPreTraining', 'name': 'forward', 'endline': 686, 'lineno': 674, 'col_offset': 4, 'complexity': 3, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertForMaskedLM', 'endline': 747, 'lineno': 689, 'col_offset': 0, 'complexity': 3, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForMaskedLM', 'name': '__init__', 'endline': 735, 'lineno': 731, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForMaskedLM', 'name': 'forward', 'endline': 747, 'lineno': 737, 'col_offset': 4, 'complexity': 2, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForNextSentencePrediction', 'endline': 809, 'lineno': 750, 'col_offset': 0, 'complexity': 3, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForNextSentencePrediction', 'name': '__init__', 'endline': 797, 'lineno': 793, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForNextSentencePrediction', 'name': 'forward', 'endline': 809, 'lineno': 799, 'col_offset': 4, 'complexity': 2, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForSequenceClassification', 'endline': 875, 'lineno': 812, 'col_offset': 0, 'complexity': 3, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForSequenceClassification', 'name': '__init__', 'endline': 863, 'lineno': 857, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForSequenceClassification', 'name': 'forward', 'endline': 875, 'lineno': 865, 'col_offset': 4, 'complexity': 2, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertConfig', 'endline': 151, 'lineno': 66, 'col_offset': 0, 'complexity': 2, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': '__init__', 'endline': 123, 'lineno': 69, 'col_offset': 4, 'complexity': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'from_dict', 'endline': 132, 'lineno': 127, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'from_json_file', 'endline': 139, 'lineno': 135, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': '__repr__', 'endline': 142, 'lineno': 141, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'to_dict', 'endline': 147, 'lineno': 144, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'to_json_string', 'endline': 151, 'lineno': 149, 'col_offset': 4, 'complexity': 1, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'from_dict', 'endline': 132, 'lineno': 127, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertLayerNorm', 'endline': 167, 'lineno': 154, 'col_offset': 0, 'complexity': 2, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertLayerNorm', 'name': '__init__', 'endline': 161, 'lineno': 155, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayerNorm', 'name': 'forward', 'endline': 167, 'lineno': 163, 'col_offset': 4, 'complexity': 1, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertEmbeddings', 'name': 'forward', 'endline': 198, 'lineno': 184, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertSelfAttention', 'endline': 249, 'lineno': 201, 'col_offset': 0, 'complexity': 2, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': '__init__', 'endline': 216, 'lineno': 202, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': 'transpose_for_scores', 'endline': 221, 'lineno': 218, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': 'forward', 'endline': 249, 'lineno': 223, 'col_offset': 4, 'complexity': 1, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': '__init__', 'endline': 216, 'lineno': 202, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertSelfOutput', 'endline': 263, 'lineno': 252, 'col_offset': 0, 'complexity': 2, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertSelfOutput', 'name': '__init__', 'endline': 257, 'lineno': 253, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfOutput', 'name': 'forward', 'endline': 263, 'lineno': 259, 'col_offset': 4, 'complexity': 1, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertAttention', 'endline': 275, 'lineno': 266, 'col_offset': 0, 'complexity': 2, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertAttention', 'name': '__init__', 'endline': 270, 'lineno': 267, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertAttention', 'name': 'forward', 'endline': 275, 'lineno': 272, 'col_offset': 4, 'complexity': 1, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertIntermediate', 'name': '__init__', 'endline': 283, 'lineno': 279, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertOutput', 'endline': 302, 'lineno': 291, 'col_offset': 0, 'complexity': 2, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertOutput', 'name': '__init__', 'endline': 296, 'lineno': 292, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOutput', 'name': 'forward', 'endline': 302, 'lineno': 298, 'col_offset': 4, 'complexity': 1, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertLayer', 'endline': 316, 'lineno': 305, 'col_offset': 0, 'complexity': 2, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertLayer', 'name': '__init__', 'endline': 310, 'lineno': 306, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayer', 'name': 'forward', 'endline': 316, 'lineno': 312, 'col_offset': 4, 'complexity': 1, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertEncoder', 'name': '__init__', 'endline': 323, 'lineno': 320, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertPooler', 'endline': 348, 'lineno': 336, 'col_offset': 0, 'complexity': 2, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertPooler', 'name': '__init__', 'endline': 340, 'lineno': 337, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPooler', 'name': 'forward', 'endline': 348, 'lineno': 342, 'col_offset': 4, 'complexity': 1, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertPredictionHeadTransform', 'name': '__init__', 'endline': 357, 'lineno': 352, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertLMPredictionHead', 'endline': 382, 'lineno': 366, 'col_offset': 0, 'complexity': 2, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertLMPredictionHead', 'name': '__init__', 'endline': 377, 'lineno': 367, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLMPredictionHead', 'name': 'forward', 'endline': 382, 'lineno': 379, 'col_offset': 4, 'complexity': 1, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertOnlyMLMHead', 'endline': 392, 'lineno': 385, 'col_offset': 0, 'complexity': 2, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertOnlyMLMHead', 'name': '__init__', 'endline': 388, 'lineno': 386, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyMLMHead', 'name': 'forward', 'endline': 392, 'lineno': 390, 'col_offset': 4, 'complexity': 1, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertOnlyNSPHead', 'endline': 402, 'lineno': 395, 'col_offset': 0, 'complexity': 2, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertOnlyNSPHead', 'name': '__init__', 'endline': 398, 'lineno': 396, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyNSPHead', 'name': 'forward', 'endline': 402, 'lineno': 400, 'col_offset': 4, 'complexity': 1, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertPreTrainingHeads', 'endline': 414, 'lineno': 405, 'col_offset': 0, 'complexity': 2, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertPreTrainingHeads', 'name': '__init__', 'endline': 409, 'lineno': 406, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPreTrainingHeads', 'name': 'forward', 'endline': 414, 'lineno': 411, 'col_offset': 4, 'complexity': 1, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'PreTrainedBertModel', 'name': '__init__', 'endline': 430, 'lineno': 421, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForMaskedLM', 'name': 'forward', 'endline': 747, 'lineno': 737, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForNextSentencePrediction', 'name': 'forward', 'endline': 809, 'lineno': 799, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForSequenceClassification', 'name': 'forward', 'endline': 875, 'lineno': 865, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'gelu', 'endline': 56, 'lineno': 51, 'col_offset': 0, 'complexity': 1, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'swish', 'endline': 60, 'lineno': 59, 'col_offset': 0, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'from_json_file', 'endline': 139, 'lineno': 135, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': '__repr__', 'endline': 142, 'lineno': 141, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'to_dict', 'endline': 147, 'lineno': 144, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'to_json_string', 'endline': 151, 'lineno': 149, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayerNorm', 'name': '__init__', 'endline': 161, 'lineno': 155, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayerNorm', 'name': 'forward', 'endline': 167, 'lineno': 163, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertEmbeddings', 'name': '__init__', 'endline': 182, 'lineno': 173, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': 'transpose_for_scores', 'endline': 221, 'lineno': 218, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': 'forward', 'endline': 249, 'lineno': 223, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfOutput', 'name': '__init__', 'endline': 257, 'lineno': 253, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfOutput', 'name': 'forward', 'endline': 263, 'lineno': 259, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertAttention', 'name': '__init__', 'endline': 270, 'lineno': 267, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertAttention', 'name': 'forward', 'endline': 275, 'lineno': 272, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertIntermediate', 'name': 'forward', 'endline': 288, 'lineno': 285, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOutput', 'name': '__init__', 'endline': 296, 'lineno': 292, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOutput', 'name': 'forward', 'endline': 302, 'lineno': 298, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayer', 'name': '__init__', 'endline': 310, 'lineno': 306, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayer', 'name': 'forward', 'endline': 316, 'lineno': 312, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPooler', 'name': '__init__', 'endline': 340, 'lineno': 337, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPooler', 'name': 'forward', 'endline': 348, 'lineno': 342, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPredictionHeadTransform', 'name': 'forward', 'endline': 363, 'lineno': 359, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLMPredictionHead', 'name': '__init__', 'endline': 377, 'lineno': 367, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLMPredictionHead', 'name': 'forward', 'endline': 382, 'lineno': 379, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyMLMHead', 'name': '__init__', 'endline': 388, 'lineno': 386, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyMLMHead', 'name': 'forward', 'endline': 392, 'lineno': 390, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyNSPHead', 'name': '__init__', 'endline': 398, 'lineno': 396, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyNSPHead', 'name': 'forward', 'endline': 402, 'lineno': 400, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPreTrainingHeads', 'name': '__init__', 'endline': 409, 'lineno': 406, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPreTrainingHeads', 'name': 'forward', 'endline': 414, 'lineno': 411, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertModel', 'name': '__init__', 'endline': 584, 'lineno': 579, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForPreTraining', 'name': '__init__', 'endline': 672, 'lineno': 668, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForMaskedLM', 'name': '__init__', 'endline': 735, 'lineno': 731, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForNextSentencePrediction', 'name': '__init__', 'endline': 797, 'lineno': 793, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForSequenceClassification', 'name': '__init__', 'endline': 863, 'lineno': 857, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForQuestionAnswering', 'name': '__init__', 'endline': 939, 'lineno': 933, 'col_offset': 4, 'complexity': 1, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\optimization.py': [{'type': 'method', 'rank': 'B', 'classname': 'BertAdam', 'name': 'step', 'endline': 161, 'lineno': 93, 'col_offset': 4, 'complexity': 10, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'BertAdam', 'endline': 161, 'lineno': 44, 'col_offset': 0, 'complexity': 9, 'methods': [{'type': 'method', 'rank': 'B', 'classname': 'BertAdam', 'name': '__init__', 'endline': 76, 'lineno': 58, 'col_offset': 4, 'complexity': 8, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertAdam', 'name': 'get_lr', 'endline': 91, 'lineno': 78, 'col_offset': 4, 'complexity': 5, 'closures': []}, {'type': 'method', 'rank': 'B', 'classname': 'BertAdam', 'name': 'step', 'endline': 161, 'lineno': 93, 'col_offset': 4, 'complexity': 10, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'classname': 'BertAdam', 'name': '__init__', 'endline': 76, 'lineno': 58, 'col_offset': 4, 'complexity': 8, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertAdam', 'name': 'get_lr', 'endline': 91, 'lineno': 78, 'col_offset': 4, 'complexity': 5, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'warmup_cosine', 'endline': 25, 'lineno': 22, 'col_offset': 0, 'complexity': 2, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'warmup_constant', 'endline': 30, 'lineno': 27, 'col_offset': 0, 'complexity': 2, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'warmup_linear', 'endline': 35, 'lineno': 32, 'col_offset': 0, 'complexity': 2, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\tokenization.py': [{'type': 'method', 'rank': 'C', 'classname': 'BasicTokenizer', 'name': '_is_chinese_char', 'endline': 240, 'lineno': 220, 'col_offset': 4, 'complexity': 17, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': '_is_punctuation', 'endline': 353, 'lineno': 340, 'col_offset': 0, 'complexity': 10, 'closures': []}, {'type': 'method', 'rank': 'B', 'classname': 'WordpieceTokenizer', 'name': 'tokenize', 'endline': 313, 'lineno': 264, 'col_offset': 4, 'complexity': 9, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': '_is_whitespace', 'endline': 325, 'lineno': 316, 'col_offset': 0, 'complexity': 6, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'BasicTokenizer', 'endline': 253, 'lineno': 144, 'col_offset': 0, 'complexity': 6, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '__init__', 'endline': 153, 'lineno': 147, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': 'tokenize', 'endline': 174, 'lineno': 155, 'col_offset': 4, 'complexity': 3, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_run_strip_accents', 'endline': 185, 'lineno': 176, 'col_offset': 4, 'complexity': 3, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_run_split_on_punc', 'endline': 205, 'lineno': 187, 'col_offset': 4, 'complexity': 5, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_tokenize_chinese_chars', 'endline': 218, 'lineno': 207, 'col_offset': 4, 'complexity': 3, 'closures': []}, {'type': 'method', 'rank': 'C', 'classname': 'BasicTokenizer', 'name': '_is_chinese_char', 'endline': 240, 'lineno': 220, 'col_offset': 4, 'complexity': 17, 'closures': []}, {'type': 'method', 'rank': 'B', 'classname': 'BasicTokenizer', 'name': '_clean_text', 'endline': 253, 'lineno': 242, 'col_offset': 4, 'complexity': 6, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'classname': 'BasicTokenizer', 'name': '_clean_text', 'endline': 253, 'lineno': 242, 'col_offset': 4, 'complexity': 6, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'WordpieceTokenizer', 'endline': 313, 'lineno': 256, 'col_offset': 0, 'complexity': 6, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'WordpieceTokenizer', 'name': '__init__', 'endline': 262, 'lineno': 259, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'B', 'classname': 'WordpieceTokenizer', 'name': 'tokenize', 'endline': 313, 'lineno': 264, 'col_offset': 4, 'complexity': 9, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': '_is_control', 'endline': 337, 'lineno': 328, 'col_offset': 0, 'complexity': 5, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_run_split_on_punc', 'endline': 205, 'lineno': 187, 'col_offset': 4, 'complexity': 5, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertTokenizer', 'endline': 141, 'lineno': 78, 'col_offset': 0, 'complexity': 4, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': '__init__', 'endline': 89, 'lineno': 80, 'col_offset': 4, 'complexity': 3, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'tokenize', 'endline': 96, 'lineno': 91, 'col_offset': 4, 'complexity': 3, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'convert_tokens_to_ids', 'endline': 103, 'lineno': 98, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'convert_ids_to_tokens', 'endline': 110, 'lineno': 105, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'from_pretrained', 'endline': 141, 'lineno': 113, 'col_offset': 4, 'complexity': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'from_pretrained', 'endline': 141, 'lineno': 113, 'col_offset': 4, 'complexity': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'printable_text', 'endline': 51, 'lineno': 41, 'col_offset': 0, 'complexity': 3, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'load_vocab', 'endline': 66, 'lineno': 54, 'col_offset': 0, 'complexity': 3, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': '__init__', 'endline': 89, 'lineno': 80, 'col_offset': 4, 'complexity': 3, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'tokenize', 'endline': 96, 'lineno': 91, 'col_offset': 4, 'complexity': 3, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': 'tokenize', 'endline': 174, 'lineno': 155, 'col_offset': 4, 'complexity': 3, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_run_strip_accents', 'endline': 185, 'lineno': 176, 'col_offset': 4, 'complexity': 3, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_tokenize_chinese_chars', 'endline': 218, 'lineno': 207, 'col_offset': 4, 'complexity': 3, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'whitespace_tokenize', 'endline': 75, 'lineno': 69, 'col_offset': 0, 'complexity': 2, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'convert_tokens_to_ids', 'endline': 103, 'lineno': 98, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'convert_ids_to_tokens', 'endline': 110, 'lineno': 105, 'col_offset': 4, 'complexity': 2, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '__init__', 'endline': 153, 'lineno': 147, 'col_offset': 4, 'complexity': 1, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'WordpieceTokenizer', 'name': '__init__', 'endline': 262, 'lineno': 259, 'col_offset': 4, 'complexity': 1, 'closures': []}]}","{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\setup.py': {'loc': 30, 'lloc': 2, 'sloc': 29, 'comments': 0, 'multi': 0, 'blank': 1, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': {'loc': 112, 'lloc': 68, 'sloc': 82, 'comments': 20, 'multi': 0, 'blank': 9, 'single_comments': 21}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\file_utils.py': {'loc': 233, 'lloc': 149, 'sloc': 138, 'comments': 14, 'multi': 32, 'blank': 48, 'single_comments': 15}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\modeling.py': {'loc': 965, 'lloc': 453, 'sloc': 475, 'comments': 48, 'multi': 291, 'blank': 147, 'single_comments': 52}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\optimization.py': {'loc': 161, 'lloc': 85, 'sloc': 89, 'comments': 31, 'multi': 18, 'blank': 22, 'single_comments': 32}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\tokenization.py': {'loc': 353, 'lloc': 225, 'sloc': 228, 'comments': 47, 'multi': 20, 'blank': 47, 'single_comments': 58}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\__init__.py': {'loc': 6, 'lloc': 4, 'sloc': 6, 'comments': 0, 'multi': 0, 'blank': 0, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\__main__.py': {'loc': 19, 'lloc': 14, 'sloc': 16, 'comments': 2, 'multi': 0, 'blank': 1, 'single_comments': 2}}","{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\setup.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': {'total': [5, 20, 12, 22, 25, 34, 98.04820237218406, 157.89111045234063, 2.75, 434.2005537439367, 24.122252985774264, 0.05263037015078], 'functions': [['convert_tf_checkpoint_to_pytorch', [5, 18, 11, 20, 23, 31, 86.66829050039843, 140.2304206377674, 2.777777777777777, 389.52894621602053, 21.64049701200114, 0.046743473545922]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\file_utils.py': {'total': [9, 32, 19, 33, 41, 52, 188.52932501298082, 278.59270424014034, 4.640625, 1292.8442681144013, 71.82468156191118, 0.092864234746713], 'functions': [['url_to_filename', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['filename_to_url', [3, 6, 4, 6, 9, 10, 20.264662506490406, 31.699250014423125, 1.5, 47.548875021634686, 2.641604167868593, 0.010566416671474]], ['cached_path', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['split_s3_path', [2, 4, 3, 4, 6, 7, 10.0, 18.094737505048094, 1.0, 18.094737505048094, 1.005263194724894, 0.006031579168349]], ['s3_request', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['s3_etag', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['s3_get', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['http_get', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_from_cache', [4, 7, 4, 7, 11, 11, 27.651484454403228, 38.053747805010275, 2.0, 76.10749561002055, 4.228194200556697, 0.012684582601670002]], ['read_set_from_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_file_extension', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\modeling.py': {'total': [14, 91, 89, 145, 105, 234, 645.5122811668878, 1571.1334511338725, 11.153846153846153, 17524.180801108578, 973.5656000615877, 0.523711150377957], 'functions': [['gelu', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['swish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_dict', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['from_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__repr__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_json_string', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 10, 8, 14, 15, 22, 44.82892142331043, 85.95159310338741, 3.5, 300.83057586185595, 16.712809770103107, 0.028650531034462003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 6, 3, 6, 8, 9, 17.509775004326936, 27.0, 1.0, 27.0, 1.5, 0.009000000000000001]], ['__init__', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['transpose_for_scores', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['forward', [3, 7, 7, 10, 10, 17, 24.406371956566698, 56.472777613085164, 2.1428571428571432, 121.0130948851825, 6.722949715843472, 0.018824259204361]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['init_bert_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['from_pretrained', [7, 17, 10, 19, 24, 29, 89.13835275565901, 132.96391252091354, 3.9117647058823533, 520.1235401553382, 28.895752230852125, 0.044321304173637006]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 9, 8, 12, 14, 20, 40.13896548741762, 76.14709844115208, 3.333333333333333, 253.82366147050695, 14.101314526139275, 0.02538236614705]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 9, 13, 12, 22, 32.0, 78.86917501586544, 3.25, 256.3248188015627, 14.240267711197927, 0.026289725005288003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 3, 4, 5, 7, 6.754887502163469, 16.253496664211536, 1.333333333333333, 21.67132888561538, 1.203962715867521, 0.005417832221403]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 12, 12, 19, 18, 31, 58.52932501298082, 129.26767504471167, 4.75, 614.0214564623805, 34.112303136798914, 0.043089225014903004]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\optimization.py': {'total': [16, 66, 51, 89, 82, 140, 462.93001187765793, 890.0572806465318, 10.787878787878787, 9601.830057883797, 533.4350032157665, 0.29668576021551], 'functions': [['warmup_cosine', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['warmup_constant', [2, 2, 2, 4, 4, 6, 4.0, 12.0, 2.0, 24.0, 1.333333333333333, 0.004]], ['warmup_linear', [3, 3, 3, 6, 6, 9, 9.509775004326938, 23.264662506490403, 3.0, 69.79398751947122, 3.877443751081734, 0.007754887502163001]], ['__init__', [8, 18, 18, 26, 26, 44, 99.05865002596161, 206.81934759820808, 5.777777777777778, 1194.9562305674244, 66.3864572537458, 0.068939782532736]], ['get_lr', [5, 9, 5, 9, 14, 14, 40.13896548741762, 53.30296890880645, 2.5, 133.25742227201613, 7.4031901262231194, 0.017767656302935]], ['step', [10, 27, 18, 34, 37, 52, 161.6012435072873, 270.8915750127054, 6.296296296296297, 1705.6136204503675, 94.75631224724265, 0.090297191670901]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\tokenization.py': {'total': [14, 114, 70, 148, 128, 218, 832.252430523587, 1526.0, 9.087719298245615, 13867.859649122807, 770.4366471734893, 0.508666666666666], 'functions': [['printable_text', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['load_vocab', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['whitespace_tokenize', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_ids', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_ids_to_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_run_strip_accents', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_run_split_on_punc', [3, 3, 3, 5, 6, 8, 9.509775004326938, 20.67970000576925, 2.5, 51.69925001442312, 2.87218055635684, 0.006893233335256]], ['_tokenize_chinese_chars', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_is_chinese_char', [4, 41, 25, 56, 45, 81, 227.65963218934144, 444.84010080270366, 2.731707317073171, 1215.1729582903126, 67.50960879390625, 0.148280033600901]], ['_clean_text', [2, 6, 3, 7, 8, 10, 17.509775004326936, 30.0, 1.166666666666666, 35.0, 1.9444444444444442, 0.01]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [6, 12, 8, 16, 18, 24, 58.52932501298082, 100.07820003461549, 4.0, 400.31280013846197, 22.23960000769233, 0.033359400011538004]], ['_is_whitespace', [2, 11, 6, 14, 13, 20, 40.053747805010275, 74.00879436282185, 1.272727272727272, 94.1930110072278, 5.232945055957099, 0.024669598120940002]], ['_is_control', [2, 7, 4, 9, 9, 13, 21.651484454403228, 41.20902501875006, 1.2857142857142851, 52.98303216696437, 2.943501787053576, 0.013736341672916002]], ['_is_punctuation', [4, 21, 13, 28, 25, 41, 100.23866587835397, 190.3981037807637, 2.666666666666666, 507.7282767487032, 28.207126486039066, 0.063466034593587]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\__init__.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.2.0\\pytorch_pretrained_bert\\__main__.py': {'total': [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001], 'functions': []}}"
transformers,"{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': [{'type': 'function', 'rank': 'C', 'name': 'convert_tf_checkpoint_to_pytorch', 'endline': 87, 'complexity': 14, 'lineno': 30, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\file_utils.py': [{'type': 'function', 'rank': 'B', 'name': 'cached_path', 'endline': 97, 'complexity': 6, 'lineno': 72, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': 'get_from_cache', 'endline': 215, 'complexity': 6, 'lineno': 161, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'filename_to_url', 'endline': 69, 'complexity': 4, 'lineno': 48, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'split_s3_path', 'endline': 110, 'complexity': 4, 'lineno': 100, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'http_get', 'endline': 158, 'complexity': 4, 'lineno': 149, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'get_file_extension', 'endline': 233, 'complexity': 3, 'lineno': 230, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'url_to_filename', 'endline': 45, 'complexity': 2, 'lineno': 30, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'read_set_from_file', 'endline': 227, 'complexity': 2, 'lineno': 218, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 's3_request', 'endline': 129, 'complexity': 1, 'lineno': 113, 'col_offset': 0, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'wrapper', 'endline': 127, 'complexity': 3, 'lineno': 120, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 's3_etag', 'endline': 138, 'complexity': 1, 'lineno': 133, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 's3_get', 'endline': 146, 'complexity': 1, 'lineno': 142, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\modeling.py': [{'type': 'method', 'rank': 'B', 'classname': 'PreTrainedBertModel', 'name': 'from_pretrained', 'endline': 534, 'complexity': 10, 'lineno': 448, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'load', 'endline': 523, 'complexity': 4, 'lineno': 517, 'col_offset': 8, 'closures': []}]}, {'type': 'class', 'rank': 'B', 'name': 'PreTrainedBertModel', 'endline': 534, 'complexity': 7, 'lineno': 419, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'PreTrainedBertModel', 'name': '__init__', 'endline': 432, 'complexity': 2, 'lineno': 423, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'PreTrainedBertModel', 'name': 'init_bert_weights', 'endline': 445, 'complexity': 5, 'lineno': 434, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'classname': 'PreTrainedBertModel', 'name': 'from_pretrained', 'endline': 534, 'complexity': 10, 'lineno': 448, 'col_offset': 4, 'closures': [{'type': 'function', 'rank': 'A', 'name': 'load', 'endline': 523, 'complexity': 4, 'lineno': 517, 'col_offset': 8, 'closures': []}]}]}, {'type': 'method', 'rank': 'A', 'classname': 'PreTrainedBertModel', 'name': 'init_bert_weights', 'endline': 445, 'complexity': 5, 'lineno': 434, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForQuestionAnswering', 'name': 'forward', 'endline': 1033, 'complexity': 5, 'lineno': 1009, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': '__init__', 'endline': 125, 'complexity': 4, 'lineno': 71, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertEncoder', 'endline': 335, 'complexity': 4, 'lineno': 321, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertEncoder', 'name': '__init__', 'endline': 325, 'complexity': 2, 'lineno': 322, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertEncoder', 'name': 'forward', 'endline': 335, 'complexity': 4, 'lineno': 327, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertEncoder', 'name': 'forward', 'endline': 335, 'complexity': 4, 'lineno': 327, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertModel', 'endline': 617, 'complexity': 4, 'lineno': 537, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertModel', 'name': '__init__', 'endline': 586, 'complexity': 1, 'lineno': 581, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertModel', 'name': 'forward', 'endline': 617, 'complexity': 4, 'lineno': 588, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertModel', 'name': 'forward', 'endline': 617, 'complexity': 4, 'lineno': 588, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertForQuestionAnswering', 'endline': 1033, 'complexity': 4, 'lineno': 946, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForQuestionAnswering', 'name': '__init__', 'endline': 1007, 'complexity': 1, 'lineno': 1001, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForQuestionAnswering', 'name': 'forward', 'endline': 1033, 'complexity': 5, 'lineno': 1009, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertEmbeddings', 'endline': 200, 'complexity': 3, 'lineno': 172, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertEmbeddings', 'name': '__init__', 'endline': 184, 'complexity': 1, 'lineno': 175, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertEmbeddings', 'name': 'forward', 'endline': 200, 'complexity': 2, 'lineno': 186, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertIntermediate', 'endline': 290, 'complexity': 3, 'lineno': 280, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertIntermediate', 'name': '__init__', 'endline': 285, 'complexity': 2, 'lineno': 281, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertIntermediate', 'name': 'forward', 'endline': 290, 'complexity': 1, 'lineno': 287, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertPredictionHeadTransform', 'endline': 365, 'complexity': 3, 'lineno': 353, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertPredictionHeadTransform', 'name': '__init__', 'endline': 359, 'complexity': 2, 'lineno': 354, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPredictionHeadTransform', 'name': 'forward', 'endline': 365, 'complexity': 1, 'lineno': 361, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForPreTraining', 'endline': 688, 'complexity': 3, 'lineno': 620, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForPreTraining', 'name': '__init__', 'endline': 674, 'complexity': 1, 'lineno': 670, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForPreTraining', 'name': 'forward', 'endline': 688, 'complexity': 3, 'lineno': 676, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertForPreTraining', 'name': 'forward', 'endline': 688, 'complexity': 3, 'lineno': 676, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertForMaskedLM', 'endline': 749, 'complexity': 3, 'lineno': 691, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForMaskedLM', 'name': '__init__', 'endline': 737, 'complexity': 1, 'lineno': 733, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForMaskedLM', 'name': 'forward', 'endline': 749, 'complexity': 2, 'lineno': 739, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForNextSentencePrediction', 'endline': 811, 'complexity': 3, 'lineno': 752, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForNextSentencePrediction', 'name': '__init__', 'endline': 799, 'complexity': 1, 'lineno': 795, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForNextSentencePrediction', 'name': 'forward', 'endline': 811, 'complexity': 2, 'lineno': 801, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForSequenceClassification', 'endline': 877, 'complexity': 3, 'lineno': 814, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForSequenceClassification', 'name': '__init__', 'endline': 865, 'complexity': 1, 'lineno': 859, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForSequenceClassification', 'name': 'forward', 'endline': 877, 'complexity': 2, 'lineno': 867, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertForTokenClassification', 'endline': 943, 'complexity': 3, 'lineno': 880, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertForTokenClassification', 'name': '__init__', 'endline': 931, 'complexity': 1, 'lineno': 925, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForTokenClassification', 'name': 'forward', 'endline': 943, 'complexity': 2, 'lineno': 933, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertConfig', 'endline': 153, 'complexity': 2, 'lineno': 68, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': '__init__', 'endline': 125, 'complexity': 4, 'lineno': 71, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'from_dict', 'endline': 134, 'complexity': 2, 'lineno': 129, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'from_json_file', 'endline': 141, 'complexity': 1, 'lineno': 137, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': '__repr__', 'endline': 144, 'complexity': 1, 'lineno': 143, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'to_dict', 'endline': 149, 'complexity': 1, 'lineno': 146, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'to_json_string', 'endline': 153, 'complexity': 1, 'lineno': 151, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'from_dict', 'endline': 134, 'complexity': 2, 'lineno': 129, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertLayerNorm', 'endline': 169, 'complexity': 2, 'lineno': 156, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertLayerNorm', 'name': '__init__', 'endline': 163, 'complexity': 1, 'lineno': 157, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayerNorm', 'name': 'forward', 'endline': 169, 'complexity': 1, 'lineno': 165, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertEmbeddings', 'name': 'forward', 'endline': 200, 'complexity': 2, 'lineno': 186, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertSelfAttention', 'endline': 251, 'complexity': 2, 'lineno': 203, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': '__init__', 'endline': 218, 'complexity': 2, 'lineno': 204, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': 'transpose_for_scores', 'endline': 223, 'complexity': 1, 'lineno': 220, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': 'forward', 'endline': 251, 'complexity': 1, 'lineno': 225, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': '__init__', 'endline': 218, 'complexity': 2, 'lineno': 204, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertSelfOutput', 'endline': 265, 'complexity': 2, 'lineno': 254, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertSelfOutput', 'name': '__init__', 'endline': 259, 'complexity': 1, 'lineno': 255, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfOutput', 'name': 'forward', 'endline': 265, 'complexity': 1, 'lineno': 261, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertAttention', 'endline': 277, 'complexity': 2, 'lineno': 268, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertAttention', 'name': '__init__', 'endline': 272, 'complexity': 1, 'lineno': 269, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertAttention', 'name': 'forward', 'endline': 277, 'complexity': 1, 'lineno': 274, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertIntermediate', 'name': '__init__', 'endline': 285, 'complexity': 2, 'lineno': 281, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertOutput', 'endline': 304, 'complexity': 2, 'lineno': 293, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertOutput', 'name': '__init__', 'endline': 298, 'complexity': 1, 'lineno': 294, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOutput', 'name': 'forward', 'endline': 304, 'complexity': 1, 'lineno': 300, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertLayer', 'endline': 318, 'complexity': 2, 'lineno': 307, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertLayer', 'name': '__init__', 'endline': 312, 'complexity': 1, 'lineno': 308, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayer', 'name': 'forward', 'endline': 318, 'complexity': 1, 'lineno': 314, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertEncoder', 'name': '__init__', 'endline': 325, 'complexity': 2, 'lineno': 322, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertPooler', 'endline': 350, 'complexity': 2, 'lineno': 338, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertPooler', 'name': '__init__', 'endline': 342, 'complexity': 1, 'lineno': 339, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPooler', 'name': 'forward', 'endline': 350, 'complexity': 1, 'lineno': 344, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'BertPredictionHeadTransform', 'name': '__init__', 'endline': 359, 'complexity': 2, 'lineno': 354, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertLMPredictionHead', 'endline': 384, 'complexity': 2, 'lineno': 368, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertLMPredictionHead', 'name': '__init__', 'endline': 379, 'complexity': 1, 'lineno': 369, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLMPredictionHead', 'name': 'forward', 'endline': 384, 'complexity': 1, 'lineno': 381, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertOnlyMLMHead', 'endline': 394, 'complexity': 2, 'lineno': 387, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertOnlyMLMHead', 'name': '__init__', 'endline': 390, 'complexity': 1, 'lineno': 388, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyMLMHead', 'name': 'forward', 'endline': 394, 'complexity': 1, 'lineno': 392, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertOnlyNSPHead', 'endline': 404, 'complexity': 2, 'lineno': 397, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertOnlyNSPHead', 'name': '__init__', 'endline': 400, 'complexity': 1, 'lineno': 398, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyNSPHead', 'name': 'forward', 'endline': 404, 'complexity': 1, 'lineno': 402, 'col_offset': 4, 'closures': []}]}, {'type': 'class', 'rank': 'A', 'name': 'BertPreTrainingHeads', 'endline': 416, 'complexity': 2, 'lineno': 407, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertPreTrainingHeads', 'name': '__init__', 'endline': 411, 'complexity': 1, 'lineno': 408, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPreTrainingHeads', 'name': 'forward', 'endline': 416, 'complexity': 1, 'lineno': 413, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'A', 'classname': 'PreTrainedBertModel', 'name': '__init__', 'endline': 432, 'complexity': 2, 'lineno': 423, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForMaskedLM', 'name': 'forward', 'endline': 749, 'complexity': 2, 'lineno': 739, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForNextSentencePrediction', 'name': 'forward', 'endline': 811, 'complexity': 2, 'lineno': 801, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForSequenceClassification', 'name': 'forward', 'endline': 877, 'complexity': 2, 'lineno': 867, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForTokenClassification', 'name': 'forward', 'endline': 943, 'complexity': 2, 'lineno': 933, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'gelu', 'endline': 58, 'complexity': 1, 'lineno': 53, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'swish', 'endline': 62, 'complexity': 1, 'lineno': 61, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'from_json_file', 'endline': 141, 'complexity': 1, 'lineno': 137, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': '__repr__', 'endline': 144, 'complexity': 1, 'lineno': 143, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'to_dict', 'endline': 149, 'complexity': 1, 'lineno': 146, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertConfig', 'name': 'to_json_string', 'endline': 153, 'complexity': 1, 'lineno': 151, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayerNorm', 'name': '__init__', 'endline': 163, 'complexity': 1, 'lineno': 157, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayerNorm', 'name': 'forward', 'endline': 169, 'complexity': 1, 'lineno': 165, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertEmbeddings', 'name': '__init__', 'endline': 184, 'complexity': 1, 'lineno': 175, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': 'transpose_for_scores', 'endline': 223, 'complexity': 1, 'lineno': 220, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfAttention', 'name': 'forward', 'endline': 251, 'complexity': 1, 'lineno': 225, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfOutput', 'name': '__init__', 'endline': 259, 'complexity': 1, 'lineno': 255, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertSelfOutput', 'name': 'forward', 'endline': 265, 'complexity': 1, 'lineno': 261, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertAttention', 'name': '__init__', 'endline': 272, 'complexity': 1, 'lineno': 269, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertAttention', 'name': 'forward', 'endline': 277, 'complexity': 1, 'lineno': 274, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertIntermediate', 'name': 'forward', 'endline': 290, 'complexity': 1, 'lineno': 287, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOutput', 'name': '__init__', 'endline': 298, 'complexity': 1, 'lineno': 294, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOutput', 'name': 'forward', 'endline': 304, 'complexity': 1, 'lineno': 300, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayer', 'name': '__init__', 'endline': 312, 'complexity': 1, 'lineno': 308, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLayer', 'name': 'forward', 'endline': 318, 'complexity': 1, 'lineno': 314, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPooler', 'name': '__init__', 'endline': 342, 'complexity': 1, 'lineno': 339, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPooler', 'name': 'forward', 'endline': 350, 'complexity': 1, 'lineno': 344, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPredictionHeadTransform', 'name': 'forward', 'endline': 365, 'complexity': 1, 'lineno': 361, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLMPredictionHead', 'name': '__init__', 'endline': 379, 'complexity': 1, 'lineno': 369, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertLMPredictionHead', 'name': 'forward', 'endline': 384, 'complexity': 1, 'lineno': 381, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyMLMHead', 'name': '__init__', 'endline': 390, 'complexity': 1, 'lineno': 388, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyMLMHead', 'name': 'forward', 'endline': 394, 'complexity': 1, 'lineno': 392, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyNSPHead', 'name': '__init__', 'endline': 400, 'complexity': 1, 'lineno': 398, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertOnlyNSPHead', 'name': 'forward', 'endline': 404, 'complexity': 1, 'lineno': 402, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPreTrainingHeads', 'name': '__init__', 'endline': 411, 'complexity': 1, 'lineno': 408, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertPreTrainingHeads', 'name': 'forward', 'endline': 416, 'complexity': 1, 'lineno': 413, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertModel', 'name': '__init__', 'endline': 586, 'complexity': 1, 'lineno': 581, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForPreTraining', 'name': '__init__', 'endline': 674, 'complexity': 1, 'lineno': 670, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForMaskedLM', 'name': '__init__', 'endline': 737, 'complexity': 1, 'lineno': 733, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForNextSentencePrediction', 'name': '__init__', 'endline': 799, 'complexity': 1, 'lineno': 795, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForSequenceClassification', 'name': '__init__', 'endline': 865, 'complexity': 1, 'lineno': 859, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForTokenClassification', 'name': '__init__', 'endline': 931, 'complexity': 1, 'lineno': 925, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertForQuestionAnswering', 'name': '__init__', 'endline': 1007, 'complexity': 1, 'lineno': 1001, 'col_offset': 4, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\optimization.py': [{'type': 'method', 'rank': 'B', 'classname': 'BertAdam', 'name': 'step', 'endline': 161, 'complexity': 10, 'lineno': 93, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'BertAdam', 'endline': 161, 'complexity': 9, 'lineno': 44, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'B', 'classname': 'BertAdam', 'name': '__init__', 'endline': 76, 'complexity': 8, 'lineno': 58, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertAdam', 'name': 'get_lr', 'endline': 91, 'complexity': 5, 'lineno': 78, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'classname': 'BertAdam', 'name': 'step', 'endline': 161, 'complexity': 10, 'lineno': 93, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'classname': 'BertAdam', 'name': '__init__', 'endline': 76, 'complexity': 8, 'lineno': 58, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertAdam', 'name': 'get_lr', 'endline': 91, 'complexity': 5, 'lineno': 78, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'warmup_cosine', 'endline': 25, 'complexity': 2, 'lineno': 22, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'warmup_constant', 'endline': 30, 'complexity': 2, 'lineno': 27, 'col_offset': 0, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'warmup_linear', 'endline': 35, 'complexity': 2, 'lineno': 32, 'col_offset': 0, 'closures': []}], 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\tokenization.py': [{'type': 'method', 'rank': 'C', 'classname': 'BasicTokenizer', 'name': '_is_chinese_char', 'endline': 233, 'complexity': 17, 'lineno': 213, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': '_is_punctuation', 'endline': 346, 'complexity': 10, 'lineno': 333, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'B', 'classname': 'WordpieceTokenizer', 'name': 'tokenize', 'endline': 306, 'complexity': 9, 'lineno': 257, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'B', 'name': '_is_whitespace', 'endline': 318, 'complexity': 6, 'lineno': 309, 'col_offset': 0, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'BasicTokenizer', 'endline': 246, 'complexity': 6, 'lineno': 137, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '__init__', 'endline': 146, 'complexity': 1, 'lineno': 140, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': 'tokenize', 'endline': 167, 'complexity': 3, 'lineno': 148, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_run_strip_accents', 'endline': 178, 'complexity': 3, 'lineno': 169, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_run_split_on_punc', 'endline': 198, 'complexity': 5, 'lineno': 180, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_tokenize_chinese_chars', 'endline': 211, 'complexity': 3, 'lineno': 200, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'C', 'classname': 'BasicTokenizer', 'name': '_is_chinese_char', 'endline': 233, 'complexity': 17, 'lineno': 213, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'classname': 'BasicTokenizer', 'name': '_clean_text', 'endline': 246, 'complexity': 6, 'lineno': 235, 'col_offset': 4, 'closures': []}]}, {'type': 'method', 'rank': 'B', 'classname': 'BasicTokenizer', 'name': '_clean_text', 'endline': 246, 'complexity': 6, 'lineno': 235, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'B', 'name': 'WordpieceTokenizer', 'endline': 306, 'complexity': 6, 'lineno': 249, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'WordpieceTokenizer', 'name': '__init__', 'endline': 255, 'complexity': 1, 'lineno': 252, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'B', 'classname': 'WordpieceTokenizer', 'name': 'tokenize', 'endline': 306, 'complexity': 9, 'lineno': 257, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': '_is_control', 'endline': 330, 'complexity': 5, 'lineno': 321, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'from_pretrained', 'endline': 134, 'complexity': 5, 'lineno': 104, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_run_split_on_punc', 'endline': 198, 'complexity': 5, 'lineno': 180, 'col_offset': 4, 'closures': []}, {'type': 'class', 'rank': 'A', 'name': 'BertTokenizer', 'endline': 134, 'complexity': 4, 'lineno': 69, 'col_offset': 0, 'methods': [{'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': '__init__', 'endline': 80, 'complexity': 3, 'lineno': 71, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'tokenize', 'endline': 87, 'complexity': 3, 'lineno': 82, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'convert_tokens_to_ids', 'endline': 94, 'complexity': 2, 'lineno': 89, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'convert_ids_to_tokens', 'endline': 101, 'complexity': 2, 'lineno': 96, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'from_pretrained', 'endline': 134, 'complexity': 5, 'lineno': 104, 'col_offset': 4, 'closures': []}]}, {'type': 'function', 'rank': 'A', 'name': 'load_vocab', 'endline': 57, 'complexity': 3, 'lineno': 45, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': '__init__', 'endline': 80, 'complexity': 3, 'lineno': 71, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'tokenize', 'endline': 87, 'complexity': 3, 'lineno': 82, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': 'tokenize', 'endline': 167, 'complexity': 3, 'lineno': 148, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_run_strip_accents', 'endline': 178, 'complexity': 3, 'lineno': 169, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '_tokenize_chinese_chars', 'endline': 211, 'complexity': 3, 'lineno': 200, 'col_offset': 4, 'closures': []}, {'type': 'function', 'rank': 'A', 'name': 'whitespace_tokenize', 'endline': 66, 'complexity': 2, 'lineno': 60, 'col_offset': 0, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'convert_tokens_to_ids', 'endline': 94, 'complexity': 2, 'lineno': 89, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BertTokenizer', 'name': 'convert_ids_to_tokens', 'endline': 101, 'complexity': 2, 'lineno': 96, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'BasicTokenizer', 'name': '__init__', 'endline': 146, 'complexity': 1, 'lineno': 140, 'col_offset': 4, 'closures': []}, {'type': 'method', 'rank': 'A', 'classname': 'WordpieceTokenizer', 'name': '__init__', 'endline': 255, 'complexity': 1, 'lineno': 252, 'col_offset': 4, 'closures': []}]}","{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\setup.py': {'loc': 30, 'lloc': 2, 'sloc': 29, 'comments': 0, 'multi': 0, 'blank': 1, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': {'loc': 112, 'lloc': 68, 'sloc': 82, 'comments': 20, 'multi': 0, 'blank': 9, 'single_comments': 21}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\file_utils.py': {'loc': 233, 'lloc': 149, 'sloc': 138, 'comments': 14, 'multi': 32, 'blank': 48, 'single_comments': 15}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\modeling.py': {'loc': 1033, 'lloc': 472, 'sloc': 495, 'comments': 48, 'multi': 328, 'blank': 158, 'single_comments': 52}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\optimization.py': {'loc': 161, 'lloc': 85, 'sloc': 89, 'comments': 31, 'multi': 18, 'blank': 22, 'single_comments': 32}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\tokenization.py': {'loc': 346, 'lloc': 220, 'sloc': 226, 'comments': 45, 'multi': 20, 'blank': 45, 'single_comments': 55}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\__init__.py': {'loc': 7, 'lloc': 4, 'sloc': 7, 'comments': 0, 'multi': 0, 'blank': 0, 'single_comments': 0}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\__main__.py': {'loc': 19, 'lloc': 14, 'sloc': 16, 'comments': 2, 'multi': 0, 'blank': 1, 'single_comments': 2}}","{'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\setup.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\convert_tf_checkpoint_to_pytorch.py': {'total': [5, 20, 12, 22, 25, 34, 98.04820237218406, 157.89111045234063, 2.75, 434.2005537439367, 24.122252985774264, 0.05263037015078], 'functions': [['convert_tf_checkpoint_to_pytorch', [5, 18, 11, 20, 23, 31, 86.66829050039843, 140.2304206377674, 2.777777777777777, 389.52894621602053, 21.64049701200114, 0.046743473545922]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\file_utils.py': {'total': [9, 32, 19, 33, 41, 52, 188.52932501298082, 278.59270424014034, 4.640625, 1292.8442681144013, 71.82468156191118, 0.092864234746713], 'functions': [['url_to_filename', [1, 4, 2, 4, 5, 6, 8.0, 13.931568569324174, 0.5, 6.965784284662087, 0.38698801581456005, 0.004643856189774]], ['filename_to_url', [3, 6, 4, 6, 9, 10, 20.264662506490406, 31.699250014423125, 1.5, 47.548875021634686, 2.641604167868593, 0.010566416671474]], ['cached_path', [3, 5, 3, 6, 8, 9, 16.36452797660028, 27.0, 1.8, 48.6, 2.7, 0.009000000000000001]], ['split_s3_path', [2, 4, 3, 4, 6, 7, 10.0, 18.094737505048094, 1.0, 18.094737505048094, 1.005263194724894, 0.006031579168349]], ['s3_request', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['s3_etag', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['s3_get', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['http_get', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['get_from_cache', [4, 7, 4, 7, 11, 11, 27.651484454403228, 38.053747805010275, 2.0, 76.10749561002055, 4.228194200556697, 0.012684582601670002]], ['read_set_from_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['get_file_extension', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\modeling.py': {'total': [14, 91, 92, 149, 105, 241, 645.5122811668878, 1618.1331697575356, 11.461538461538462, 18546.295561067138, 1030.3497533926188, 0.539377723252511], 'functions': [['gelu', [3, 7, 4, 8, 10, 12, 24.406371956566698, 39.863137138648355, 1.714285714285714, 68.33680652339717, 3.796489251299843, 0.013287712379549002]], ['swish', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_dict', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['from_json_file', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__repr__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_dict', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['to_json_string', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 10, 8, 14, 15, 22, 44.82892142331043, 85.95159310338741, 3.5, 300.83057586185595, 16.712809770103107, 0.028650531034462003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 6, 3, 6, 8, 9, 17.509775004326936, 27.0, 1.0, 27.0, 1.5, 0.009000000000000001]], ['__init__', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['transpose_for_scores', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['forward', [3, 7, 7, 10, 10, 17, 24.406371956566698, 56.472777613085164, 2.1428571428571432, 121.0130948851825, 6.722949715843472, 0.018824259204361]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['init_bert_weights', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['from_pretrained', [7, 17, 10, 19, 24, 29, 89.13835275565901, 132.96391252091354, 3.9117647058823533, 520.1235401553382, 28.895752230852125, 0.044321304173637006]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [5, 9, 8, 12, 14, 20, 40.13896548741762, 76.14709844115208, 3.333333333333333, 253.82366147050695, 14.101314526139275, 0.02538236614705]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [4, 8, 9, 13, 12, 22, 32.0, 78.86917501586544, 3.25, 256.3248188015627, 14.240267711197927, 0.026289725005288003]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 4, 5, 5, 9, 6.754887502163469, 20.89735285398626, 1.666666666666666, 34.82892142331043, 1.934940079072801, 0.006965784284662001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 3, 4, 5, 7, 6.754887502163469, 16.253496664211536, 1.333333333333333, 21.67132888561538, 1.203962715867521, 0.005417832221403]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [2, 3, 3, 4, 5, 7, 6.754887502163469, 16.253496664211536, 1.333333333333333, 21.67132888561538, 1.203962715867521, 0.005417832221403]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['forward', [6, 12, 12, 19, 18, 31, 58.52932501298082, 129.26767504471167, 4.75, 614.0214564623805, 34.112303136798914, 0.043089225014903004]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\optimization.py': {'total': [16, 66, 51, 89, 82, 140, 462.93001187765793, 890.0572806465318, 10.787878787878787, 9601.830057883797, 533.4350032157665, 0.29668576021551], 'functions': [['warmup_cosine', [4, 7, 5, 10, 11, 15, 27.651484454403228, 51.89147427955947, 2.857142857142857, 148.26135508445563, 8.236741949136423, 0.017297158093186]], ['warmup_constant', [2, 2, 2, 4, 4, 6, 4.0, 12.0, 2.0, 24.0, 1.333333333333333, 0.004]], ['warmup_linear', [3, 3, 3, 6, 6, 9, 9.509775004326938, 23.264662506490403, 3.0, 69.79398751947122, 3.877443751081734, 0.007754887502163001]], ['__init__', [8, 18, 18, 26, 26, 44, 99.05865002596161, 206.81934759820808, 5.777777777777778, 1194.9562305674244, 66.3864572537458, 0.068939782532736]], ['get_lr', [5, 9, 5, 9, 14, 14, 40.13896548741762, 53.30296890880645, 2.5, 133.25742227201613, 7.4031901262231194, 0.017767656302935]], ['step', [10, 27, 18, 34, 37, 52, 161.6012435072873, 270.8915750127054, 6.296296296296297, 1705.6136204503675, 94.75631224724265, 0.090297191670901]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\tokenization.py': {'total': [13, 112, 69, 146, 125, 215, 810.5294676062858, 1497.6436212023489, 8.473214285714286, 12689.855326080618, 704.9919625600344, 0.49921454040078206], 'functions': [['load_vocab', [2, 3, 2, 3, 5, 5, 6.754887502163469, 11.60964047443681, 1.0, 11.60964047443681, 0.6449800263576001, 0.003869880158145]], ['whitespace_tokenize', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['__init__', [1, 1, 1, 1, 2, 2, 0.0, 2.0, 0.5, 1.0, 0.055555555555555004, 0.0006666666666660001]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_tokens_to_ids', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['convert_ids_to_tokens', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['from_pretrained', [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_run_strip_accents', [1, 2, 1, 2, 3, 3, 2.0, 4.754887502163469, 0.5, 2.377443751081734, 0.13208020839342902, 0.0015849625007210001]], ['_run_split_on_punc', [3, 3, 3, 5, 6, 8, 9.509775004326938, 20.67970000576925, 2.5, 51.69925001442312, 2.87218055635684, 0.006893233335256]], ['_tokenize_chinese_chars', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['_is_chinese_char', [4, 41, 25, 56, 45, 81, 227.65963218934144, 444.84010080270366, 2.731707317073171, 1215.1729582903126, 67.50960879390625, 0.148280033600901]], ['_clean_text', [2, 6, 3, 7, 8, 10, 17.509775004326936, 30.0, 1.166666666666666, 35.0, 1.9444444444444442, 0.01]], ['__init__', [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0]], ['tokenize', [6, 12, 8, 16, 18, 24, 58.52932501298082, 100.07820003461549, 4.0, 400.31280013846197, 22.23960000769233, 0.033359400011538004]], ['_is_whitespace', [2, 11, 6, 14, 13, 20, 40.053747805010275, 74.00879436282185, 1.272727272727272, 94.1930110072278, 5.232945055957099, 0.024669598120940002]], ['_is_control', [2, 7, 4, 9, 9, 13, 21.651484454403228, 41.20902501875006, 1.2857142857142851, 52.98303216696437, 2.943501787053576, 0.013736341672916002]], ['_is_punctuation', [4, 21, 13, 28, 25, 41, 100.23866587835397, 190.3981037807637, 2.666666666666666, 507.7282767487032, 28.207126486039066, 0.063466034593587]]]}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\__init__.py': {'total': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0], 'functions': []}, 'temp\\releases-downloaded\\pytorch_pretrained_bert-0.3.0\\pytorch_pretrained_bert\\__main__.py': {'total': [2, 4, 2, 4, 6, 6, 10.0, 15.509775004326936, 1.0, 15.509775004326936, 0.8616541669070521, 0.005169925001442001], 'functions': []}}"
